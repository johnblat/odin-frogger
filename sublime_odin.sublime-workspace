{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"level",
				"level_end_timer"
			],
			[
				"global_num",
				"global_number_grid_cells_axis_y"
			],
			[
				"SetTexture",
				"SetTextureWrap(texture: Texture2D, wrap: TextureWrap)"
			],
			[
				"left",
				"left_warp_locations_for_y_level_4"
			],
			[
				"otter",
				"otter_spawn_descriptions_level_3"
			],
			[
				"SetTe",
				"SetTextureWrap(texture: Texture2D, wrap: TextureWrap)"
			],
			[
				"draw_text",
				"draw_text_on_grid_right_justified(font: raylib.Font, text: cstring, pos: [2]f32, size, spacing: f32, tint: raylib.Color, grid_cell_size: f32)"
			],
			[
				"dbg_show",
				"dbg_show_level"
			],
			[
				"show",
				"dbg_show_level"
			],
			[
				"Snake",
				"Snake_Behavior_State"
			],
			[
				"timer_croc",
				"timer_crocodile_peek"
			],
			[
				"dbg_",
				"dbg_speed_multiplier"
			],
			[
				"dbg",
				"dbg_timer_lose_life_pause"
			],
			[
				"Frogger",
				"Frogger_Dying_Hit"
			],
			[
				"is_otter",
				"is_otter_intersecting_with_any_entities"
			],
			[
				"global",
				"global_number_grid_cells_axis_x"
			],
			[
				"current",
				"current_otter_spawn_data_id"
			],
			[
				"curren",
				"current_otter_spawn_data_id"
			],
			[
				"frogs",
				"is_frogs_on_lilypad"
			],
			[
				"timer",
				"timer_crocodile_attack"
			],
			[
				"global_sprite",
				"global_sprite_sheet_cell_size"
			],
			[
				"lilypad",
				"lilypad_rectangle"
			],
			[
				"frogger",
				"frogger_center_pos"
			],
			[
				"should_check",
				"should_check_pre_win_condition_frogger_is_killed"
			],
			[
				"timer_cro",
				"timer_crocodile_inactive"
			],
			[
				"timer_",
				"timer_crocodile_inactive"
			],
			[
				"snake",
				"snake_is_beyond_left_side_of_screen"
			],
			[
				"entity",
				"entity_that_snake_is_on"
			],
			[
				"should",
				"should_switch_to_snake_median_mode"
			],
			[
				"rel",
				"rel_right_turnaround_boundary"
			],
			[
				"is",
				"is_frogger_intersecting_snake_hitbox"
			],
			[
				"CheckCollision",
				"CheckCollisionPointRec(point: Vector2, rec: Rectangle) "
			],
			[
				"RIG",
				"RIGHT_BRACKET"
			],
			[
				"LEFT",
				"LEFT_BRACKET"
			],
			[
				"BRACK",
				"RIGHT_BRACKET"
			],
			[
				"Begin",
				"BeginMode2D(camera: Camera2D)"
			],
			[
				"IsMusic",
				"IsMusicValid(music: Music) "
			],
			[
				"SetMusic",
				"SetMusicVolume(music: Music, volume: f32)"
			],
			[
				"Play",
				"PlayMusicStream(music: Music)"
			],
			[
				"animation_get",
				"animation_get_frame_sprite_clip_id(t, fps: f32, frame_clips: []Sprite_Clip_Id) "
			],
			[
				"animation_frames",
				"animation_frames_frogger_dying_hit"
			],
			[
				"animat",
				"animation_id"
			],
			[
				"animation",
				"animation_players"
			],
			[
				"Animation",
				"Animation_Player_Id"
			],
			[
				"global_number_grid_cells",
				"global_number_grid_cells_axis_y"
			],
			[
				"IsKey",
				"IsKeyPressed(key: KeyboardKey) "
			],
			[
				"draw_tex",
				"draw_text_on_grid_centered(font: raylib.Font, text: cstring, pos: [2]f32, size, spacing: f32, tint: raylib.Color, grid_cell_size: f32)"
			],
			[
				"frogger_is",
				"frogger_is_dying_splat_animation_frames"
			],
			[
				"relative",
				"alligator_hit_box_relative_mouth_open"
			],
			[
				"Alligator",
				"Alligator_Mouth_Open"
			],
			[
				"animation_get_c",
				"animation_get_frame_sprite_clip_id(t, fps: f32, frame_clips: []Sprite_Sheet_Clip) "
			],
			[
				"global_",
				"global_sprite_sheet_clips"
			],
			[
				"Alligator_M",
				"Alligator_Mouth_Open"
			],
			[
				"Sprite",
				"Sprite_Sheet_Clip"
			],
			[
				"global_cell",
				"global_sprite_sheet_cell_size"
			],
			[
				"sprite",
				"texture_sprite_sheet"
			],
			[
				"draw",
				"draw_grid_texture_clip_on_grid(tex: raylib.Texture2D, src_rectangle: raylib.Rectangle, src_grid_cell_size: f32, dst_rectangle: raylib.Rectangle, dst_grid_cell_size, rotation: f32)"
			],
			[
				"Monitor",
				"GetMonitorCount() "
			],
			[
				"LoadS",
				"LoadShader(vsFileName, fsFileName: cstring) "
			],
			[
				"EndS",
				"EndShaderMode()"
			],
			[
				"bytes",
				"bytes_aa_pixel_filter_shader"
			],
			[
				"frogger_is_dying",
				"frogger_is_dying_ripple_animation_frames"
			],
			[
				"fly",
				"fly_is_active"
			],
			[
				"SetWindow",
				"SetWindowState(flags: ConfigFlags)"
			],
			[
				"default",
				"default_window_width"
			],
			[
				"GetMon",
				"GetMonitorHeight(monitor: c.int) "
			],
			[
				"monitor",
				"monitor_id"
			],
			[
				"GetMoni",
				"GetMonitorPosition(monitor: c.int) "
			],
			[
				"monito",
				"GetCurrentMonitor() "
			],
			[
				"Moni",
				"GetMonitorWidth(monitor: c.int) "
			],
			[
				"window",
				"window_width"
			],
			[
				"game",
				"game_shutdown()"
			],
			[
				"write",
				"write_ptr(f: ^File, data: rawptr, len: int) "
			],
			[
				"Getwindow",
				"GetWindowPosition() "
			],
			[
				"Screen",
				"GetScreenWidth() "
			],
			[
				"frogger_deat",
				"frogger_death_anim_timer"
			],
			[
				"draw_sprite",
				"draw_sprite_sheet_rectangle_clip_on_grid(sprite_sheet: raylib.Texture2D, src_grid, dst_grid: raylib.Rectangle, src_cell_size, dst_cell_size, rotation: f32)"
			],
			[
				"is_frogger",
				"is_lily_on_frogger"
			],
			[
				"Check",
				"CheckCollisionPointRec(point: Vector2, rec: Rectangle) "
			],
			[
				"lily",
				"lily_log_to_spawn_on_index"
			],
			[
				"lily_",
				"lily_relative_log_pos_x"
			],
			[
				"global_game",
				"global_game_view_pixels_height"
			],
			[
				"score",
				"score_frogger_max_y_tracker"
			],
			[
				"one_up",
				"one_up_pos_right_justified_x"
			],
			[
				"score_text_",
				"score_text_right_justified_pos_x"
			],
			[
				"MeasureText",
				"MeasureTextEx(font: Font, text: cstring, fontSize: f32, spacing: f32) "
			],
			[
				"ct",
				"ctprint(args: ..any, sep := \" \") "
			],
			[
				"tprin",
				"tprint(args: ..any, sep := \" \") "
			],
			[
				"dst_",
				"dst_midpoint"
			],
			[
				"cstrin",
				"clone_to_cstring(s: string, allocator := context.allocator, loc := #caller_location) "
			],
			[
				"LoadFontFrom",
				"LoadFontFromMemory(fileType: cstring, fileData: rawptr, dataSize: c.int, fontSize: c.int, codepoints: [^]rune, codepointCount: c.int) "
			],
			[
				"duration",
				"frogger_move_lerp_duration"
			],
			[
				"lerp",
				"frogger_move_lerp_duration"
			],
			[
				"fly_",
				"fly_lilypad_index"
			],
			[
				"frogger_death",
				"frogger_death_anim_timer"
			],
			[
				"is_",
				"is_frogger_death_anim_playing"
			],
			[
				"texture",
				"texture_sprite_sheet"
			],
			[
				"get_anim_current",
				"get_anim_current_frame_sprite_sheet_clip(t, fps: f32, frame_clips: []rl.Rectangle) "
			],
			[
				"frogger_dea",
				"frogger_death_anim_frames"
			],
			[
				"frames",
				"frogger_anim_frames"
			],
			[
				"frogger_death_anim",
				"frogger_death_anim_fps"
			],
			[
				"fps",
				"frogger_death_anim_fps"
			],
			[
				"frogger_anim",
				"frogger_death_anim_timer"
			],
			[
				"warp",
				"row_warp_extension_boundaries"
			],
			[
				"texture_",
				"texture_sprite_sheet"
			],
			[
				"draw_",
				"draw_sprite_sheet_rectangle_clip_on_grid(sprite_sheet: rl.Texture2D, src_grid, dst_grid: rl.Rectangle, src_cell_size, dst_cell_size, rotation: f32)"
			],
			[
				"floating",
				"floating_logs_sprite_clips"
			],
			[
				"diving",
				"diving_turtle_anim_frames"
			],
			[
				"turtle_anim",
				"diving_turtles_anim_fps"
			],
			[
				"divign",
				"diving_turtles_anim_timer"
			],
			[
				"get",
				"get_anim_current_frame_index(t, fps: f32, number_of_frames: int) "
			],
			[
				"frogger_lerp",
				"frogger_move_lerp_end_pos"
			],
			[
				"get_anim",
				"get_anim_current_frame_sprite_sheet_clip(t, fps: f32, frame_clips: []rl.Rectangle) "
			],
			[
				"turtle",
				"turtles_speed"
			],
			[
				"regular",
				"regular_turtles_current_frame_sprite_sheet_clip_rectangle"
			],
			[
				"frame",
				"frame_clip_rectangle"
			],
			[
				"regulat",
				"regular_turtles_anim_timer"
			],
			[
				"vehicle",
				"vehicle_sprite_sheet_clip"
			],
			[
				"vehicl",
				"vehicle_sprite_sheet_positions"
			],
			[
				"draw_rectangle",
				"draw_rectangle_lines_on_grid(rectangle: rl.Rectangle, line_thick: f32, color: rl.Color, cell_size: f32)"
			],
			[
				"froggera",
				"frogger_anim_timer"
			],
			[
				"turt",
				"turtle_group_1_offset_x"
			],
			[
				"DrawTexture",
				"DrawTextureEx(texture: Texture2D, position: Vector2, rotation: f32, scale: f32, tint: Color)"
			],
			[
				"LoadTe",
				"LoadTextureFromImage(image: Image) "
			],
			[
				"LoadTex",
				"LoadTextureFromImage(image: Image) "
			],
			[
				"image_data_",
				"image_data_background"
			],
			[
				"LoadImageFrom",
				"LoadImageFromMemory(fileType: cstring, fileData: rawptr, dataSize: c.int) "
			],
			[
				"LoadImage",
				"LoadImageFromMemory(fileType: cstring, fileData: rawptr, dataSize: c.int) "
			]
		]
	},
	"buffers":
	[
		{
			"contents": "package game\n\nimport rl \"vendor:raylib\"\nimport \"core:math\"\nimport \"core:fmt\"\nimport \"core:mem\"\nimport \"core:strings\"\nimport \"core:c\"\n\nimport rlgrid \"./rlgrid\"\n\n// bytes_image_data_background         := #load(\"../assets/frogger_background_colton.png\")\nbytes_image_data_background         := #load(\"../assets/frogger_background_modified.png\")\nbytes_font_data                     := #load(\"../assets/joystix monospace.otf\")\nbytes_aa_pixel_filter_shader        := #load(\"./pixel_filter.fs\")\n\n\nglobal_filename_window_save_data := \"window_save_data.frog\"\n\nglobal_grid_cell_size                : f32 : 64\nglobal_number_grid_cells_axis_x : f32 : 14\nglobal_number_grid_cells_axis_y : f32 : 16\nglobal_game_view_pixels_width   : f32 : global_grid_cell_size * global_number_grid_cells_axis_x\nglobal_game_view_pixels_height  : f32 : global_grid_cell_size * global_number_grid_cells_axis_y\n\n\nWindow_Save_Data :: struct\n{\n\tx, y, width, height: i32\n}\n\n\nSprite_Data :: union {\n\tSprite_Clip_Name,\n\tAnimation_Player_Name,\n}\n\n\n\nCollision_Behavior :: enum {\n\tMove_Frogger,\n\tKill_Frogger,\n}\n\n\nEntity_Behavior :: enum {\n\tRow_Obstacle,\n\tSnake,\n\tOtter,\n\tAlligator,\n}\n\n\nEntity :: struct\n{\n\trectangle : rl.Rectangle, // what is the hitbox? and where should we draw the entity?\n\tspeed     : f32, // how fast does the entity move\n\tsprite_data: Sprite_Data, // either a single sprite or an animated sprite\n\tcollision_behavior: Collision_Behavior, // what should this entity do to frogger?\n\tsnake_behavior: Snake_Behavior_State, // only used if a snake\n\trow_id: u32,\n}\n\n\nRoot_State :: enum {\n\tMain_Menu,\n\tGame,\n\t// Enter_High_Score,\n}\n\n\n// This struct contains all data we want to preserve on hot-reloads\n// a hot reload is compiling the game while it is running so we dont have to close and restart the game\n// each time a change is made to the code\nGame_Memory :: struct \n{\t\n\troot_state : Root_State,\n\n\t// VIEW\n\tgame_render_target: rl.RenderTexture,\n\n\t// Spritesheets\n\ttexture_sprite_sheet : rl.Texture2D,\n\ttexture_background   : rl.Texture2D,\n\n\tspeed_multiplier_difficulty: f32,\n\n\t// Font\n\tfont :rl.Font,\n\n\t// DEBUG\n\tdbg_show_grid : bool,\n\tdbg_show_level: bool,\n\tdbg_is_frogger_unkillable : bool,\n\tdbg_show_entity_bounding_rectangles : bool,\n\tdbg_speed_multiplier: f32,\n\tdbg_camera_offset_to_left: f32,\n\tdbg_camera_zoom :f32,\n\tdbg_timer_lose_life_pause: bool,\n\n\t// GAME\n\n\tanimation_player_frogger_is_dying: Animation_Player,\n\n\tcountdown_timer_lose_life: f32,\n\n\tlevel_current : int,\n\n\t// frogger\n\tfrogger_pos       : [2]f32,\n\tfrogger_move_lerp_timer     : Timer,\n\tfrogger_move_lerp_start_pos : [2]f32,\n\tfrogger_move_lerp_end_pos   : [2]f32,\n\n\tfrogger_sprite_rotation: f32,\n\n\tis_lily_on_frogger : bool,\n\n\t// win\n\tis_frogs_on_lilypads :[5]bool,\n\tlevel_end_timer :Timer,\n\n\t// score\n\tscore :int,\n\tscore_frogger_max_y_tracker : f32,\n\n\ttimer_is_active_score_100: Timer,\n\ttimer_is_active_score_200: Timer,\n\n\tpos_score_100: [2]f32,\n\tpos_score_200: [2]f32,\n\n\tpause : bool,\n\n\tlives: u32,\n\tcounter_cycle: int,\n\tcounter_level: int,\n\n\t// shader\n\tshader_pixel_filter: rl.Shader,\n\n\tlevel_index: u32,\n\n\tlast_cycle_completion_in_seconds : i32,\n\tcountdown_timer_display_last_cycle_completion: f32,\n}\n\ncountdown_timer_duration_display_last_cycle_completion : f32 = 6.0\n\ngmem: ^Game_Memory\n\nmusic :rl.Sound\n\nlilypads := [5]rl.Rectangle{\n\t{.5,   2, 1, 1},\n\t{3.5,  2, 1, 1},\n\t{6.5,  2, 1, 1},\n\t{9.5,  2, 1, 1},\n\t{12.5, 2, 1, 1},\n}\n\n\n@(export)\ngame_memory_size :: proc() -> int\n{\n\treturn size_of(gmem)\n}\n\n\n@(export)\ngame_memory_ptr :: proc() -> rawptr\n{\n\treturn gmem\n}\n\n\n@(export)\ngame_hot_reload :: proc(mem: rawptr)\n{\n\tgmem = (^Game_Memory)(mem)\n}\n\n\n@(export)\ngame_is_build_requested :: proc() -> bool\n{\n\tyes := rl.IsKeyPressed(.F5)\n\tif yes\n\t{\n\t\treturn true\n\t}\n\treturn false\n}\n\n\n@(export)\ngame_should_run :: proc() -> bool\n{\n\tno := rl.WindowShouldClose()\n\tif no\n\t{\n\t\treturn false\n\t}\n\treturn true\n}\n\n\n@(export)\ngame_free_memory :: proc()\n{\n\tfree(gmem)\n\trl.UnloadRenderTexture(gmem.game_render_target)\n}\n\n\nentity_move :: proc(entity: ^Entity, move_amount_x, dt: f32)\n{\n\tentity.rectangle.x += move_amount_x * dt * gmem.dbg_speed_multiplier * gmem.speed_multiplier_difficulty\n}\n\n@(export)\ngame_init_platform :: proc()\n{\n\tdefault_window_width : i32 = 224 * 4\n\tdefault_window_height : i32 = 256 * 4\n\n\twindow_width : i32 = default_window_width\n\twindow_height : i32 = default_window_height\n\twindow_pos_x : i32 = 0\n\twindow_pos_y : i32 = 50\n\n\twindow_save_data := Window_Save_Data{}\n\n\t// bytes_window_save_data, err := os2.read_entire_file_from_path(global_filename_window_save_data, context.temp_allocator)\n\tbytes_window_save_data, ok := read_entire_file(global_filename_window_save_data, context.temp_allocator)\n\n\tif ok == false\n\t{\n\t\tfmt.printfln(\"Error reading from window save data file: %v\", ok)\n\t}\n\telse\n\t{\n\t\tmem.copy(&window_save_data, &bytes_window_save_data[0], size_of(window_save_data))\n\n\t\twindow_width = window_save_data.width\n\t\twindow_height = window_save_data.height\n\t\twindow_pos_x = window_save_data.x\n\t\twindow_pos_y = window_save_data.y\n\t}\n\n\trl.SetConfigFlags({.WINDOW_RESIZABLE, .VSYNC_HINT})\n\trl.InitWindow(window_width, window_height, \"Frogger [For Educational Purposes Only]\")\n\trl.SetWindowPosition(window_pos_x, window_pos_y)\n\n\tafter_set_pos_monitor_id     := rl.GetCurrentMonitor()\n\tafter_set_pos_monitor_pos    := rl.GetMonitorPosition(after_set_pos_monitor_id)\n\tafter_set_pos_monitor_width  := rl.GetMonitorWidth(after_set_pos_monitor_id)\n\tafter_set_pos_monitor_height := rl.GetMonitorHeight(after_set_pos_monitor_id)\n\n\tis_window_out_of_monitor_bounds := f32(window_pos_x) < after_set_pos_monitor_pos.x ||\n\t\tf32(window_pos_y) < after_set_pos_monitor_pos.y ||\n\t\twindow_pos_x > after_set_pos_monitor_width ||\n\t\twindow_pos_y > after_set_pos_monitor_height\n\n\tif is_window_out_of_monitor_bounds\n\t{\n\t\treset_window_pos_x := i32(after_set_pos_monitor_pos.x)\n\t\treset_window_pos_y := i32(after_set_pos_monitor_pos.y) + 40\n\t\treset_window_width := default_window_width\n\t\treset_window_height := default_window_height\n\n\t\trl.SetWindowPosition(reset_window_pos_x, reset_window_pos_y)\n\t\trl.SetWindowSize(reset_window_width, reset_window_height)\n\t}\n\t\n\trl.InitAudioDevice()\n\t// music = rl.LoadSound(\"assets/froggerGameThemeOne.mp3\")\n\t// rl.PlaySound(music)\n\trl.SetTargetFPS(60)\n}\n\n\nis_frogs_on_lilypads := [5]bool{false, false, false, false, false}\n\nRow :: struct {\n\tstart_x: f32,\n\tspeed: f32,\n}\n\nrows_by_level := [?][16]Row {\n\trows_level_1,\n\trows_level_2,\n\trows_level_3,\n\trows_level_4,\n\trows_level_5,\n}\n\n\nentities_by_level := [?][]Entity {\n\tentities_level_1[:],\n\tentities_level_2[:],\n\tentities_level_3[:],\n\tentities_level_4[:],\n\tentities_level_5[:],\n}\n\n\nrows_level_1 := [16]Row {\n\t{start_x = 0,    speed = 0},\n\t{start_x = 0,    speed = 0},\n\t{start_x = 0,    speed = 0},\n\t{start_x = -9,   speed = 1.2},\n\t{start_x = -3.5, speed = -1.5},\n\t{start_x = -10,  speed = 3},\n\t{start_x = -6,   speed = 0.8},\n\t{start_x = -2,   speed = -1.5},\n\t{start_x = 0,    speed = 0},\n\t{start_x = -2,   speed = -1.5},\n\t{start_x = -1,   speed = 1},\n\t{start_x = -1,   speed = -0.8},\n\t{start_x = -1,   speed = 0.6},\n\t{start_x = -1,   speed = -0.6},\n\t{start_x = 0,    speed = 0},\n\t{start_x = 0,    speed = 0},\n}\n\n\nentities_level_1 := [?]Entity {\n    { rectangle = {0    ,  3, 4, 1},   speed = 1.2,    row_id = 3,  sprite_data   = .Medium_Log,                             collision_behavior           = .Move_Frogger},\n    { rectangle = {6    ,  3, 4, 1},   speed = 1.2,    row_id = 3,  sprite_data   = .Medium_Log,                             collision_behavior           = .Move_Frogger},\n    { rectangle = {12   , 3, 4, 1},   speed  = 1.2,    row_id = 3,  sprite_data   = .Medium_Log,                             collision_behavior           = .Move_Frogger},\n    { rectangle = {18   , 3, 4, 1},   speed  = 1.2,    row_id = 3,  sprite_data   = .Medium_Log,                             collision_behavior           = .Move_Frogger},\n    { rectangle = {2    ,  4, 1, 1},   speed = -1.5,   row_id = 4, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {3    ,  4, 1, 1},   speed = -1.5,   row_id = 4, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {6    ,  4, 1, 1},   speed = -1.5,   row_id = 4, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {7    ,  4, 1, 1},   speed = -1.5,   row_id = 4, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {10   , 4, 1, 1},   speed  = -1.5,   row_id = 4, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {11   , 4, 1, 1},   speed  = -1.5,   row_id = 4, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {15.5 , 4, 1, 1}, speed    = -1.5,   row_id = 4, sprite_data     = Animation_Player_Name.Diving_Turtle_0, collision_behavior             = .Move_Frogger },\n    { rectangle = {16.5 , 4, 1, 1}, speed    = -1.5,   row_id = 4, sprite_data     = Animation_Player_Name.Diving_Turtle_0, collision_behavior             = .Move_Frogger },\n    { rectangle = {0    ,  5, 6, 1},   speed = 3,     row_id =  5,   sprite_data = .Long_Log,                               collision_behavior           = .Move_Frogger},\n    { rectangle = {8    ,  5, 6, 1},   speed = 3,     row_id =  5,   sprite_data = .Long_Log,                               collision_behavior           = .Move_Frogger},\n    { rectangle = {16   , 5, 6, 1},   speed  = 3,     row_id =  5,   sprite_data = .Long_Log,                               collision_behavior           = .Move_Frogger},\n    { rectangle = {0    ,  6, 3, 1},   speed = 0.8,   row_id =  6,   sprite_data   = .Short_Log,                              collision_behavior           = .Move_Frogger},\n    { rectangle = {5    ,  6, 3, 1},   speed = 0.8,   row_id =  6,   sprite_data   = .Short_Log,                              collision_behavior           = .Move_Frogger},\n    { rectangle = {10   , 6, 3, 1},   speed  = 0.8,   row_id =  6,   sprite_data   = .Short_Log,                              collision_behavior           = .Move_Frogger},\n    { rectangle = {15   , 6, 3, 1},   speed  = 0.8,   row_id =  6,   sprite_data   = .Short_Log,                              collision_behavior           = .Move_Frogger},\n    { rectangle = {0    ,  7, 1, 1},   speed = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {1    ,  7, 1, 1},   speed = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {2    ,  7, 1, 1},   speed = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {4    ,  7, 1, 1},   speed = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {5    ,  7, 1, 1},   speed = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {6    ,  7, 1, 1},   speed = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {8    ,  7, 1, 1},   speed = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {9    ,  7, 1, 1},   speed = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {10   , 7, 1, 1},   speed  = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Regular_Turtle,              collision_behavior = .Move_Frogger},\n    { rectangle = {12   ,   7, 1, 1}, speed  = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Diving_Turtle_1, collision_behavior             = .Move_Frogger },\n    { rectangle = {13   ,   7, 1, 1}, speed  = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Diving_Turtle_1, collision_behavior             = .Move_Frogger },\n    { rectangle = {14   ,   7, 1, 1}, speed  = -1.5,  row_id =  7, sprite_data     = Animation_Player_Name.Diving_Turtle_1, collision_behavior             = .Move_Frogger },\n    { rectangle = {1    ,   9, 2, 1},  speed = -1.5  , row_id = 9, sprite_data     = .Truck,                                  collision_behavior           = .Kill_Frogger},\n    { rectangle = {6.5  , 9, 2, 1},  speed   = -1.5  , row_id = 9, sprite_data     = .Truck,                                  collision_behavior           = .Kill_Frogger},\n    { rectangle = {1    ,  10, 1, 1},  speed = 1  ,    row_id = 10, sprite_data   = .Racecar,                                collision_behavior           = .Kill_Frogger},\n    { rectangle = {10   , 11, 1, 1},  speed  = -0.8  , row_id = 11, sprite_data     = .Purple_Car,                             collision_behavior           = .Kill_Frogger},\n    { rectangle = {6    ,  11, 1, 1},  speed = -0.8  , row_id = 11, sprite_data     = .Purple_Car,                             collision_behavior           = .Kill_Frogger},\n    { rectangle = {2    ,  11, 1, 1},  speed = -0.8  , row_id = 11, sprite_data     = .Purple_Car,                             collision_behavior           = .Kill_Frogger},\n    { rectangle = {5    ,  12, 1, 1},  speed = 0.6  ,  row_id = 12, sprite_data     = .Bulldozer,                              collision_behavior           = .Kill_Frogger},\n    { rectangle = {9    ,  12, 1, 1},  speed = 0.6  ,  row_id = 12, sprite_data     = .Bulldozer,                              collision_behavior           = .Kill_Frogger},\n    { rectangle = {13   , 12, 1, 1},  speed  = 0.6  ,  row_id = 12, sprite_data     = .Bulldozer,                              collision_behavior           = .Kill_Frogger},\n    { rectangle = {10   , 13, 1, 1},  speed  = -0.6  , row_id = 13, sprite_data     = .Taxi,                                   collision_behavior           = .Kill_Frogger},\n    { rectangle = {6    ,  13, 1, 1},  speed = -0.6  , row_id = 13, sprite_data     = .Taxi,                                   collision_behavior           = .Kill_Frogger},\n    { rectangle = {2    ,  13, 1, 1},  speed = -0.6  , row_id = 13, sprite_data     = .Taxi,                                   collision_behavior           = .Kill_Frogger},\n}\n// 15\n\nrows_level_2 := [16]Row {\n\t{start_x = 0,     speed = 0},\n\t{start_x = 0,     speed = 0},\n\t{start_x = 0,     speed = 0},\n\t{start_x = -15,   speed = 1.2},\n\t{start_x = -2.5,  speed = -2},\n\t{start_x = -18,   speed = 2},\n\t{start_x = -3,    speed = 0.8},\n\t{start_x = -2,    speed = -2},\n\t{start_x = 0,     speed = 0},\n\t{start_x = -3,    speed = -1.5},\n\t{start_x = -1,    speed = 1},\n\t{start_x = -4,    speed = -2},\n\t{start_x = -2,    speed = 2},\n\t{start_x = -4,    speed = -2},\n\t{start_x = 0,     speed = 0},\n\t{start_x = 0,     speed = 0},\n}\n\nentities_level_2 := [?]Entity {\n    { rectangle = {0,  3, 4, 1},     speed = 1.2,  row_id = 3,  collision_behavior = .Move_Frogger,  sprite_data = .Medium_Log, },\n    { rectangle = {6,  3, 4, 1},     speed = 1.2,  row_id = 3,  collision_behavior = .Move_Frogger,  sprite_data = .Medium_Log, },\n    { rectangle = {12, 3, 4, 1},     speed = 1.2,  row_id = 3,  collision_behavior = .Move_Frogger,  sprite_data = .Medium_Log, },\n    { rectangle = {18, 3, 4, 1},     speed = 1.2,  row_id = 3,  collision_behavior = .Move_Frogger,  sprite_data = .Medium_Log, },\n    { rectangle = {24, 3, 3, 1},     speed = 1.2,  row_id = 3,  collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Alligator, },\n    { rectangle = {2,  4, 1, 1},     speed = -2,   row_id = 4,  collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {3,  4, 1, 1},     speed = -2,   row_id = 4,  collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {5,  4, 1, 1},     speed = -2,   row_id = 4,  collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {6,  4, 1, 1},     speed = -2,   row_id = 4,  collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {8, 4, 1, 1},     speed = -2,    row_id = 4,  collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {9, 4, 1, 1},     speed = -2,    row_id = 4,  collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {11, 4, 1, 1},     speed = -2,   row_id = 4, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {12, 4, 1, 1},     speed = -2,   row_id = 4, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {15.5, 4, 1, 1},   speed = -2,   row_id = 4, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_0,  },\n    { rectangle = {16.5, 4, 1, 1},   speed = -2,   row_id = 4, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_0,  },\n    { rectangle = {0,  5, 6, 1},     speed = 2,    row_id = 5,  collision_behavior = .Move_Frogger,  sprite_data = .Long_Log, },\n    { rectangle = {16,  5, 6, 1},    speed = 2,    row_id = 5,  collision_behavior = .Move_Frogger,  sprite_data = .Long_Log, },\n    { rectangle = {0,    6, 3, 1},   speed = 0.8,  row_id = 6,   collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {5,    6, 3, 1},   speed = 0.8,  row_id = 6,   collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {10,   6, 3, 1},   speed = 0.8,  row_id = 6,   collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {2,    7, 1, 1},   speed = -2,   row_id = 7, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {3,    7, 1, 1},   speed = -2,   row_id = 7, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {4,    7, 1, 1},   speed = -2,   row_id = 7, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {8,    7, 1, 1},   speed = -2,   row_id = 7, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {9,    7, 1, 1},   speed = -2,   row_id = 7, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {10,   7, 1, 1},   speed = -2,   row_id = 7, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {12,   7, 1, 1},   speed = -2,   row_id = 7, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {13,   7, 1, 1},   speed = -2,   row_id = 7, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {14,   7, 1, 1},   speed = -2,   row_id = 7, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {1,   9, 2, 1},  speed = -1.5,   row_id = 9, collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {6.5, 9, 2, 1},  speed = -1.5,   row_id = 9, collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {12, 9, 2, 1},  speed = -1.5,    row_id = 9, collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {1,  10, 1, 1},  speed = 1  ,    row_id = 10, collision_behavior = .Kill_Frogger,  sprite_data = .Racecar, },\n    { rectangle = {3.5,  10, 1, 1},  speed = 1  ,  row_id = 10,  collision_behavior = .Kill_Frogger,  sprite_data = .Racecar, },\n    { rectangle = {0, 11, 1, 1},  speed = -2  ,    row_id = 11,   collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {2.5,  11, 1, 1},  speed = -2  , row_id = 11,   collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {6.5,  11, 1, 1},  speed = -2  , row_id = 11,   collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {12,  11, 1, 1},  speed = -2  ,  row_id = 11,   collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {0,  12, 1, 1},  speed = 2  ,    row_id = 12, collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {4,  12, 1, 1},  speed = 2  ,    row_id = 12, collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {8, 12, 1, 1},  speed = 2  ,     row_id = 12, collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {12, 12, 1, 1},  speed = 2  ,    row_id = 12, collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {0, 13, 1, 1},  speed = -2  ,    row_id = 13,   collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {2.5,  13, 1, 1},  speed = -2  , row_id = 13,   collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {6.5,  13, 1, 1},  speed = -2  , row_id = 13,   collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {12,  13, 1, 1},  speed = -2  ,  row_id = 13,   collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n}\n\n// 17\n\n\nrows_level_3 := [16]Row {\n\t{start_x = 0,   speed = 0},\n\t{start_x = 0,   speed = 0},\n\t{start_x = 0,   speed = 0},\n\t{start_x = -18, speed = 1.2},\n\t{start_x = -4,  speed = -2},\n\t{start_x = -18, speed = 2},\n\t{start_x = -3,  speed = 0.8},\n\t{start_x = -3,  speed = -3.5},\n\t{start_x = 0,   speed = 0},\n\t{start_x = -3,  speed = -1.5},\n\t{start_x = -1,  speed = 3},\n\t{start_x = -4,  speed = -3},\n\t{start_x = -1,  speed = 2},\n\t{start_x = -2,  speed = -1.5},\n\t{start_x = 0,   speed = 0},\n\t{start_x = 0,   speed = 0},\n}\n\nentities_level_3 := [?]Entity {\n    { rectangle = {0.5, 3, 3, 1},     speed = 1.2,   row_id = 3,    collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Alligator, },\n    { rectangle = {11,  3, 4, 1},     speed = 1.2,   row_id = 3,    collision_behavior = .Move_Frogger,  sprite_data = .Medium_Log, },\n    { rectangle = {17,  3, 4, 1},     speed = 1.2,   row_id = 3,    collision_behavior = .Move_Frogger,  sprite_data = .Medium_Log, },\n    { rectangle = {27.5, 3, 4, 1},    speed = 1.2,   row_id = 3,    collision_behavior = .Move_Frogger,  sprite_data = .Medium_Log, },\n    { rectangle = {1,  4, 1, 1},     speed = -2,     row_id = 4,    collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {2,  4, 1, 1},     speed = -2,     row_id = 4,    collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {5.5, 4, 1, 1},     speed = -2,    row_id = 4,     collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {6.5, 4, 1, 1},     speed = -2,    row_id = 4,     collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {10, 4, 1, 1},   speed = -2,       row_id = 4,     collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_0,  },\n    { rectangle = {11, 4, 1, 1},   speed = -2,       row_id = 4,     collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_0,  },\n    { rectangle = {14.5,  4, 1, 1},     speed = -2,  row_id = 4, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {15.5,  4, 1, 1},     speed = -2,  row_id = 4, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {0,  5, 6, 1},     speed = 2,      row_id = 5,     collision_behavior = .Move_Frogger,  sprite_data = .Long_Log, },\n    { rectangle = {16,  5, 6, 1},    speed = 2,      row_id = 5,     collision_behavior = .Move_Frogger,  sprite_data = .Long_Log, },\n    { rectangle = {0,    6, 3, 1},   speed = 0.8,    row_id = 6,      collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {5,    6, 3, 1},   speed = 0.8,    row_id = 6,      collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {10,   6, 3, 1},   speed = 0.8,    row_id = 6,      collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {0,   7, 1, 1},   speed = -3.5,    row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {1,   7, 1, 1},   speed = -3.5,    row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {2,   7, 1, 1},   speed = -3.5,    row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {5,    7, 1, 1},   speed = -3.5,   row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {6,    7, 1, 1},   speed = -3.5,   row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {7,    7, 1, 1},   speed = -3.5,   row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {10,    7, 1, 1},   speed = -3.5,  row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {11,    7, 1, 1},   speed = -3.5,  row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {12,   7, 1, 1},   speed = -3.5,   row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {1,   9, 2, 1},  speed = -1.5,     row_id = 9,      collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {6.5, 9, 2, 1},  speed = -1.5,     row_id = 9,      collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {12, 9, 2, 1},  speed = -1.5,      row_id = 9,      collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {1,  10, 1, 1},  speed = 3  ,      row_id = 10,     collision_behavior = .Kill_Frogger,  sprite_data = .Racecar, },\n    { rectangle = {5.5,  10, 1, 1},  speed = 3  ,    row_id = 10,    collision_behavior = .Kill_Frogger,  sprite_data = .Racecar, },\n    { rectangle = {0, 11, 1, 1},     speed = -3  ,   row_id = 11,        collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {2.5,  11, 1, 1},  speed = -3  ,   row_id = 11,     collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {6.5,  11, 1, 1},  speed = -3  ,   row_id = 11,     collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {12,  11, 1, 1},   speed = -3  ,   row_id = 11,      collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {0,  12, 1, 1},  speed = 2  ,      row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {4,  12, 1, 1},  speed = 2  ,      row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {8, 12, 1, 1},  speed = 2  ,       row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {12, 12, 1, 1},  speed = 2  ,      row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {0, 13, 1, 1},     speed = -1.5  , row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {4,  13, 1, 1},  speed = -1.5  ,   row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {8,  13, 1, 1},  speed = -1.5  ,   row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {12,  13, 1, 1},   speed = -1.5  , row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n}\n\n// 14\n\nrows_level_4 := [16]Row {\n\t{start_x = 0,   speed = 0},\n\t{start_x = 0,   speed = 0},\n\t{start_x = 0,   speed = 0},\n\t{start_x = -18, speed = 2},\n\t{start_x = -4,  speed = -2},\n\t{start_x = -18, speed = 2},\n\t{start_x = -10,  speed = 1.5},\n\t{start_x = -3,  speed = -3.5},\n\t{start_x = 0,   speed = 0},\n\t{start_x = -4.5,  speed = -1.5},\n\t{start_x = -5,  speed = 6},\n\t{start_x = -4,  speed = -3},\n\t{start_x = -1,  speed = 2},\n\t{start_x = -4,  speed = -1.5},\n\t{start_x = 0,   speed = 0},\n\t{start_x = 0,   speed = 0},\n}\n\nentities_level_4 := [?]Entity {\n    { rectangle = {0.5, 3, 3, 1},     speed = 1.2,   row_id = 3,    collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Alligator, },\n    { rectangle = {11,  3, 4, 1},     speed = 1.2,   row_id = 3,    collision_behavior = .Move_Frogger,  sprite_data = .Medium_Log, },\n    { rectangle = {17,  3, 4, 1},     speed = 1.2,   row_id = 3,    collision_behavior = .Move_Frogger,  sprite_data = .Medium_Log, },\n    { rectangle = {27.5, 3, 4, 1},    speed = 1.2,   row_id = 3,    collision_behavior = .Move_Frogger,  sprite_data = .Medium_Log, },\n    { rectangle = {1,  4, 1, 1},     speed = -2,     row_id = 4,    collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {2,  4, 1, 1},     speed = -2,     row_id = 4,    collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    // TODO(jalfonso): this gap is not supposed to be as big\n    { rectangle = {10, 4, 1, 1},   speed = -2,       row_id = 4,     collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_0,  },\n    { rectangle = {11, 4, 1, 1},   speed = -2,       row_id = 4,     collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_0,  },\n    { rectangle = {14.5,  4, 1, 1},     speed = -2,  row_id = 4, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {15.5,  4, 1, 1},     speed = -2,  row_id = 4, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {0,  5, 6, 1},     speed = 2,      row_id = 5,     collision_behavior = .Move_Frogger,  sprite_data = .Long_Log, },\n    { rectangle = {16,  5, 6, 1},    speed = 2,      row_id = 5,     collision_behavior = .Move_Frogger,  sprite_data = .Long_Log, },\n    { rectangle = {0,    6, 3, 1},   speed = 0.8,    row_id = 6,      collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {8,    6, 3, 1},   speed = 0.8,    row_id = 6,      collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {17,   6, 3, 1},   speed = 0.8,    row_id = 6,      collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {0,   7, 1, 1},   speed = -3.5,    row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {1,   7, 1, 1},   speed = -3.5,    row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {2,   7, 1, 1},   speed = -3.5,    row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {5,    7, 1, 1},   speed = -3.5,   row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {6,    7, 1, 1},   speed = -3.5,   row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {7,    7, 1, 1},   speed = -3.5,   row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {10,    7, 1, 1},   speed = -3.5,  row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {11,    7, 1, 1},   speed = -3.5,  row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {12,   7, 1, 1},   speed = -3.5,   row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {0,   9, 2, 1},  speed = -1.5,     row_id = 9,      collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {4.5, 9, 2, 1},  speed = -1.5,     row_id = 9,      collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {9, 9, 2, 1},  speed = -1.5,      row_id = 9,      collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {13.5, 9, 2, 1},  speed = -1.5,      row_id = 9,      collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {1,  10, 1, 1},  speed = 3  ,      row_id = 10,     collision_behavior = .Kill_Frogger,  sprite_data = .Racecar, },\n    { rectangle = {5.5,  10, 1, 1},  speed = 3  ,    row_id = 10,    collision_behavior = .Kill_Frogger,  sprite_data = .Racecar, },\n    { rectangle = {10,  10, 1, 1},  speed = 3  ,    row_id = 10,    collision_behavior = .Kill_Frogger,  sprite_data = .Racecar, },\n    { rectangle = {0, 11, 1, 1},     speed = -3  ,   row_id = 11,        collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {2.5,  11, 1, 1},  speed = -3  ,   row_id = 11,     collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {6.5,  11, 1, 1},  speed = -3  ,   row_id = 11,     collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {12,  11, 1, 1},   speed = -3  ,   row_id = 11,      collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {0,  12, 1, 1},  speed = 2  ,      row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {4,  12, 1, 1},  speed = 2  ,      row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {8, 12, 1, 1},  speed = 2  ,       row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {12, 12, 1, 1},  speed = 2  ,      row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {0, 13, 1, 1},     speed = -1.5  , row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {5,  13, 1, 1},  speed = -1.5  ,   row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {10,  13, 1, 1},  speed = -1.5  ,   row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {15,  13, 1, 1},   speed = -1.5  , row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n}\n\nrows_level_5 := [16]Row {\n\t{start_x = 0,   speed = 0},\n\t{start_x = 0,   speed = 0},\n\t{start_x = 0,   speed = 0},\n\t{start_x = -18, speed = 2},\n\t{start_x = -6,  speed = -2},\n\t{start_x = -18, speed = 2},\n\t{start_x = -10,  speed = 1.5},\n\t{start_x = -3,  speed = -2},\n\t{start_x = 0,   speed = 0},\n\t{start_x = -6,  speed = -1.5},\n\t{start_x = -5,  speed = 6},\n\t{start_x = -4,  speed = -3},\n\t{start_x = -2,  speed = 2},\n\t{start_x = -4,  speed = -1.5},\n\t{start_x = 0,   speed = 0},\n\t{start_x = 0,   speed = 0},\n}\n\nentities_level_5 := [?]Entity {\n    { rectangle = {0.5, 3, 3, 1},     speed = 1.2,   row_id = 3,    collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Alligator, },\n    { rectangle = {17,  3, 4, 1},     speed = 1.2,   row_id = 3,    collision_behavior = .Move_Frogger,  sprite_data = .Medium_Log, },\n    { rectangle = {0,  4, 1, 1},     speed = -2,     row_id = 4,    collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {1,  4, 1, 1},     speed = -2,     row_id = 4,    collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {6.5, 4, 1, 1},   speed = -2,       row_id = 4,     collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_0,  },\n    { rectangle = {7.5, 4, 1, 1},   speed = -2,       row_id = 4,     collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_0,  },\n    { rectangle = {13,  4, 1, 1},     speed = -2,  row_id = 4, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {14,  4, 1, 1},     speed = -2,  row_id = 4, collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {0,  5, 6, 1},     speed = 2,      row_id = 5,     collision_behavior = .Move_Frogger,  sprite_data = .Long_Log, },\n    { rectangle = {16,  5, 6, 1},    speed = 2,      row_id = 5,     collision_behavior = .Move_Frogger,  sprite_data = .Long_Log, },\n    { rectangle = {0,    6, 3, 1},   speed = 0.8,    row_id = 6,      collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {8,    6, 3, 1},   speed = 0.8,    row_id = 6,      collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {17,   6, 3, 1},   speed = 0.8,    row_id = 6,      collision_behavior = .Move_Frogger,  sprite_data = .Short_Log, },\n    { rectangle = {0,   7, 1, 1},   speed = -3.5,    row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {1,   7, 1, 1},   speed = -3.5,    row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {2,   7, 1, 1},   speed = -3.5,    row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Diving_Turtle_1,  },\n    { rectangle = {7,    7, 1, 1},   speed = -3.5,   row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {8,    7, 1, 1},   speed = -3.5,   row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {9,    7, 1, 1},   speed = -3.5,   row_id = 7,      collision_behavior = .Move_Frogger,  sprite_data = Animation_Player_Name.Regular_Turtle, },\n    { rectangle = {0,   9, 2, 1},  speed = -1.5,     row_id = 9,      collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {4.5, 9, 2, 1},  speed = -1.5,     row_id = 9,      collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {9, 9, 2, 1},  speed = -1.5,      row_id = 9,      collision_behavior = .Kill_Frogger,  sprite_data = .Truck, },\n    { rectangle = {0,  10, 1, 1},  speed = 3  ,      row_id = 10,     collision_behavior = .Kill_Frogger,  sprite_data = .Racecar, },\n    { rectangle = {4,  10, 1, 1},  speed = 3  ,    row_id = 10,    collision_behavior = .Kill_Frogger,  sprite_data = .Racecar, },\n    { rectangle = {8,  10, 1, 1},  speed = 3  ,    row_id = 10,    collision_behavior = .Kill_Frogger,  sprite_data = .Racecar, },\n    { rectangle = {12,  10, 1, 1},  speed = 3  ,    row_id = 10,    collision_behavior = .Kill_Frogger,  sprite_data = .Racecar, },\n    { rectangle = {0, 11, 1, 1},     speed = -3  ,   row_id = 11,        collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {3.5,  11, 1, 1},  speed = -3  ,   row_id = 11,     collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {7,  11, 1, 1},  speed = -3  ,   row_id = 11,     collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {10.5,  11, 1, 1},   speed = -3  ,   row_id = 11,      collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n    { rectangle = {14,  11, 1, 1},   speed = -3  ,   row_id = 11,      collision_behavior = .Kill_Frogger,  sprite_data = .Purple_Car, },\n\n    { rectangle = {0,  12, 1, 1},  speed = 2  ,      row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {4,  12, 1, 1},  speed = 2  ,      row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {8, 12, 1, 1},  speed = 2  ,       row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {12, 12, 1, 1},  speed = 2  ,      row_id = 12,     collision_behavior = .Kill_Frogger,  sprite_data = .Bulldozer, },\n    { rectangle = {0, 13, 1, 1},     speed = -1.5  , row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {5,  13, 1, 1},  speed = -1.5  ,   row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {10,  13, 1, 1},  speed = -1.5  ,   row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n    { rectangle = {15,  13, 1, 1},   speed = -1.5  , row_id = 13,     collision_behavior = .Kill_Frogger,  sprite_data = .Taxi, },\n}\n\nOtter :: struct {\n\tentity: Entity,\n\ttimer_attack: Timer,\n}\n\nSpawn_Description :: struct {\n\tpos: [2]f32,\n\tspeed: f32,\n\tattack_speed: f32,\n}\n\n\notter_spawn_descriptions_level_1 := [?]Spawn_Description {}\notter_spawn_descriptions_level_2 := [?]Spawn_Description {}\notter_spawn_descriptions_level_3 := [?]Spawn_Description {\n\t{ pos = { -3, 3 },  speed = 2 }, \n\t{ pos = { global_number_grid_cells_axis_x, 4 }, speed = -2.5 }, \n\t{ pos = { -3, 5 }, speed = 2.5  }, \n\t{ pos = { -3, 6 }, speed = 2 }, \n\t{ pos = {global_number_grid_cells_axis_x, 7 }, speed = -4 },\n}\notter_spawn_descriptions_level_4 := [?]Spawn_Description {\n\t{ pos = { -3, 3 },  speed = 2.5 }, \n\t{ pos = { global_number_grid_cells_axis_x, 4 }, speed = -2.5 }, \n\t{ pos = { -3, 5 }, speed = 2.5  }, \n\t{ pos = { -3, 6 }, speed = 2 }, \n\t{ pos = {global_number_grid_cells_axis_x, 7 }, speed = -4 },\n}\notter_spawn_descriptions_level_5 := [?]Spawn_Description {\n\t{ pos = { -3, 3 },  speed = 2.5 }, \n\t{ pos = { global_number_grid_cells_axis_x, 4 }, speed = -2.5 }, \n\t{ pos = { -3, 5 }, speed = 2.5  }, \n\t{ pos = { -3, 6 }, speed = 2 }, \n\t{ pos = {global_number_grid_cells_axis_x, 7 }, speed = -4 },\n}\n\ncurrent_otter_spawn_data_id := 0\n\notter_spawn_descriptions_by_level := [?][]Spawn_Description {\n\totter_spawn_descriptions_level_1[:],\n\totter_spawn_descriptions_level_2[:],\n\totter_spawn_descriptions_level_3[:],\n\totter_spawn_descriptions_level_4[:],\n\totter_spawn_descriptions_level_5[:],\n}\n\n\notters_by_level := [?][]Otter {\n\totters_level_1[:],\n\totters_level_2[:],\n\totters_level_3[:],\n\totters_level_4[:],\n\totters_level_5[:],\n}\n\notters_level_1 := [?]Otter{}\notters_level_2 := [?]Otter{}\notters_level_3 := [?]Otter{ \n\t{ entity = { rectangle = {-1, 3, 1, 1}, speed = 2 }, timer_attack = { amount = 2.0, duration = 2.0 } } \n}\notters_level_4 := [?]Otter{ \n\t{ entity = { rectangle = {-1, 3, 1, 1}, speed = 2 }, timer_attack = { amount = 2.0, duration = 2.0 } } \n}\notters_level_5 := [?]Otter{ \n\t{ entity = { rectangle = {-1, 3, 1, 1}, speed = 2 }, timer_attack = { amount = 2.0, duration = 2.0 } } \n}\n\n\nanimation_alligator_fps : f32 = 3\nanimation_timer_alligator := Animation_Timer { t = 0, playing = true, loop = true }\nanimation_frames_alligator := [?]Sprite_Clip_Name{ .Alligator_Mouth_Closed, .Alligator_Mouth_Open }\nalligator_hit_box_relative_mouth_open := rl.Rectangle{2, 0, 1, 1}\n\n\nanimation_frames_regular_turtles := [?]Sprite_Clip_Name{ .Turtle_Frame_0, .Turtle_Frame_1, .Turtle_Frame_2 }\nanimation_fps_regular_turtles : f32 = 3\nanimation_timer_regular_turtles := Animation_Timer { t = 0, playing = true, loop = true }\n\nanimation_frames_diving_turtles := [?]Sprite_Clip_Name{\n\t.Turtle_Frame_0, .Turtle_Frame_1, .Turtle_Frame_2, .Turtle_Frame_3, .Turtle_Frame_4, .Empty, .Turtle_Frame_4, .Turtle_Frame_3, \n}\nanimation_fps_diving_turtles : f32 = animation_fps_regular_turtles\n\n\nanimation_frames_frogger_dying_hit := [?]Sprite_Clip_Name {\n\t.Frogger_Dying_Hit_Frame_0, .Frogger_Dying_Hit_Frame_1, .Frogger_Dying_Hit_Frame_2, .Frogger_Dying_Hit_Frame_1,\n\t.Frogger_Dying_Hit_Frame_0, .Frogger_Dying_Hit_Frame_1, .Frogger_Dying_Hit_Frame_2, .Frogger_Dying_Hit_Frame_1,\n\t.Frogger_Dying_Hit_Frame_0, .Frogger_Dying_Hit_Frame_1, .Frogger_Dying_Hit_Frame_2, .Frogger_Dying_Hit_Frame_1,\n\t.Frogger_Dying_Hit_Frame_0, .Frogger_Dying_Hit_Frame_1, .Frogger_Dying_Hit_Frame_2, .Frogger_Dying_Hit_Frame_1,\n\t.Skull_And_Crossbones, .Skull_And_Crossbones, .Empty, .Empty, \n\t.Skull_And_Crossbones, .Skull_And_Crossbones, .Empty, .Empty,\n\t.Skull_And_Crossbones, .Skull_And_Crossbones, .Empty, .Empty,\n\t.Skull_And_Crossbones, .Skull_And_Crossbones, .Empty, .Empty,\n\t.Empty,\n}\n\nanimation_frames_frogger_dying_drown := [?]Sprite_Clip_Name {\n\t.Frogger_Dying_Ripple_Frame_0, .Frogger_Dying_Ripple_Frame_1, .Frogger_Dying_Ripple_Frame_2,\n\t.Frogger_Dying_Ripple_Frame_0, .Frogger_Dying_Ripple_Frame_1, .Frogger_Dying_Ripple_Frame_2,\n\t.Frogger_Dying_Ripple_Frame_0, .Frogger_Dying_Ripple_Frame_1, .Frogger_Dying_Ripple_Frame_2,\n\t.Frogger_Dying_Ripple_Frame_0, .Frogger_Dying_Ripple_Frame_1, .Frogger_Dying_Ripple_Frame_2,\n\t.Skull_And_Crossbones, .Skull_And_Crossbones, .Empty, .Empty, \n\t.Skull_And_Crossbones, .Skull_And_Crossbones, .Empty, .Empty,\n\t.Skull_And_Crossbones, .Skull_And_Crossbones, .Empty, .Empty,\n\t.Skull_And_Crossbones, .Skull_And_Crossbones, .Empty, .Empty,\n\t.Empty,\n}\n\nanimation_frames_snake := [?]Sprite_Clip_Name {\n\t.Snake_Frame_0, .Snake_Frame_1, .Snake_Frame_2, .Snake_Frame_1\n}\n\nAnimation_Name :: enum {\n\tAlligator,\n\tRegular_Turtle,\n\tDiving_Turtle,\n\tFrogger_Dying_Hit,\n\tFrogger_Dying_Drown,\n\tSnake,\n}\n\nAnimation_Player_Name :: enum {\n\tAlligator,\n\tRegular_Turtle,\n\tDiving_Turtle_0,\n\tDiving_Turtle_1,\n\tSnake_0,\n\tSnake_1,\n}\n\nAnimation_Player :: struct {\n\ttimer: Animation_Timer,\n\tfps: f32,\n\tanimation_name : Animation_Name,\n}\n\nanimation_frames := [Animation_Name][]Sprite_Clip_Name {\n\t.Alligator = animation_frames_alligator[:],\n\t.Regular_Turtle =  animation_frames_regular_turtles[:],\n\t.Diving_Turtle = animation_frames_diving_turtles[:],\n\t.Frogger_Dying_Hit = animation_frames_frogger_dying_hit[:],\n\t.Frogger_Dying_Drown = animation_frames_frogger_dying_drown[:],\n\t.Snake = animation_frames_snake[:],\n}\n\n\nanimation_players := [Animation_Player_Name]Animation_Player {\n\t.Alligator       = { timer = { t = 0, playing = true, loop = true }, fps = 1, animation_name = .Alligator },\n\t.Regular_Turtle  = { timer = { t = 0, playing = true, loop = true }, fps = 3, animation_name = .Regular_Turtle },\n\t.Diving_Turtle_0 = { timer = { t = 0, playing = true, loop = true }, fps = 3, animation_name = .Diving_Turtle },\n\t.Diving_Turtle_1 = { timer = { t = 1, playing = true, loop = true }, fps = 3, animation_name = .Diving_Turtle },\n\t.Snake_0         = { timer = { t = 0, playing = true, loop = true }, fps = 10, animation_name = .Snake },\n\t.Snake_1         = { timer = { t = 1, playing = true, loop = true }, fps = 10, animation_name = .Snake },\n}\n\nanimation_player_frogger_is_dying :=  Animation_Player { timer = { t = 0, playing = false, loop = false }, animation_name = .Frogger_Dying_Hit }\n\nanimation_fps_list := [Animation_Name]f32 {\n\t.Alligator = 1,\n\t.Regular_Turtle = 3,\n\t.Diving_Turtle = 3,\n\t.Frogger_Dying_Hit = 12,\n\t.Frogger_Dying_Drown = 12,\n\t.Snake = 3,\n}\n\nfrogger_anim_timer := Timer {\n\tamount = 0.25,\n\tduration = 0.25,\n}\n\nfrogger_move_lerp_duration : f32 = 0.1\n\n\nfly_lilypad_indices := [?]int{3, 1, 3, 1, 0, 2, 4, 3, 1, 0, 4, 2, 4, 3, 0, 0, 2}\nfly_lilypad_index : int  = 0 // index into array above, not the lilypad\nfly_timer := Timer{\n\tamount = 0,\n\tduration = 4.0,\n}\nfly_is_active : bool     = false\n\n\nglobal_sprite_clip_score_100 := rl.Rectangle {0, 6, 1, 1}\nglobal_sprite_clip_score_200 := rl.Rectangle {1, 6, 1, 1}\n\n\n\n\nDirection :: enum {\n\tUp, Down, Left, Right\n}\n\nmap_direction_rotation := [Direction]f32 {\n\t.Up = 0,\n\t.Down = 180,\n\t.Left = 270,\n\t.Right = 90\n}\n\n\nlily_is_active : bool = false\nlily_sprite_sheet_clip := rl.Rectangle {2, 1, 1, 1}\nlily_relative_log_pos_x : f32 = 0\nlily_width : f32 = 1\nlily_height : f32 = 1\n\nlily_wait_timer := Timer {\n\tamount   = 0,\n\tduration = 1,\n}\n\nlily_direction : Direction = .Right\n\nlily_lerp_timer := Timer {\n\tamount = 0.2,\n\tduration = 0.2,\n}\nlily_lerp_relative_log_start_x : f32 = 0\nlily_lerp_relative_log_end_x   : f32 = 0 \n\nlily_logs_to_spawn_on := [?]int{15, 17, 14, 0, 0}\n\n\nSnake_Mode :: enum\n{\n\tOn_Entity,\n\tOn_Median,\n}\n\nSnake_Behavior_State :: struct\n{\n\tsnake_mode : Snake_Mode,\n\ton_entity_id : int,\n}\n\nsnakes_by_level := [?][]Entity {\n\tsnakes_level_1[:],\n\tsnakes_level_2[:],\n\tsnakes_level_3[:],\n\tsnakes_level_4[:],\n\tsnakes_level_5[:],\n}\n\nsnakes_level_1 := [?]Entity{}\nsnakes_level_2 := [?]Entity{}\nsnakes_level_3 := [?]Entity{\n\t{ rectangle = {-2, 8, 2, 1}, speed = 1, sprite_data = Animation_Player_Name.Snake_0, snake_behavior = { snake_mode = .On_Median, on_entity_id = 12 } },\n}\nsnakes_level_4 := [?]Entity {\n\t{ rectangle = {-2, 8, 2, 1}, speed = 1.8, sprite_data = Animation_Player_Name.Snake_0, snake_behavior = { snake_mode = .On_Median, on_entity_id = 10 }, },\n}\nsnakes_level_5 := [?]Entity {\n\t{ rectangle = {-2, 8, 2, 1}, speed = 1, sprite_data = Animation_Player_Name.Snake_0, snake_behavior = { snake_mode = .On_Median, on_entity_id = 8 }, },\n\t{ rectangle = {global_number_grid_cells_axis_x, 8, 2, 1}, speed = -1, sprite_data = Animation_Player_Name.Snake_1, snake_behavior = { snake_mode = .On_Median, on_entity_id = 9 } },\n}\n\n\n\n\nlilypad_ids_crocodile := [?]int{4, 0, 3, 1, 2, 1, 3, 0}\ncurrent_crocodile_lilypad_id_index := 0\n\ntimer_crocodile_inactive := Timer { amount = 0, duration = 6.0 }\ntimer_crocodile_peek     := Timer { amount = 2.0, duration = 2.0 }\ntimer_crocodile_attack   := Timer { amount = 1.0, duration = 1.0 }\n\n\n\n\nmove_entities_and_wrap :: proc(entities: []Entity, dt: f32)\n{\n\tfor &entity in entities\n\t{\n\t\trectangle := &entity.rectangle\n\t\trectangle_move_amount := rows_by_level[gmem.level_index][entity.row_id].speed * gmem.dbg_speed_multiplier * dt\n\t\trectangle.x += rectangle_move_amount\n\n\t\twarp_pos_on_left_side_x := rows_by_level[gmem.level_index][entity.row_id].start_x\n\t\tshould_warp_to_right_side_of_screen := rectangle_move_amount < 0 && rectangle.x < warp_pos_on_left_side_x\n\n\t\twarp_pos_on_right_side_x := global_number_grid_cells_axis_x \n\t\tshould_warp_to_left_side_of_screen := rectangle_move_amount > 0 && rectangle.x > warp_pos_on_right_side_x \n\n\t\tif should_warp_to_right_side_of_screen\n\t\t{\n\t\t\tovershoot : f32 = warp_pos_on_left_side_x - rectangle.x \n\t\t\trectangle.x = global_number_grid_cells_axis_x - overshoot\n\t\t}\n\t\telse if should_warp_to_left_side_of_screen \n\t\t{\n\t\t\tovershoot : f32 = rectangle.x - warp_pos_on_right_side_x \n\t\t\trectangle.x = warp_pos_on_left_side_x + overshoot\n\t\t}\n\t}\n}\n\n\nmove_frogger_with_intersecting_entities :: proc(frogger_pos, frogger_lerp_end_pos: [2]f32, entities: []Entity, dt: f32) -> (moved_pos: [2]f32, moved_lerp_end_pos: [2]f32)\n{\n\n\t// Note(jblat): this assumes the position refers to something that is 1 x 1 tile rectangle shape\n\t// also, if for some reason frogger ever collides with multiple entities, he will move multiple times, so.... yeah...\n\tcenter_pos := [2]f32{frogger_pos.x + 0.5, frogger_pos.y + 0.5}\n\tmoved_pos = frogger_pos\n\tmoved_lerp_end_pos = frogger_lerp_end_pos\n\n\tfor entity, i in entities \n\t{\n\t\t// TODO(jblat): don't do the processing here probably\n\t\tif entity.collision_behavior != .Move_Frogger\n\t\t{\n\t\t\tcontinue\n\t\t}\n\t\tis_center_pos_inside_log_rectangle := rl.CheckCollisionPointRec(center_pos, entity.rectangle)\n\t\tshould_frogger_move_with_entity := is_center_pos_inside_log_rectangle \n\t\t\n\t\tif should_frogger_move_with_entity \n\t\t{\n\t\t\tspeed := rows_by_level[gmem.level_index][entity.row_id].speed\n\t\t\tmove_speed : f32 = speed * gmem.dbg_speed_multiplier\n\t\t\tmove_amount := move_speed * dt\n\n\t\t\tmoved_pos.x += move_amount\n\t\t\tmoved_lerp_end_pos.x += move_amount\n\n\t\t}\n\t}\n\n\treturn\n}\n\n\n// Note(jblat): This will make sure that if the above entities change,\n// They will actually be reset\n// @(export)\n// game_reset_entities :: proc(mem: ^Game_Memory)\n// {\n// \tgmem.entities = entities[:]\n// }\n\n\nglobal_countdown_timer_lose_life_duration : f32 = 30.0\n\n@(export)\ngame_init :: proc()\n{\n\n\tgmem = new(Game_Memory)\n\n\tgmem.root_state = .Main_Menu\n\n\tstring_fs  := strings.string_from_ptr(&bytes_aa_pixel_filter_shader[0], len(bytes_aa_pixel_filter_shader))\n\tcstring_fs := strings.clone_to_cstring(string_fs, context.temp_allocator)\n\tgmem.shader_pixel_filter = rl.LoadShaderFromMemory(nil, cstring_fs)\n\tgame_render_target := rl.LoadRenderTexture(i32(global_game_view_pixels_width), i32(global_game_view_pixels_height))\n\trl.SetTextureFilter(game_render_target.texture, rl.TextureFilter.BILINEAR)\n\trl.SetTextureWrap(game_render_target.texture, .CLAMP) // this stops sub-pixel artifacts on edges of game texture\n\n\tgmem.game_render_target = game_render_target\n\n\tgmem.dbg_show_grid = false\n\tgmem.dbg_is_frogger_unkillable = false\n\n\tgmem.frogger_pos = [2]f32{7,14}\n\tgmem.frogger_move_lerp_timer = Timer {\n\t\tamount = frogger_move_lerp_duration,\n\t\tduration = frogger_move_lerp_duration,\n\t}\n\n\tgmem.is_frogs_on_lilypads = is_frogs_on_lilypads\n\n\timage_sprite_sheet := rl.LoadImageFromMemory(\".png\", &bytes_image_data_sprite_sheet_bytes[0], i32(len(bytes_image_data_sprite_sheet_bytes)))\n\timage_background   := rl.LoadImageFromMemory(\".png\", &bytes_image_data_background[0], i32(len(bytes_image_data_background)))\n\n\tgmem.texture_sprite_sheet = rl.LoadTextureFromImage(image_sprite_sheet)\n\trl.SetTextureFilter(gmem.texture_sprite_sheet, rl.TextureFilter.POINT)\n\trl.SetTextureWrap(gmem.texture_sprite_sheet, .CLAMP) // NOTE(jalfonso) idk - this might not be necesarry - but wanted to add it to see if it removes subpixel artifacts on some machines i've tested on\n\tgmem.texture_background   = rl.LoadTextureFromImage(image_background)\n\n\tgmem.font = rl.LoadFontFromMemory(\".otf\", &bytes_font_data[0], i32(len(bytes_font_data)), 256, nil, 0)\n\n\tgmem.score_frogger_max_y_tracker = gmem.frogger_pos.y - 1\n\n\tgmem.level_end_timer = Timer{\n\t\tamount = 6.0,\n\t\tduration = 6.0,\n\t\tloop = false,\n\t}\n\n\tgmem.timer_is_active_score_100 = timer_init(2.0, false)\n\tgmem.timer_is_active_score_200 = timer_init(2.0, false)\n\n\tgmem.animation_player_frogger_is_dying = { timer = { t = 0, playing = false, loop = false }, animation_name = .Frogger_Dying_Hit }\n\n\tgmem.dbg_camera_zoom = 1.0\n\n\tgmem.countdown_timer_lose_life = global_countdown_timer_lose_life_duration\n\n\tgmem.dbg_speed_multiplier = 1.0\n\n\tgmem.level_index = 0\n\n\tgmem.lives = 3\n\n}\n\n\nfrogger_reset :: proc()\n{\n\tpos := [2]f32{7,14}\n\n\tgmem.frogger_pos = pos\n\tgmem.frogger_sprite_rotation = 0.0\n\tgmem.score_frogger_max_y_tracker = pos.y - 1\n\tgmem.is_lily_on_frogger = false\n\ttimer_stop(&gmem.frogger_move_lerp_timer)\n\tgmem.countdown_timer_lose_life = global_countdown_timer_lose_life_duration\n}\n\n\nfrogger_start_dying :: proc(animation_name: Animation_Name)\n{\n\tgmem.animation_player_frogger_is_dying.animation_name = animation_name\n\tgmem.is_lily_on_frogger = false\n\ttimer_stop(&gmem.frogger_move_lerp_timer)\n\tanimation_timer_start(&gmem.animation_player_frogger_is_dying.timer)\n\tif gmem.lives != 0\n\t{\n\t\tgmem.lives -= 1\n\t}\n}\n\n\nroot_state_main_menu_enter :: proc()\n{\n\tfrogger_reset()\n\tgmem.root_state = .Main_Menu\n\tgmem.level_index = 0\n\tfor &is_frog_on_lilypad in gmem.is_frogs_on_lilypads\n\t{\n\t\tis_frog_on_lilypad = false\n\t}\n\tgmem.score = 0\n}\n\nroot_state_game :: proc()\n{\n\tentities := entities_by_level[gmem.level_index]\n\totters := otters_by_level[gmem.level_index]\n\totter_spawn_descriptions := otter_spawn_descriptions_by_level[gmem.level_index]\n\tsnakes := snakes_by_level[gmem.level_index]\n\n\tif rl.IsKeyPressed(.ENTER)\n\t{\n\t\tgmem.pause = !gmem.pause\n\t}\n\n\tif rl.IsKeyPressed(.BACKSPACE)\n\t{\n\t\tgmem.pause = !gmem.pause\n\t}\n\n\tskip_next_frame := false \n\n\twhen ODIN_DEBUG\n\t{\n\t\tcamera_mod_key := rl.KeyboardKey.C\n\t\tlevel_mod_key := rl.KeyboardKey.L\n\t\tfrogs_on_lilypad_mod_key := rl.KeyboardKey.F\n\n\t\tif rl.IsKeyDown(camera_mod_key)\n\t\t{\n\t\t\tif rl.IsKeyDown(.LEFT_BRACKET) && rl.IsKeyDown(.RIGHT_BRACKET)\n\t\t\t{\n\t\t\t\tgmem.dbg_camera_offset_to_left = 0\n\t\t\t}\n\t\t\telse if rl.IsKeyPressed(.LEFT_BRACKET)\n\t\t\t{\n\t\t\t\tgmem.dbg_camera_offset_to_left -= global_grid_cell_size\n\t\t\t}\n\t\t\telse if rl.IsKeyPressed(.RIGHT_BRACKET)\n\t\t\t{\n\t\t\t\tgmem.dbg_camera_offset_to_left += global_grid_cell_size\n\t\t\t}\n\n\t\t\tif rl.IsKeyDown(.MINUS) && rl.IsKeyDown(.EQUAL)\n\t\t\t{\n\t\t\t\tgmem.dbg_camera_zoom = 1.0\n\t\t\t}\n\t\t\telse if rl.IsKeyPressed(.MINUS)\n\t\t\t{\n\t\t\t\tgmem.dbg_camera_zoom -= 0.1\n\t\t\t}\n\t\t\telse if rl.IsKeyPressed(.EQUAL)\n\t\t\t{\n\t\t\t\tgmem.dbg_camera_zoom += 0.1\n\t\t\t}\n\t\t}\n\t\telse if rl.IsKeyDown(level_mod_key)\n\t\t{\n\t\t\tif rl.IsKeyPressed(.RIGHT_BRACKET)\n\t\t\t{\n\t\t\t\tif gmem.level_index == 4\n\t\t\t\t{\n\t\t\t\t\tgmem.level_index = 0\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tgmem.level_index += 1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if rl.IsKeyPressed(.LEFT_BRACKET)\n\t\t\t{\n\t\t\t\tif gmem.level_index == 0\n\t\t\t\t{\n\t\t\t\t\tgmem.level_index = 4\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tgmem.level_index -= 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if rl.IsKeyDown(frogs_on_lilypad_mod_key)\n\t\t{\n\t\t\tif rl.IsKeyPressed(.RIGHT_BRACKET)\n\t\t\t{\n\t\t\t\tfor &present in gmem.is_frogs_on_lilypads\n\t\t\t\t{\n\t\t\t\t\tif !present\n\t\t\t\t\t{\n\t\t\t\t\t\tpresent = true\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if rl.IsKeyPressed(.M)\n\t\t{\n\t\t\troot_state_main_menu_enter()\n\t\t\treturn\n\t\t}\n\t\telse\n\t\t{\n\t\t\tskip_next_frame = rl.IsKeyPressed(.RIGHT)\n\n\t\t\tif rl.IsKeyDown(.LEFT_BRACKET) && rl.IsKeyDown(.RIGHT_BRACKET)\n\t\t\t{\n\t\t\t\tgmem.dbg_speed_multiplier = 5.0\n\t\t\t}\n\t\t\telse if rl.IsKeyDown(.LEFT_BRACKET)\n\t\t\t{\n\t\t\t\tgmem.dbg_speed_multiplier = 2.0\n\t\t\t}\n\t\t\telse if rl.IsKeyDown(.RIGHT_BRACKET)\n\t\t\t{\n\t\t\t\tgmem.dbg_speed_multiplier = 3.0\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgmem.dbg_speed_multiplier = 1.0\n\t\t\t}\n\n\t\t\tif rl.IsKeyPressed(.T)\n\t\t\t{\n\t\t\t\tgmem.dbg_timer_lose_life_pause = !gmem.dbg_timer_lose_life_pause\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\n\tframe_time_uncapped := rl.GetFrameTime()\n\tframe_time := min(frame_time_uncapped, f32(1.0/60.0))\n\n\n\tfrogger_anim_frames := [?]Sprite_Clip_Name{\n\t\t.Frogger_Frame_1, .Frogger_Frame_2, .Frogger_Frame_1, .Frogger_Frame_0,\n\t}\n\n\n\triver := rl.Rectangle{0, 3, 14, 5}\n\triverbed := rl.Rectangle{0, 1, 14,2}\n\n\tshould_run_simulation := true\n\tif gmem.pause && !skip_next_frame\n\t{\n\t\tshould_run_simulation = false\n\t}\n\n\tif should_run_simulation\n\t{\t\n\n\t\tcan_frogger_request_move := timer_is_complete(gmem.frogger_move_lerp_timer)  && !animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer) && timer_is_complete(gmem.level_end_timer) && !gmem.pause\n\t\tif can_frogger_request_move  \n\t\t{\n\t\t\tfrogger_move_direction := [2]f32{0,0}\n\t\t\tis_input_left := rl.IsKeyPressed(.LEFT) || rl.IsGamepadButtonPressed(0, .LEFT_FACE_LEFT)\n\t\t\tis_input_right := rl.IsKeyPressed(.RIGHT) || rl.IsGamepadButtonPressed(0, .LEFT_FACE_RIGHT)\n\t\t\tis_input_up := rl.IsKeyPressed(.UP) || rl.IsGamepadButtonPressed(0, .LEFT_FACE_UP)\n\t\t\tis_input_down := rl.IsKeyPressed(.DOWN) || rl.IsGamepadButtonPressed(0, .LEFT_FACE_DOWN)\n\n\t\t\tif is_input_left\n\t\t\t{\n\t\t\t\tfrogger_move_direction.x = -1\n\t\t\t\tgmem.frogger_sprite_rotation  = 270\n\t\t\t}\n\t\t\telse if is_input_right\n\t\t\t{\n\t\t\t\tfrogger_move_direction.x = 1\n\t\t\t\tgmem.frogger_sprite_rotation = 90\n\t\t\t} \n\t\t\telse if is_input_up\n\t\t\t{\n\t\t\t\tfrogger_move_direction.y = -1\n\t\t\t\tgmem.frogger_sprite_rotation = 0\n\t\t\t} \n\t\t\telse if is_input_down\n\t\t\t{\n\t\t\t\tfrogger_move_direction.y = 1\n\t\t\t\tgmem.frogger_sprite_rotation = 180\n\t\t\t}\n\n\t\t\tdid_frogger_request_move := frogger_move_direction != [2]f32{0,0}\n\n\t\t\tif did_frogger_request_move \n\t\t\t{\n\t\t\t\ttimer_start(&frogger_anim_timer)\n\n\t\t\t\tfrogger_next_pos := gmem.frogger_pos + frogger_move_direction\n\t\t\t\tfrogger_next_center_pos := frogger_next_pos + 0.5\n\t\t\t\t\n\t\t\t\twill_frogger_be_out_of_left_bounds :=  frogger_next_center_pos.x < 0 && frogger_move_direction.x == -1\n\t\t\t\twill_frogger_be_out_of_right_bounds := frogger_next_center_pos.x > global_number_grid_cells_axis_x - 1 && frogger_move_direction.x == 1\n\t\t\t\twill_frogger_be_out_of_top_bounds := frogger_next_pos.y < 0 && frogger_move_direction.y == -1\n\t\t\t\twill_frogger_be_out_of_bottom_bounds := frogger_next_pos.y > global_number_grid_cells_axis_y - 2&& frogger_move_direction.y == 1\n\t\t\t\t\n\t\t\t\twill_frogger_be_out_of_bounds_on_next_move := will_frogger_be_out_of_left_bounds || \n\t\t\t\t\twill_frogger_be_out_of_right_bounds || \n\t\t\t\t\twill_frogger_be_out_of_top_bounds || \n\t\t\t\t\twill_frogger_be_out_of_bottom_bounds\n\n\t\t\t\tfrogger_center_pos := gmem.frogger_pos + 0.5\n\t\t\t\tif will_frogger_be_out_of_left_bounds && !(frogger_center_pos.x < 0) \n\t\t\t\t{\n\t\t\t\t\tfrogger_next_pos.x = 0\n\n\t\t\t\t\tif !(frogger_next_pos.x >= gmem.frogger_pos.x)\n\t\t\t\t\t{\n\t\t\t\t\t\ttimer_start(&gmem.frogger_move_lerp_timer)\n\t\t\t\t\t\tgmem.frogger_move_lerp_start_pos = gmem.frogger_pos\n\t\t\t\t\t\tgmem.frogger_move_lerp_end_pos = frogger_next_pos\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if will_frogger_be_out_of_right_bounds && !(frogger_center_pos.x > global_number_grid_cells_axis_x)\n\t\t\t\t{\n\t\t\t\t\ttimer_start(&gmem.frogger_move_lerp_timer)\n\t\t\t\t\tgmem.frogger_move_lerp_start_pos = gmem.frogger_pos\n\t\t\t\t\tfrogger_next_pos.x = global_number_grid_cells_axis_x - 1\n\t\t\t\t\tgmem.frogger_move_lerp_end_pos = frogger_next_pos\n\t\t\t\t}\n\t\t\t\telse if !will_frogger_be_out_of_bounds_on_next_move\n\t\t\t\t{\n\t\t\t\t\ttimer_start(&gmem.frogger_move_lerp_timer)\n\t\t\t\t\tgmem.frogger_move_lerp_start_pos = gmem.frogger_pos\n\t\t\t\t\tgmem.frogger_move_lerp_end_pos = frogger_next_pos\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tshould_update_lily := !gmem.is_lily_on_frogger\n\t\tif should_update_lily \n\t\t{ \n\t\t\tentity_that_lily_is_on := entities[lily_logs_to_spawn_on[gmem.level_index]]\n\n\t\t\tlily_lerp_timer_just_completed := false\n\t\t\tif timer_is_playing(lily_lerp_timer)\n\t\t\t{\n\t\t\t\tlily_lerp_timer_just_completed = !timer_advance(&lily_lerp_timer, frame_time)\n\t\t\t\tt := timer_percentage(lily_lerp_timer)\n\t\t\t\tt = min(t, 1.0)\n\t\t\t\tlily_relative_log_pos_x = (1.0 - t) * lily_lerp_relative_log_start_x + t * lily_lerp_relative_log_end_x\n\t\t\t}\n\n\t\t\tif lily_lerp_timer_just_completed\n\t\t\t{\n\t\t\t\ttimer_start(&lily_wait_timer)\n\n\t\t\t\tright_edge_of_log_x := entity_that_lily_is_on.rectangle.width - 1\n\t\t\t\tis_lily_on_right_edge_of_log := lily_relative_log_pos_x >= right_edge_of_log_x\n\t\t\t\t\n\t\t\t\tleft_edge_of_log_x : f32 = 0\n\t\t\t\tis_lily_on_left_edge_of_log := lily_relative_log_pos_x <= left_edge_of_log_x\t\n\n\t\t\t\tis_lily_on_edge_of_log :=  is_lily_on_right_edge_of_log || is_lily_on_left_edge_of_log\n\t\t\t\tif is_lily_on_edge_of_log\n\t\t\t\t{\n\t\t\t\t\tlily_direction = .Up\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlily_wait_timer_just_completed := false\n\t\t\tif timer_is_playing(lily_wait_timer)\n\t\t\t{\n\t\t\t\tlily_wait_timer_just_completed = !timer_advance(&lily_wait_timer, frame_time)\n\t\t\t}\n\n\t\t\tif lily_wait_timer_just_completed\n\t\t\t{\n\t\t\t\tmove_amount_x := f32(0)\n\n\t\t\t\tright_edge_of_log_x := entity_that_lily_is_on.rectangle.width - 1\n\t\t\t\tis_lily_on_right_edge_of_log := lily_relative_log_pos_x >= right_edge_of_log_x\n\t\t\t\t\n\t\t\t\tleft_edge_of_log_x : f32 = 0\n\t\t\t\tis_lily_on_left_edge_of_log := lily_relative_log_pos_x <= left_edge_of_log_x\n\n\t\t\t\tshould_move_lily_right := lily_direction == .Right || is_lily_on_left_edge_of_log\n\t\t\t\tif should_move_lily_right\n\t\t\t\t{\n\t\t\t\t\tlily_direction = .Right\n\t\t\t\t\tmove_amount_x = 1\n\t\t\t\t}\n\n\t\t\t\tshould_move_lily_left := lily_direction == .Left || is_lily_on_right_edge_of_log\n\t\t\t\tif should_move_lily_left\n\t\t\t\t{\n\t\t\t\t\tlily_direction = .Left\n\t\t\t\t\tmove_amount_x = -1\n\t\t\t\t}\n\n\t\t\t\tdid_lily_move_amount_get_set := move_amount_x != 0\n\n\t\t\t\tif did_lily_move_amount_get_set\n\t\t\t\t{\n\t\t\t\t\tlily_lerp_relative_log_start_x = lily_relative_log_pos_x\n\t\t\t\t\tlily_lerp_relative_log_end_x = lily_lerp_relative_log_start_x + move_amount_x\n\t\t\t\t\ttimer_start(&lily_lerp_timer)\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\t\n\t\t\n\n\t\tshould_check_for_lily_frogger_collision := !gmem.is_lily_on_frogger\n\t\tif should_check_for_lily_frogger_collision\n\t\t{\n\t\t\tfrogger_center_pos    := gmem.frogger_pos + 0.5\n\t\t\tentity_that_lily_is_on   := entities[lily_logs_to_spawn_on[gmem.level_index]]\n\t\t\tlily_relative_log_rectangle := rl.Rectangle { lily_relative_log_pos_x, 0, 1, 1 }\n\t\t\tlily_world_rectangle        := rl.Rectangle{ \n\t\t\t\tlily_relative_log_rectangle.x + entity_that_lily_is_on.rectangle.x, \n\t\t\t\tlily_relative_log_rectangle.y + entity_that_lily_is_on.rectangle.y, \n\t\t\t\t1, \n\t\t\t\t1 \n\t\t\t}\n\t\t\tis_frogger_intersecting_lily := rl.CheckCollisionPointRec(frogger_center_pos, lily_world_rectangle)\n\t\t\tif is_frogger_intersecting_lily\n\t\t\t{\n\t\t\t\tgmem.is_lily_on_frogger = true\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tshould_move_frogger := timer_is_playing(gmem.frogger_move_lerp_timer)\n\t\tif should_move_frogger \n\t\t{\n\t\t\ttimer_advance(&gmem.frogger_move_lerp_timer, frame_time)\n\t\t\tt := timer_percentage(gmem.frogger_move_lerp_timer)\n\t\t\tt = min(t, 1.0)\n\t\t\tgmem.frogger_pos.x = (1.0 - t) * gmem.frogger_move_lerp_start_pos.x + t * gmem.frogger_move_lerp_end_pos.x\n\t\t\tgmem.frogger_pos.y = (1.0 - t) * gmem.frogger_move_lerp_start_pos.y + t * gmem.frogger_move_lerp_end_pos.y\n\t\t}\n\n\n\t\t{ // update timers\n\t\t\ttimer_advance(&frogger_anim_timer, frame_time)\n\t\t\ttimer_advance(&gmem.timer_is_active_score_100, frame_time)\n\t\t\ttimer_advance(&gmem.timer_is_active_score_200, frame_time)\n\t\t\tfor &animation_player in animation_players\n\t\t\t{\n\t\t\t\tanimation := animation_frames[animation_player.animation_name]\n\t\t\t\tanimation_fps := animation_fps_list[animation_player.animation_name]\n\t\t\t\tanimation_timer_advance(&animation_player.timer, len(animation), animation_fps, frame_time)\n\t\t\t}\n\t\t}\n\n\n\t\t{ // frogger death animation\n\t\t\tif animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer)\n\t\t\t{\n\t\t\t\tanimation := animation_frames[animation_player_frogger_is_dying.animation_name]\n\t\t\t\tanimation_fps := animation_fps_list[animation_player_frogger_is_dying.animation_name]\n\t\t\t\tanimation_timer_advance(&gmem.animation_player_frogger_is_dying.timer, len(animation), animation_fps, frame_time)\n\t\t\t\tdid_complete := animation_timer_is_complete(gmem.animation_player_frogger_is_dying.timer, len(animation), animation_fps)\n\t\t\t\tif did_complete && gmem.lives != 0\n\t\t\t\t{\n\t\t\t\t\tfrogger_reset()\n\t\t\t\t}\n\t\t\t\telse if did_complete && gmem.lives == 0\n\t\t\t\t{\n\t\t\t\t\troot_state_main_menu_enter()\n\t\t\t\t\treturn // don't process anything else here\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\n\n\t\tif !timer_is_playing(gmem.level_end_timer) { // fly \n\t\t\ttimer_advance(&fly_timer, frame_time)\n\t\t\tif timer_is_complete(fly_timer)\n\t\t\t{\n\t\t\t\ttimer_start(&fly_timer)\n\t\t\t\tfly_is_active = !fly_is_active\n\t\t\t\tfly_lilypad_index += 1\n\t\t\t\tif fly_lilypad_index >= len(fly_lilypad_indices)\n\t\t\t\t{\n\t\t\t\t\tfly_lilypad_index = 0\n\t\t\t\t}\n\t\t\t\tfor gmem.is_frogs_on_lilypads[fly_lilypad_indices[fly_lilypad_index]]\n\t\t\t\t{\n\t\t\t\t\tfly_lilypad_index += 1\n\t\t\t\t\tif fly_lilypad_index >= len(fly_lilypad_indices)\n\t\t\t\t\t{\n\t\t\t\t\t\tfly_lilypad_index = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmove_entities_and_wrap(entities, frame_time)\n\n\t\tshould_process_moving_frogger_with_intersecting_entities := !animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer) \n\t\tif should_process_moving_frogger_with_intersecting_entities\n\t\t{ \n\t\t\tgmem.frogger_pos, gmem.frogger_move_lerp_end_pos = move_frogger_with_intersecting_entities(gmem.frogger_pos, gmem.frogger_move_lerp_end_pos, entities, frame_time)\n\t\t}\n\n\t\t{ // frogger get points for moving up\n\t\t\tpoint_value : int = 10\n\t\t\tshould_award_points := gmem.frogger_pos.y <= gmem.score_frogger_max_y_tracker\n\t\t\tif should_award_points\n\t\t\t{\n\t\t\t\tgmem.score_frogger_max_y_tracker -= 1\n\t\t\t\tgmem.score += point_value\n\t\t\t}\n\t\t}\n\n\t\t{ // snakes\n\t\t\tfor &snake, i in snakes\n\t\t\t{\n\n\t\t\t\tleft_turnaround_boundary := -2\n\t\t\t\tright_turnaround_boundary := global_number_grid_cells_axis_x\n\n\t\t\t\tsnake_world_rectangle := snake.rectangle\n\n\t\t\t\tentity_that_snake_is_on := entities[snake.snake_behavior.on_entity_id]\n\n\t\t\t\tif snake.snake_behavior.snake_mode == .On_Entity\n\t\t\t\t{\n\t\t\t\t\tsnake_world_rectangle.x += entity_that_snake_is_on.rectangle.x\n\t\t\t\t\tsnake_world_rectangle.y += entity_that_snake_is_on.rectangle.y\n\t\t\t\t}\n\n\t\t\t\tsnake_is_beyond_right_side_of_screen := snake_world_rectangle.x > global_number_grid_cells_axis_x\n\t\t\t\tsnake_is_beyond_left_side_of_screen := snake_world_rectangle.x <= -snake.rectangle.width\n\n\t\t\t\tmedian_y : f32 = 8\n\t\t\t\tfrogger_is_on_or_below_median := gmem.frogger_pos.y >= median_y\n\t\t\t\n\t\t\t\tif snake.snake_behavior.snake_mode == .On_Median\n\t\t\t\t{\n\t\t\t\t\tsnake.rectangle.x += snake.speed * frame_time * gmem.dbg_speed_multiplier\n\t\t\t\t\tentity_that_snake_is_on_is_offscreen_and_has_room_for_snake := entity_that_snake_is_on.rectangle.x < -snake.rectangle.width\n\t\t\t\t\tsnake_is_offscreen := snake_is_beyond_left_side_of_screen || snake_is_beyond_right_side_of_screen\n\n\t\t\t\t\tshould_switch_to_on_entity_mode := entity_that_snake_is_on_is_offscreen_and_has_room_for_snake && !frogger_is_on_or_below_median && snake_is_offscreen\n\n\t\t\t\t\tif should_switch_to_on_entity_mode\n\t\t\t\t\t{\n\t\t\t\t\t\tsnake.speed = -snake.speed\n\n\t\t\t\t\t\t// TODO(jblat): Make this more of a \"chance\" or random, or based off of counter\n\t\t\t\t\t\t// switch mode\n\t\t\t\t\t\tsnake.snake_behavior.snake_mode = .On_Entity\n\t\t\t\t\t\tsnake.speed = 0.2\n\t\t\t\t\t\tsnake.rectangle.x = 0\n\t\t\t\t\t\tsnake.rectangle.y = 0\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\tsnake_is_moving_left := snake.speed < 0\n\t\t\t\t\t\tshould_turn_right := snake_is_moving_left && snake_is_beyond_left_side_of_screen\n\t\t\t\t\t\tif should_turn_right\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsnake.speed = -snake.speed\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshould_turn_left := !snake_is_moving_left && snake_is_beyond_right_side_of_screen\n\t\t\t\t\t\tif should_turn_left\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsnake.speed = -snake.speed\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if snake.snake_behavior.snake_mode == .On_Entity\n\t\t\t\t{\n\t\t\t\t\t\n\n\t\t\t\t\trel_left_turnaround_boundary : f32 = 0\n\t\t\t\t\trel_right_turnaround_boundary : f32 = entity_that_snake_is_on.rectangle.width - 2\n\n\t\t\t\t\tsnake.rectangle.x += snake.speed * frame_time * gmem.dbg_speed_multiplier\n\t\t\t\t\tif snake.rectangle.x > rel_right_turnaround_boundary\n\t\t\t\t\t{\n\t\t\t\t\t\tsnake.speed = -snake.speed\n\t\t\t\t\t}\n\t\t\t\t\telse if snake.rectangle.x < rel_left_turnaround_boundary\n\t\t\t\t\t{\n\t\t\t\t\t\tsnake.speed = -snake.speed\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tshould_switch_to_snake_median_mode := frogger_is_on_or_below_median && snake_is_beyond_right_side_of_screen\n\t\t\t\t\tif should_switch_to_snake_median_mode\n\t\t\t\t\t{\n\t\t\t\t\t\tsnake.snake_behavior.snake_mode = .On_Median\n\t\t\t\t\t\tfrogger_is_closer_to_left_side_of_screen := gmem.frogger_pos.x <= global_number_grid_cells_axis_x / 2\n\t\t\t\t\t\tsnake.rectangle.y = median_y\n\t\t\t\t\t\tif frogger_is_closer_to_left_side_of_screen\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsnake.rectangle.x = -snake.rectangle.width\n\t\t\t\t\t\t\tsnake.speed = 1\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\tsnake.rectangle.x = global_number_grid_cells_axis_x + snake.rectangle.width\n\t\t\t\t\t\t\tsnake.speed = -1\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tshould_process_crocodile_timers := gmem.level_index != 0\n\t\tif should_process_crocodile_timers \n\t\t{\n\t\t\tif timer_is_playing(timer_crocodile_inactive)\n\t\t\t{\n\t\t\t\tjust_completed := !timer_advance(&timer_crocodile_inactive, frame_time)\n\t\t\t\tif just_completed\n\t\t\t\t{\n\t\t\t\t\ttimer_start(&timer_crocodile_peek)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if timer_is_playing(timer_crocodile_peek)\n\t\t\t{\n\t\t\t\tjust_completed := !timer_advance(&timer_crocodile_peek, frame_time)\n\t\t\t\tif just_completed\n\t\t\t\t{\n\t\t\t\t\ttimer_start(&timer_crocodile_attack)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if timer_is_playing(timer_crocodile_attack)\n\t\t\t{\n\t\t\t\tjust_completed := !timer_advance(&timer_crocodile_attack, frame_time)\n\t\t\t\tif just_completed\n\t\t\t\t{\n\t\t\t\t\ttimer_start(&timer_crocodile_inactive)\n\t\t\t\t\tcurrent_crocodile_lilypad_id_index += 1\n\t\t\t\t\tshould_wrap_index := current_crocodile_lilypad_id_index >= len(lilypad_ids_crocodile)\n\t\t\t\t\tif should_wrap_index\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent_crocodile_lilypad_id_index = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttimer_stop(&timer_crocodile_peek)\n\t\t\ttimer_stop(&timer_crocodile_attack)\n\t\t\ttimer_start(&timer_crocodile_inactive)\n\t\t}\n\n\t\t{ // otters\n\t\t\tfor &otter in otters\n\t\t\t{\n\t\t\t\tjust_finished_attacking := false\n\t\t\t\tif timer_is_playing(otter.timer_attack)\n\t\t\t\t{\n\t\t\t\t\tjust_finished_attacking = !timer_advance(&otter.timer_attack, frame_time)\n\t\t\t\t}\n\t\t\t\t// place otters if they intersect with a entity\n\t\t\t\tis_otter_intersecting_with_any_entities := false\n\t\t\t\tintersecting_entity := Entity {}\n\t\t\t\tfor entity in entities\n\t\t\t\t{\n\t\t\t\t\tis_otter_intersecting_with_any_entities = is_otter_intersecting_with_any_entities || rl.CheckCollisionRecs(otter.entity.rectangle, entity.rectangle)\n\t\t\t\t\tintersecting_entity := entity\n\t\t\t\t}\n\n\t\t\t\tfrogger_rectangle := rl.Rectangle { gmem.frogger_pos.x - 0.2 , gmem.frogger_pos.y, 1.4, 1}\n\n\t\t\t\tis_otter_intersecting_with_frogger := rl.CheckCollisionRecs(otter.entity.rectangle, frogger_rectangle)\n\n\t\t\t\tshould_otter_kill_frogger := is_otter_intersecting_with_frogger && !animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer) && !gmem.dbg_is_frogger_unkillable\n\t\t\t\tif should_otter_kill_frogger\n\t\t\t\t{\n\t\t\t\t\tentity_intersecting_with_frogger := Entity {}\n\t\t\t\t\tfor entity in entities\n\t\t\t\t\t{\n\t\t\t\t\t\tfrogger_center_pos := gmem.frogger_pos + 0.5\n\t\t\t\t\t\tis_frogger_intersecting_with_entity := rl.CheckCollisionPointRec(frogger_center_pos, entity.rectangle)\n\t\t\t\t\t\tif is_frogger_intersecting_with_entity\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tentity_intersecting_with_frogger = entity\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\totter.entity.speed = entity_intersecting_with_frogger.speed\n\t\t\t\t\ttimer_start(&otter.timer_attack)\n\t\t\t\t\tfrogger_start_dying(.Frogger_Dying_Hit)\n\t\t\t\t}\n\n\t\t\t\tis_otter_out_of_left_bounds := otter.entity.speed < 0 && otter.entity.rectangle.x < -otter.entity.rectangle.width\n\t\t\t\tis_otter_out_of_right_bounds := otter.entity.speed > 0 && otter.entity.rectangle.x > global_number_grid_cells_axis_x + 1\n\n\t\t\t\tis_otter_out_of_bounds := is_otter_out_of_left_bounds || is_otter_out_of_right_bounds\n\n\t\t\t\tshould_respawn_otter := ( ( is_otter_out_of_bounds || is_otter_intersecting_with_any_entities ) && !timer_is_playing(otter.timer_attack) ) || just_finished_attacking\n\n\t\t\t\tif should_respawn_otter \n\t\t\t\t{\n\t\t\t\t\tspawn_data := otter_spawn_descriptions[current_otter_spawn_data_id]\n\t\t\t\t\totter.entity.rectangle.x = spawn_data.pos.x\n\t\t\t\t\totter.entity.rectangle.y = spawn_data.pos.y\n\t\t\t\t\totter.entity.speed = spawn_data.speed\n\n\t\t\t\t\tcurrent_otter_spawn_data_id += 1\n\t\t\t\t\tshould_wrap := current_otter_spawn_data_id >= len(otter_spawn_descriptions)\n\t\t\t\t\tif should_wrap\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent_otter_spawn_data_id = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\totter.entity.rectangle.x += otter.entity.speed * frame_time * gmem.dbg_speed_multiplier\n\n\n\t\t\t}\n\t\t}\n\n\t\tshould_check_pre_win_condition_frogger_is_killed := !animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer)  && !gmem.dbg_is_frogger_unkillable\n\t\tif should_check_pre_win_condition_frogger_is_killed\n\t\t{\n\t\t\t{ // crocodile attack\n\t\t\t\tif timer_is_playing(timer_crocodile_attack)\n\t\t\t\t{\n\t\t\t\t\tlilypad_id_crocodile_is_in := lilypad_ids_crocodile[current_crocodile_lilypad_id_index]\n\t\t\t\t\tlilypad := lilypads[lilypad_id_crocodile_is_in]\n\t\t\t\t\tfrogger_center_pos := gmem.frogger_pos + 0.5\n\t\t\t\t\tfrogger_in_crocodile_mouth := rl.CheckCollisionPointRec(frogger_center_pos, lilypad)\n\t\t\t\t\tif frogger_in_crocodile_mouth\n\t\t\t\t\t{\n\t\t\t\t\t\tfrogger_start_dying(.Frogger_Dying_Hit)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tshould_check_for_win_condtions := !animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer) && !timer_is_playing(gmem.level_end_timer)\n\t\tif should_check_for_win_condtions \n\t\t{\n\t\t\tfor lilypad, i in lilypads \n\t\t\t{\t\n\t\t\t\tfrogger_center_pos := gmem.frogger_pos + 0.5\n\t\t\t\tis_frogger_on_lilypad := rl.CheckCollisionPointRec(frogger_center_pos, lilypad)\n\t\t\t\tis_there_already_a_frog_here := gmem.is_frogs_on_lilypads[i]\n\t\t\t\tdid_get_frogger_home := is_frogger_on_lilypad && !is_there_already_a_frog_here\n\t\t\t\t\n\t\t\t\tif did_get_frogger_home \n\t\t\t\t{\n\t\t\t\t\tgmem.is_frogs_on_lilypads[i] = true\n\n\t\t\t\t\t// NOTE(jblat): The extra 10 is essentially to give the effect of getting the 10 points from advancing a tile\n\t\t\t\t\t// 10 = frog safely gets gome\n\t\t\t\t\tscore_amount_get_frogger_home := 60\n\t\t\t\t\tgmem.score += score_amount_get_frogger_home\n\t\t\t\t\t\n\n\t\t\t\t\tdid_frogger_get_fly := fly_lilypad_indices[fly_lilypad_index] == i && fly_is_active\n\t\t\t\t\tif did_frogger_get_fly\n\t\t\t\t\t{\n\t\t\t\t\t\tscore_amount_frogger_get_fly := 100\n\t\t\t\t\t\tgmem.score += score_amount_frogger_get_fly\n\t\t\t\t\t\ttimer_start(&gmem.timer_is_active_score_100)\n\t\t\t\t\t\tgmem.pos_score_100.x = lilypad.x\n\t\t\t\t\t\tgmem.pos_score_100.y = lilypad.y - 1\n\t\t\t\t\t}\n\n\t\t\t\t\tif gmem.is_lily_on_frogger\n\t\t\t\t\t{\n\t\t\t\t\t\tscore_amount_get_lily_home := 200\n\t\t\t\t\t\tgmem.score += score_amount_get_lily_home\n\t\t\t\t\t\ttimer_start(&gmem.timer_is_active_score_200)\n\t\t\t\t\t\tgmem.pos_score_200.x = lilypad.x\n\t\t\t\t\t\tgmem.pos_score_200.y = lilypad.y - 1\n\t\t\t\t\t\tif did_frogger_get_fly\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// make more room\n\t\t\t\t\t\t\tgmem.pos_score_200.y -= 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tgmem.countdown_timer_display_last_cycle_completion = global\n\n\t\t\t\t\t// so i think frogger counts two ticks for every second? based on timing an emulated version\n\t\t\t\t\tremaining_seconds := int(gmem.countdown_timer_lose_life) * 2\n\t\t\t\t\tbonus : int = 10 * remaining_seconds\n\t\t\t\t\tgmem.score += bonus\n\n\t\t\t\t\tgmem.last_cycle_completion_in_seconds = i32(remaining_seconds)\n\t\t\t\t\tfrogger_reset()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnumber_of_frogs_on_lilypad := 0\n\t\t\tfor present in gmem.is_frogs_on_lilypads\n\t\t\t{\n\t\t\t\tif present\n\t\t\t\t{\n\t\t\t\t\tnumber_of_frogs_on_lilypad += 1\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tis_all_frogs_on_lilypads := number_of_frogs_on_lilypad == len(gmem.is_frogs_on_lilypads)\n\t\t\tif is_all_frogs_on_lilypads\n\t\t\t{\n\t\t\t\t// 1000 for saving all frogs\n\t\t\t\tgmem.score += 1000\n\t\t\t\ttimer_start(&gmem.level_end_timer)\n\t\t\t\t// TODO(jalfonso): eventually i think this level stuff will be calculated by modulo\n\t\t\t\tgmem.level_index += 1\n\t\t\t\tif gmem.level_index > 4\n\t\t\t\t{\n\t\t\t\t\tgmem.level_index = 0\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif timer_is_playing(gmem.level_end_timer)\n\t\t{\n\t\t\ttimer_advance(&gmem.level_end_timer, frame_time)\n\t\t\tif timer_is_complete(gmem.level_end_timer)\n\t\t\t{\n\t\t\t\tfor &present in gmem.is_frogs_on_lilypads\n\t\t\t\t{\n\t\t\t\t\tpresent = false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tshould_process_countdown_timer := !animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer) && !gmem.dbg_timer_lose_life_pause\n\t\tif should_process_countdown_timer\n\t\t{\n\t\t\tgmem.countdown_timer_lose_life -= frame_time\n\t\t\tgmem.countdown_timer_lose_life = max(0.0, gmem.countdown_timer_lose_life)\n\t\t}\n\t\t\n\t\tshould_check_for_frogger_is_killed := !animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer)  && !gmem.dbg_is_frogger_unkillable\n\t\tif should_check_for_frogger_is_killed \n\t\t{\n\t\t\tis_frogger_out_of_bounds := gmem.frogger_pos.x + 0.5 < 0 || gmem.frogger_pos.x - 0.5 >= global_number_grid_cells_axis_x -1 || gmem.frogger_pos.y < 0 || gmem.frogger_pos.y > global_number_grid_cells_axis_y\n\t\t\tif is_frogger_out_of_bounds \n\t\t\t{\n\t\t\t\tfrogger_start_dying(.Frogger_Dying_Drown)\n\t\t\t}\n\n\t\t\tfrogger_center_pos := gmem.frogger_pos + 0.5\n\t\t\tfor entity in entities\n\t\t\t{\n\t\t\t\tis_frogger_intersecting_entity := rl.CheckCollisionPointRec(frogger_center_pos, entity.rectangle)\n\t\t\t\tcan_entity_kill_frogger := entity.collision_behavior == .Kill_Frogger\n\t\t\t\tis_frogger_hit_by_entity := is_frogger_intersecting_entity && can_entity_kill_frogger\n\n\t\t\t\tif is_frogger_hit_by_entity\n\t\t\t\t{\n\t\t\t\t\tfrogger_start_dying(.Frogger_Dying_Hit)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tis_frogger_on_safe_entity := false\n\t\t\tis_frogger_moving := !timer_is_complete(gmem.frogger_move_lerp_timer)\n\t\t\tis_frogger_in_river_region := frogger_center_pos.y > river.y && frogger_center_pos.y < river.y + river.height\n\t\t\tis_frogger_in_riverbed := rl.CheckCollisionPointRec(frogger_center_pos, riverbed)\n\n\t\t\tis_frogger_on_one_of_the_open_lilypads := false\n\t\t\tfor lilypad, i in lilypads\n\t\t\t{\n\t\t\t\tis_frogger_on_lilypad := rl.CheckCollisionPointRec(frogger_center_pos, lilypad)\n\t\t\t\tis_frog_already_here := gmem.is_frogs_on_lilypads[i]\n\t\t\t\tis_frogger_on_one_of_the_open_lilypads = is_frogger_on_one_of_the_open_lilypads || (is_frogger_on_lilypad && !is_frog_already_here)\n\t\t\t}\n\n\t\t\tdid_frogger_collide_with_riverbed := is_frogger_in_riverbed && !is_frogger_on_one_of_the_open_lilypads\n\n\t\t\tif did_frogger_collide_with_riverbed\n\t\t\t{\n\t\t\t\tfrogger_start_dying(.Frogger_Dying_Drown)\n\t\t\t}\n\n\t\t\tfor entity in entities\n\t\t\t{\n\t\t\t\tis_frogger_center_pos_inside_entity := rl.CheckCollisionPointRec(frogger_center_pos, entity.rectangle)\n\n\t\t\t\tdoes_entity_keep_frogger_safe := entity.collision_behavior == .Move_Frogger\t\t\t\n\n\t\t\t\tif is_frogger_center_pos_inside_entity\n\t\t\t\t{\n\t\t\t\t\tis_frogger_on_safe_entity = true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor entity in entities\n\t\t\t{\n\t\t\t\t#partial switch sd in entity.sprite_data\n\t\t\t\t{\n\t\t\t\t\tcase Animation_Player_Name:\n\t\t\t\t\t{\n\t\t\t\t\t\tanimation_player_name := sd\n\t\t\t\t\t\tanimation_player := animation_players[animation_player_name]\n\t\t\t\t\t\tanimation_fps := animation_fps_list[animation_player.animation_name]\n\n\t\t\t\t\t\tclip := animation_get_frame_sprite_clip_id(animation_player.timer.t, animation_fps, animation_frames[animation_player.animation_name])\n\n\t\t\t\t\t\tif animation_player.animation_name == .Alligator\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// clip := animation_get_frame_sprite_clip_id(animation_player.timer.t, animation_fps, animation_frames[animation_player.animation_name])\n\t\t\t\t\t\t\tif clip == .Alligator_Mouth_Open\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\thit_box := alligator_hit_box_relative_mouth_open\n\t\t\t\t\t\t\t\thit_box.x += entity.rectangle.x\n\t\t\t\t\t\t\t\thit_box.y += entity.rectangle.y\n\n\t\t\t\t\t\t\t\tfrogger_center_pos := gmem.frogger_pos + 0.5\n\t\t\t\t\t\t\t\tdid_frogger_collide_with_hitbox := rl.CheckCollisionPointRec(frogger_center_pos, hit_box)\n\t\t\t\t\t\t\t\tif did_frogger_collide_with_hitbox\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfrogger_start_dying(.Frogger_Dying_Hit)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if animation_player.animation_name == .Diving_Turtle\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tis_frogger_center_pos_inside_turtle_rectangle := rl.CheckCollisionPointRec(frogger_center_pos,  entity.rectangle)\n\t\t\t\t\t\t\t// clip := animation_get_frame_sprite_clip_id(animation_timers[sd].t, animation_fps_list[animation_id], animation_frames[animation_id])\n\t\t\t\t\t\t\tdiving_turtles_underwater_clip_id := Sprite_Clip_Name.Empty\n\t\t\t\t\t\t\tis_turtle_underwater := clip == diving_turtles_underwater_clip_id\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tshould_frogger_drown := is_frogger_center_pos_inside_turtle_rectangle && is_turtle_underwater\n\t\t\t\t\t\t\tif should_frogger_drown\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tis_frogger_on_safe_entity = false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\tdid_frogger_fall_in_river := !is_frogger_on_safe_entity && is_frogger_in_river_region\n\n\t\t\tif did_frogger_fall_in_river\n\t\t\t{\n\t\t\t\tfrogger_start_dying(.Frogger_Dying_Drown)\n\t\t\t}\n\n\t\t\t{ // snake kill\n\t\t\t\tfor snake, i in snakes\n\t\t\t\t{\n\t\t\t\t\tsnake_relative_hitbox := rl.Rectangle{0, 0, 1, 1}\n\t\t\t\t\tif snake.speed > 0\n\t\t\t\t\t{\n\t\t\t\t\t\t// flipped\n\t\t\t\t\t\tsnake_relative_hitbox = rl.Rectangle{1, 0, 1, 1}\n\t\t\t\t\t}\n\n\t\t\t\t\tsnake_world_hitbox := snake_relative_hitbox\n\t\t\t\t\tsnake_world_hitbox.x += snake.rectangle.x\n\t\t\t\t\tsnake_world_hitbox.y += snake.rectangle.y\n\n\t\t\t\t\tif snake.snake_behavior.snake_mode == .On_Entity\n\t\t\t\t\t{\n\t\t\t\t\t\tparent_rectangle := entities[snake.snake_behavior.on_entity_id].rectangle\n\t\t\t\t\t\tsnake_world_hitbox.x += parent_rectangle.x\n\t\t\t\t\t\tsnake_world_hitbox.y += parent_rectangle.y\n\t\t\t\t\t}\n\n\t\t\t\t\tis_frogger_intersecting_snake_hitbox := rl.CheckCollisionPointRec(frogger_center_pos, snake_world_hitbox)\n\n\t\t\t\t\tif is_frogger_intersecting_snake_hitbox\n\t\t\t\t\t{\n\t\t\t\t\t\tfrogger_start_dying(.Frogger_Dying_Hit)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t{ // countdown timer\n\t\t\t\tis_countdown_complete := gmem.countdown_timer_lose_life <= 0.0 \n\t\t\t\tif is_countdown_complete\n\t\t\t\t{\n\t\t\t\t\tfrogger_start_dying(.Frogger_Dying_Hit)\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t}\n\n\n\n\t{ // debug options\n\t\tif rl.IsKeyPressed(.F1) \n\t\t{\n\t\t\tgmem.dbg_show_grid = !gmem.dbg_show_grid\n\t\t}\n\n\t\tif rl.IsKeyPressed(.F2)\n\t\t{\n\t\t\tgmem.dbg_is_frogger_unkillable = !gmem.dbg_is_frogger_unkillable\n\t\t}\n\n\t\tif rl.IsKeyPressed(.F3)\n\t\t{\n\t\t\tgmem.dbg_show_entity_bounding_rectangles = !gmem.dbg_show_entity_bounding_rectangles\n\t\t}\n\n\t\tif rl.IsKeyPressed(.F4)\n\t\t{\n\t\t\tgmem.dbg_show_level = !gmem.dbg_show_level\n\t\t}\n\n\t}\n\n\n\t// NOTE(jblat): For mouse, see: https://github.com/raysan5/raylib/blob/master/examples/core/core_window_letterbox.c\n\n\t{ // DRAW TO RENDER TEXTURE\n\t\tcamera := rl.Camera2D {\n\t\t\toffset = [2]f32{gmem.dbg_camera_offset_to_left, 0},\n\t\t\ttarget = [2]f32{0,0},\n\t\t\trotation = 0,\n\t\t\tzoom = gmem.dbg_camera_zoom,\n\t\t}\n\n\t\trl.BeginTextureMode(gmem.game_render_target)\n\n\t\trl.BeginMode2D(camera)\n\n\t\trl.ClearBackground(rl.LIGHTGRAY) \n\n\n\t\t{ // draw background\n\t\t\tscale : f32 =  global_grid_cell_size / global_sprite_sheet_cell_size\n\t\t\trl.DrawTextureEx(gmem.texture_background, [2]f32{0,0}, 0, scale, rl.WHITE)\n\t\t}\n\n\n\t\t{ // draw entities\n\t\t\tfor entity, i in entities \n\t\t\t{\n\t\t\t\tswitch sd in entity.sprite_data\n\t\t\t\t{\n\t\t\t\t\tcase Sprite_Clip_Name:\n\t\t\t\t\t{\n\t\t\t\t\t\tdraw_sprite_sheet_clip_on_grid(sd, entity.rectangle, global_grid_cell_size, 0)\n\t\t\t\t\t}\n\t\t\t\t\tcase Animation_Player_Name:\n\t\t\t\t\t{\n\t\t\t\t\t\tanimation_player_id := sd\n\t\t\t\t\t\tanimation_player := animation_players[sd]\n\t\t\t\t\t\tanimation_fps := animation_fps_list[animation_player.animation_name]\n\t\t\t\t\t\tclip := animation_get_frame_sprite_clip_id(animation_player.timer.t, animation_fps, animation_frames[animation_player.animation_name])\n\t\t\t\t\t\tdraw_sprite_sheet_clip_on_grid(clip, entity.rectangle, global_grid_cell_size, 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t{ // draw snakes\n\t\t\tfor snake, i in snakes\n\t\t\t{\n\t\t\t\t#partial switch sd in snake.sprite_data\n\t\t\t\t{\n\t\t\t\t\tcase Animation_Player_Name:\n\t\t\t\t\t{\n\t\t\t\t\t\tr := snake.rectangle\n\t\t\t\t\t\tif snake.snake_behavior.snake_mode == .On_Entity\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparent_entity_rectangle := entities[snake.snake_behavior.on_entity_id].rectangle\n\t\t\t\t\t\t\tr.x += parent_entity_rectangle.x\n\t\t\t\t\t\t\tr.y += parent_entity_rectangle.y\n\t\t\t\t\t\t}\n\t\t\t\t\t\tflip_x := false\n\t\t\t\t\t\tif snake.speed > 0\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tflip_x = true\n\t\t\t\t\t\t}\n\t\t\t\t\t\tanimation_player := animation_players[sd]\n\t\t\t\t\t\tclip := animation_get_frame_sprite_clip_id(animation_player.timer.t, animation_player.fps, animation_frames[animation_player.animation_name])\n\t\t\t\t\t\tdraw_sprite_sheet_clip_on_grid(clip, r, global_grid_cell_size, 0, flip_x, false)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t{ // draw crocodile\n\t\t\tlilypad_rectangle := lilypads[lilypad_ids_crocodile[current_crocodile_lilypad_id_index]] \n\t\t\tis_frog_here := gmem.is_frogs_on_lilypads[lilypad_ids_crocodile[current_crocodile_lilypad_id_index]]\n\n\t\t\tif timer_is_playing(timer_crocodile_peek) && !is_frog_here\n\t\t\t{\n\t\t\t\tdraw_sprite_sheet_clip_on_grid(.Crocodile_Head_Peek, lilypad_rectangle, global_grid_cell_size, 0)\n\t\t\t}\n\t\t\telse if timer_is_playing(timer_crocodile_attack) && !is_frog_here\n\t\t\t{\n\t\t\t\tdraw_sprite_sheet_clip_on_grid(.Crocodile_Head_Attack, lilypad_rectangle, global_grid_cell_size, 0)\n\t\t\t}\n\t\t}\n\n\t\t{ // draw otters\n\t\t\tfor otter in otters\n\t\t\t{\n\t\t\t\tflip_x := false\n\t\t\t\tif otter.entity.speed < 0\n\t\t\t\t{\n\t\t\t\t\tflip_x = true\n\t\t\t\t}\n\t\t\t\tif timer_is_playing(otter.timer_attack)\n\t\t\t\t{\n\t\t\t\t\tdraw_sprite_sheet_clip_on_grid(.Otter_Attacking, otter.entity.rectangle, global_grid_cell_size, 0, flip_x, false)\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdraw_sprite_sheet_clip_on_grid(.Otter_Peek, otter.entity.rectangle, global_grid_cell_size, 0, flip_x, false)\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\t\n\n\n\t\t{ // draw fly\n\t\t\tclip := fly_is_active ? global_sprite_sheet_clips[.Fly] : rl.Rectangle {}\n\t\t\tlilypad_index := fly_lilypad_indices[fly_lilypad_index%len(fly_lilypad_indices)]\n\t\t\tdst_rect := lilypads[lilypad_index]\n\t\t\trlgrid.draw_grid_texture_clip_on_grid(gmem.texture_sprite_sheet, clip, global_sprite_sheet_cell_size,  dst_rect, global_grid_cell_size, 0)\n\t\t}\n\n\t\t\n\t\t{ // draw frogs on lilypads\n\t\t\tprogress_of_level_end_timer := timer_percentage(gmem.level_end_timer)\n\n\t\t\tfor lp, i in lilypads\n\t\t\t{\t\n\t\t\t\tis_there_a_frog_on_this_lilypad := gmem.is_frogs_on_lilypads[i]\n\t\t\t\tif is_there_a_frog_on_this_lilypad\n\t\t\t\t{\n\t\t\t\t\tfrog_p : f32 = f32(i) / f32(len(lilypads))\n\t\t\t\t\tif progress_of_level_end_timer == 1\n\t\t\t\t\t{\n\t\t\t\t\t\trlgrid.draw_grid_texture_clip_on_grid(gmem.texture_sprite_sheet, global_sprite_sheet_clips[.Happy_Frog_Closed_Mouth], global_sprite_sheet_cell_size,  lp, global_grid_cell_size, 0)\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif frog_p >= progress_of_level_end_timer\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trlgrid.draw_grid_texture_clip_on_grid(gmem.texture_sprite_sheet, global_sprite_sheet_clips[.Happy_Frog_Closed_Mouth], global_sprite_sheet_cell_size,  lp, global_grid_cell_size, 0)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trlgrid.draw_grid_texture_clip_on_grid(gmem.texture_sprite_sheet, global_sprite_sheet_clips[.Happy_Frog_Open_Mouth], global_sprite_sheet_cell_size,  lp, global_grid_cell_size, 0)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t{ // draw frogger\n\t\t\tanim_timer    : f32 =    animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer) ? gmem.animation_player_frogger_is_dying.timer.t     : frogger_anim_timer.amount\n\t\t\tanim_fps      : f32 =    animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer) ? animation_fps_list[gmem.animation_player_frogger_is_dying.animation_name]       : 12.0 \n\t\t\tframes :[]Sprite_Clip_Name = animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer) ? animation_frames[gmem.animation_player_frogger_is_dying.animation_name ] : frogger_anim_frames[:]\n\t\t\trotation : f32         = animation_timer_is_playing(gmem.animation_player_frogger_is_dying.timer) ? 0                            : gmem.frogger_sprite_rotation\n\t\t\t\n\t\t\tclip := animation_get_frame_sprite_clip_id(anim_timer, anim_fps, frames)\n\t\t\trectangle := rl.Rectangle{gmem.frogger_pos.x, gmem.frogger_pos.y, 1, 1}\n\n\t\t\tdraw_sprite_sheet_clip_on_grid(clip, rectangle, global_grid_cell_size, rotation)\n\t\t}\n\n\t\t\n\t\t{ // draw lily\n\t\t\tif gmem.is_lily_on_frogger\n\t\t\t{\n\t\t\t\tdst_rectangle := rl.Rectangle{gmem.frogger_pos.x, gmem.frogger_pos.y, 1, 1}\n\t\t\t\trotation := gmem.frogger_sprite_rotation\n\t\t\t\tif rotation == 0.0\n\t\t\t\t{\n\t\t\t\t\tdst_rectangle.y += 0.15\n\t\t\t\t}\n\t\t\t\telse if rotation == 90.0\n\t\t\t\t{\n\t\t\t\t\tdst_rectangle.x -= 0.15\n\t\t\t\t}\n\t\t\t\telse if rotation == 180.0\n\t\t\t\t{\n\t\t\t\t\tdst_rectangle.y -= 0.15\n\t\t\t\t}\n\t\t\t\telse if rotation == 270.0\n\t\t\t\t{\n\t\t\t\t\tdst_rectangle.x += 0.15\n\t\t\t\t}\n\t\t\t\trlgrid.draw_grid_texture_clip_on_grid(gmem.texture_sprite_sheet, lily_sprite_sheet_clip, global_sprite_sheet_cell_size,  dst_rectangle, global_grid_cell_size, rotation)\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlog_that_lily_is_on := lily_logs_to_spawn_on[gmem.level_index]\n\t\t\t\tlog := entities[log_that_lily_is_on]\n\t\t\t\tlily_world_rectangle := rl.Rectangle{\n\t\t\t\t\tlog.rectangle.x + lily_relative_log_pos_x,\n\t\t\t\t\tlog.rectangle.y,\n\t\t\t\t\tlily_width,\n\t\t\t\t\tlily_height\n\t\t\t\t}\n\t\t\t\trotation := map_direction_rotation[lily_direction]\n\t\t\t\trlgrid.draw_grid_texture_clip_on_grid(gmem.texture_sprite_sheet, lily_sprite_sheet_clip,  global_sprite_sheet_cell_size, lily_world_rectangle, global_grid_cell_size, rotation)\n\t\t\t}\n\t\t}\n\n\t\tif timer_is_playing(gmem.timer_is_active_score_100)\n\t\t{\n\t\t\tdst_rect := rl.Rectangle {gmem.pos_score_100.x, gmem.pos_score_100.y, 1, 1}\n\t\t\trlgrid.draw_grid_texture_clip_on_grid(gmem.texture_sprite_sheet, global_sprite_clip_score_100,  global_sprite_sheet_cell_size, dst_rect, global_grid_cell_size, 0)\n\t\t}\n\n\t\tif timer_is_playing(gmem.timer_is_active_score_200)\n\t\t{\n\t\t\tdst_rect := rl.Rectangle {gmem.pos_score_200.x, gmem.pos_score_200.y, 1, 1}\n\t\t\trlgrid.draw_grid_texture_clip_on_grid(gmem.texture_sprite_sheet, global_sprite_clip_score_200,  global_sprite_sheet_cell_size, dst_rect, global_grid_cell_size, 0)\t\t\t\n\t\t}\n\n\t\t{ // lives\n\t\t\tfor i in 0 ..< gmem.lives\n\t\t\t{\n\t\t\t\tscale : f32 = 0.7\n\n\t\t\t\tdst_rectangle := rl.Rectangle{f32(i) * scale, global_number_grid_cells_axis_y - 1, 1, 1}\n\t\t\t\tdst_rectangle.width *= scale\n\t\t\t\tdst_rectangle.height *= scale\n\t\t\t\tdraw_sprite_sheet_clip_on_grid(.Frogger_Frame_0, dst_rectangle, global_grid_cell_size, 0.0)\n\n\t\t\t}\n\t\t}\n\n\t\t{ \n\n\t\t}\n\t\n\t\tif gmem.dbg_show_grid \n\t\t{ \t\n\t\t\tfor x : f32 = -camera.offset.x; x < global_number_grid_cells_axis_x; x += 1 \n\t\t\t{\n\t\t\t\trender_x := x * global_grid_cell_size\n\t\t\t\trender_start_y : f32 = 0\n\t\t\t\trender_end_y := global_game_view_pixels_height\n\t\t\t\trl.DrawLineV([2]f32{render_x, render_start_y}, [2]f32{render_x, render_end_y}, rl.WHITE)\n\t\t\t}\n\n\t\t\tfor y : f32 = 0; y < global_number_grid_cells_axis_y; y += 1 \n\t\t\t{\n\t\t\t\trender_y := y * global_grid_cell_size\n\t\t\t\trender_start_x : f32 = -camera.offset.x\n\t\t\t\trender_end_x := global_game_view_pixels_width\n\t\t\t\trl.DrawLineV([2]f32{render_start_x, render_y}, [2]f32{render_end_x, render_y}, rl.WHITE)\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tif gmem.dbg_show_entity_bounding_rectangles\n\t\t{\t\n\t\t\tfrogger_rectangle := rl.Rectangle{gmem.frogger_pos.x, gmem.frogger_pos.y, 1, 1}\n\t\t\trlgrid.draw_rectangle_lines_on_grid(frogger_rectangle, 4, rl.GREEN, global_grid_cell_size)\n\t\t}\n\n\t\tif gmem.dbg_show_level\n\t\t{\n\t\t\ttext_level := fmt.ctprintf(\"level: %d\", gmem.level_index + 1)\n\t\t\ttext_pos_level := [2]f32 {1, 8}\n\t\t\trlgrid.draw_text_on_grid(gmem.font, text_level, text_pos_level, 0.7, 0, rl.WHITE, global_grid_cell_size)\n\t\t}\n\n\t\t\n\t\t{ // heads up display\n\t\t\theads_up_display_font_size : f32 = 0.7\n\n\t\t\tone_up_pos := [2]f32{4,0}\n\n\t\t\trlgrid.draw_text_on_grid_right_justified(gmem.font, \"1-UP\", one_up_pos, heads_up_display_font_size, 0, rl.WHITE, f32(global_grid_cell_size))\n\n\t\t\tscore_text := fmt.ctprintf(\"%05d\", gmem.score)\n\t\t\tscore_text_pos := [2]f32 {\n\t\t\t\tone_up_pos.x,\n\t\t\t\tone_up_pos.y + heads_up_display_font_size\n\t\t\t}\n\n\t\t\trlgrid.draw_text_on_grid_right_justified(gmem.font, score_text, score_text_pos, heads_up_display_font_size, 0, rl.WHITE, f32(global_grid_cell_size))\n\n\t\t\tif !timer_is_complete(gmem.level_end_timer)\n\t\t\t{\n\t\t\t\ttext_get_ready : cstring = \"get ready for next level!\"\n\t\t\t\trlgrid.draw_text_on_grid_centered(gmem.font, text_get_ready, [2]f32{global_number_grid_cells_axis_x/2, 8}, heads_up_display_font_size, 0, rl.WHITE, f32(global_grid_cell_size))\n\t\t\t}\n\t\t}\n\n\t\t{ // countdown timer\n\t\t\tmax_rectangle_width : f32 = 7.5\n\t\t\tpercentage_full := gmem.countdown_timer_lose_life / global_countdown_timer_lose_life_duration\n\t\t\trectangle_width := max_rectangle_width * percentage_full\n\n\t\t\ttimer_rectangle := rl.Rectangle { global_number_grid_cells_axis_x - 2, global_number_grid_cells_axis_y - 0.5, rectangle_width, 0.5 }\n\t\t\tcolor := rl.GREEN\n\t\t\tif percentage_full < 0.2\n\t\t\t{\n\t\t\t\tcolor = rl.RED\n\t\t\t}\n\t\t\trlgrid.draw_rectangle_on_grid_right_justified(timer_rectangle, color, global_grid_cell_size)\n\t\t}\n\n\t\trl.EndMode2D()\n\n\t\trl.EndTextureMode()\n\t}\n}\n\n\nroot_state_main_menu :: proc()\n{\n\tis_input_start := rl.IsKeyPressed(.ENTER) || rl.IsGamepadButtonPressed(0, .MIDDLE) || rl.IsGamepadButtonPressed(0, .MIDDLE_LEFT) || rl.IsGamepadButtonPressed(0, .MIDDLE_RIGHT) || rl.IsGamepadButtonPressed(0, .RIGHT_FACE_DOWN)  \n\tif is_input_start\n\t{\n\t\tgmem.lives = 3\n\t\tgmem.root_state = .Game\n\t\tfrogger_reset()\n\t}\n\trl.BeginTextureMode(gmem.game_render_target)\n\tdefer rl.EndTextureMode()\n\n\trl.ClearBackground(rl.BLACK)\n\ttitle_centered_pos := [2]f32{global_number_grid_cells_axis_x / 2, 2}\n\trlgrid.draw_text_on_grid_centered(gmem.font, \"FROGGER\", title_centered_pos, 2, 0, rl.GREEN, global_grid_cell_size )\n\ttitle_centered_pos.y += 2\n\t// rlgrid.draw_text_on_grid_centered(gmem.font, \"PRO\", title_centered_pos, 2, 0, rl.GREEN, global_grid_cell_size )\n\n\tpress_enter_centered_pos := [2]f32{global_number_grid_cells_axis_x / 2, 8}\n\trlgrid.draw_text_on_grid_centered(gmem.font, \"press enter to play\", press_enter_centered_pos, 0.7, 0, rl.WHITE, global_grid_cell_size)\n\n\tcredits_centered_pos := [2]f32{global_number_grid_cells_axis_x / 2, global_number_grid_cells_axis_y - 3}\n\trlgrid.draw_text_on_grid_centered(gmem.font, \"a fanmade frogger remake\", credits_centered_pos, 0.3, 0, rl.WHITE, global_grid_cell_size)\n\n\tcredits_centered_pos.y += 0.3\n\t// rlgrid.draw_text_on_grid_centered(gmem.font, \"code by john blat\", credits_centered_pos, 0.3, 0, rl.WHITE, global_grid_cell_size)\n\n}\n\n\n\n@(export)\ngame_update :: proc()\n{\n\tswitch gmem.root_state\n\t{\n\t\tcase .Main_Menu: root_state_main_menu()\n\t\tcase .Game: root_state_game()\n\t}\n\n\n\t// rendering\n\n\tscreen_width := f32(rl.GetScreenWidth())\n\tscreen_height := f32(rl.GetScreenHeight())\n\n\t{ // DRAW TO WINDOW\n\n\t\trl.BeginDrawing()\n\t\t// rl.BeginShaderMode(gmem.shader_pixel_filter)\n\t\t// rl.BeginBlendMode(.ALPHA_PREMULTIPLY)\n\t\trl.ClearBackground(rl.BLACK)\n\n\t\tsrc := rl.Rectangle{ 0, 0, f32(gmem.game_render_target.texture.width), f32(-gmem.game_render_target.texture.height) }\n\t\t\n\t\tscale := min(screen_width/global_game_view_pixels_width, screen_height/global_game_view_pixels_height)\n\n\t\twindow_scaled_width  := global_game_view_pixels_width * scale\n\t\twindow_scaled_height := global_game_view_pixels_height * scale\n\n\t\tdst := rl.Rectangle{(screen_width - window_scaled_width)/2, (screen_height - window_scaled_height)/2, window_scaled_width, window_scaled_height}\n\t\trl.DrawTexturePro(gmem.game_render_target.texture, src, dst, [2]f32{0,0}, 0, rl.WHITE)\n\n\t\t// rl.EndShaderMode()\n\t\t// rl.EndBlendMode()\n\t\trl.EndDrawing()\n\n\t}\n\n\tfree_all(context.temp_allocator)\n}\n\n@(export)\ngame_shutdown :: proc()\n{\n\twhen ODIN_OS != .JS { // no need to save this in web\n\n\t\twindow_pos    := rl.GetWindowPosition()\n\t\tscreen_width  := rl.GetScreenWidth()\n\t\tscreen_height := rl.GetScreenHeight()\n\n\t\twindow_save_data := Window_Save_Data {i32(window_pos.x), i32(window_pos.y), screen_width, screen_height}\n\t\tbytes_window_save_data := mem.ptr_to_bytes(&window_save_data)\n\n\t\tok := write_entire_file(global_filename_window_save_data, bytes_window_save_data)\n\t\tif !ok\n\t\t{\n\t\t\tfmt.printfln(\"Error opening/creating Window Save Data File\")\n\t\t}\n\t\t// file_window_save_data, err := os2.open(global_filename_window_save_data, {.Write, .Create})\n\t\t// if err != nil\n\t\t// {\n\t\t// \tfmt.printfln(\"Error opening/creating Window Save Data File: %v\", err)\n\t\t// }\n\t\t// n_bytes_written, write_err := os2.write(file_window_save_data, bytes_window_save_data)\n\t\t// if write_err != nil\n\t\t// {\n\t\t// \tfmt.printfln(\"Error saving Window Save Data: %v\", write_err)\n\t\t// }\n\t\t// did_not_write_all_bytes :=  n_bytes_written != size_of(window_save_data)\n\t\t// if did_not_write_all_bytes\n\t\t// {\n\t\t// \tfmt.printfln(\"Error saving Window Save Data: number bytes written = %v, number bytes expected = %v\", n_bytes_written, size_of(window_save_data))\n\t\t// }\n\t}\n}\n\n\nshould_run :: proc() -> bool {\n\twhen ODIN_OS != .JS {\n\t\t// Never run this proc in browser. It contains a 16 ms sleep on web!\n\t\tif rl.WindowShouldClose() {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n\n\n// In a web build, this is called when browser changes size. Remove the\n// `rl.SetWindowSize` call if you don't want a resizable game.\nparent_window_size_changed :: proc(w, h: int) {\n\trl.SetWindowSize(c.int(w), c.int(h))\n}",
			"file": "src/game.odin",
			"file_size": 100315,
			"file_write_time": 133994157800044844,
			"settings":
			{
				"buffer_size": 97955,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					288,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAO5bAQAAAAAA8FsBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7lsBAAAAAADuWwEAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "0,"
					},
					"AgAAAO9bAQAAAAAA8FsBAAAAAAAAAAAA8FsBAAAAAADxWwEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA71sBAAAAAADvWwEAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": " global"
					},
					"BwAAAPFbAQAAAAAA8lsBAAAAAAAAAAAA8lsBAAAAAADzWwEAAAAAAAAAAADzWwEAAAAAAPRbAQAAAAAAAAAAAPRbAQAAAAAA9VsBAAAAAAAAAAAA9VsBAAAAAAD2WwEAAAAAAAAAAAD2WwEAAAAAAPdbAQAAAAAAAAAAAPdbAQAAAAAA+FsBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8VsBAAAAAADxWwEAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": "_num"
					},
					"BAAAAPhbAQAAAAAA+VsBAAAAAAAAAAAA+VsBAAAAAAD6WwEAAAAAAAAAAAD6WwEAAAAAAPtbAQAAAAAAAAAAAPtbAQAAAAAA/FsBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+FsBAAAAAAD4WwEAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMxbAQAAAAAA0VsBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzFsBAAAAAADMWwEAAAAAAAAAAAAAQHlA"
				],
				[
					296,
					1,
					"paste",
					null,
					"AQAAANFbAQAAAAAA21sBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0VsBAAAAAADRWwEAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "global_number_grid_cells_axis_y"
					},
					"AgAAANFbAQAAAAAA0VsBAAAAAAAKAAAAZ2xvYmFsX251bdFbAQAAAAAA8FsBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA21sBAAAAAADbWwEAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"cut",
					null,
					"AQAAANFbAQAAAAAA0VsBAAAAAAAfAAAAZ2xvYmFsX251bWJlcl9ncmlkX2NlbGxzX2F4aXNfeQ",
					"AQAAAAAAAAABAAAA8FsBAAAAAADRWwEAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAPdbAQAAAAAA91sBAAAAAAAKAAAAZ2xvYmFsX251bc1bAQAAAAAAzVsBAAAAAAAEAAAACQkJCQ",
					"AQAAAAAAAAABAAAAAVwBAAAAAAABXAEAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"paste",
					null,
					"AQAAAPNbAQAAAAAAElwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA81sBAAAAAADzWwEAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAABJcAQAAAAAAE1wBAAAAAAAAAAAAE1wBAAAAAAAUXAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAElwBAAAAAAASXAEAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": " 1,"
					},
					"AwAAABRcAQAAAAAAFVwBAAAAAAAAAAAAFVwBAAAAAAAWXAEAAAAAAAAAAAAWXAEAAAAAABdcAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFFwBAAAAAAAUXAEAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABdcAQAAAAAAGFwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF1wBAAAAAAAXXAEAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "1,"
					},
					"AgAAABhcAQAAAAAAGVwBAAAAAAAAAAAAGVwBAAAAAAAaXAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGFwBAAAAAAAYXAEAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAABpcAQAAAAAAG1wBAAAAAAAAAAAAG1wBAAAAAAAcXAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGlwBAAAAAAAaXAEAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "\ndst_rectanlg"
					},
					"DQAAAB1cAQAAAAAAIlwBAAAAAAAAAAAAIlwBAAAAAAAjXAEAAAAAAAAAAAAjXAEAAAAAACRcAQAAAAAAAAAAACRcAQAAAAAAJVwBAAAAAAAAAAAAJVwBAAAAAAAmXAEAAAAAAAAAAAAmXAEAAAAAACdcAQAAAAAAAAAAACdcAQAAAAAAKFwBAAAAAAAAAAAAKFwBAAAAAAApXAEAAAAAAAAAAAApXAEAAAAAACpcAQAAAAAAAAAAACpcAQAAAAAAK1wBAAAAAAAAAAAAK1wBAAAAAAAsXAEAAAAAAAAAAAAsXAEAAAAAAC1cAQAAAAAAAAAAAC1cAQAAAAAALlwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHVwBAAAAAAAdXAEAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAC5cAQAAAAAAL1wBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALlwBAAAAAAAuXAEAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					3,
					"left_delete",
					null,
					"AwAAAC5cAQAAAAAALlwBAAAAAAABAAAAZS1cAQAAAAAALVwBAAAAAAABAAAAZyxcAQAAAAAALFwBAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAL1wBAAAAAAAvXAEAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": "gle."
					},
					"BAAAACxcAQAAAAAALVwBAAAAAAAAAAAALVwBAAAAAAAuXAEAAAAAAAAAAAAuXAEAAAAAAC9cAQAAAAAAAAAAAC9cAQAAAAAAMFwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALFwBAAAAAAAsXAEAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": "width"
					},
					"BQAAADBcAQAAAAAAMVwBAAAAAAAAAAAAMVwBAAAAAAAyXAEAAAAAAAAAAAAyXAEAAAAAADNcAQAAAAAAAAAAADNcAQAAAAAANFwBAAAAAAAAAAAANFwBAAAAAAA1XAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMFwBAAAAAAAwXAEAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": " *="
					},
					"AwAAADVcAQAAAAAANlwBAAAAAAAAAAAANlwBAAAAAAA3XAEAAAAAAAAAAAA3XAEAAAAAADhcAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANVwBAAAAAAA1XAEAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": " scale"
					},
					"BgAAADhcAQAAAAAAOVwBAAAAAAAAAAAAOVwBAAAAAAA6XAEAAAAAAAAAAAA6XAEAAAAAADtcAQAAAAAAAAAAADtcAQAAAAAAPFwBAAAAAAAAAAAAPFwBAAAAAAA9XAEAAAAAAAAAAAA9XAEAAAAAAD5cAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOFwBAAAAAAA4XAEAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "\ndst_rectangl"
					},
					"DQAAAD5cAQAAAAAAQ1wBAAAAAAAAAAAAQ1wBAAAAAABEXAEAAAAAAAAAAABEXAEAAAAAAEVcAQAAAAAAAAAAAEVcAQAAAAAARlwBAAAAAAAAAAAARlwBAAAAAABHXAEAAAAAAAAAAABHXAEAAAAAAEhcAQAAAAAAAAAAAEhcAQAAAAAASVwBAAAAAAAAAAAASVwBAAAAAABKXAEAAAAAAAAAAABKXAEAAAAAAEtcAQAAAAAAAAAAAEtcAQAAAAAATFwBAAAAAAAAAAAATFwBAAAAAABNXAEAAAAAAAAAAABNXAEAAAAAAE5cAQAAAAAAAAAAAE5cAQAAAAAAT1wBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPlwBAAAAAAA+XAEAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "e.height"
					},
					"CAAAAE9cAQAAAAAAUFwBAAAAAAAAAAAAUFwBAAAAAABRXAEAAAAAAAAAAABRXAEAAAAAAFJcAQAAAAAAAAAAAFJcAQAAAAAAU1wBAAAAAAAAAAAAU1wBAAAAAABUXAEAAAAAAAAAAABUXAEAAAAAAFVcAQAAAAAAAAAAAFVcAQAAAAAAVlwBAAAAAAAAAAAAVlwBAAAAAABXXAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAT1wBAAAAAABPXAEAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": " *="
					},
					"AwAAAFdcAQAAAAAAWFwBAAAAAAAAAAAAWFwBAAAAAABZXAEAAAAAAAAAAABZXAEAAAAAAFpcAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAV1wBAAAAAABXXAEAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": " scale"
					},
					"BgAAAFpcAQAAAAAAW1wBAAAAAAAAAAAAW1wBAAAAAABcXAEAAAAAAAAAAABcXAEAAAAAAF1cAQAAAAAAAAAAAF1cAQAAAAAAXlwBAAAAAAAAAAAAXlwBAAAAAABfXAEAAAAAAAAAAABfXAEAAAAAAGBcAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWlwBAAAAAABaXAEAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAMdbAQAAAAAAyFsBAAAAAAAAAAAAyFsBAAAAAADJWwEAAAAAAAAAAADJWwEAAAAAAMpbAQAAAAAAAAAAAMpbAQAAAAAAy1sBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAx1sBAAAAAADHWwEAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMtbAQAAAAAAzFsBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAy1sBAAAAAADLWwEAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": "\nrlgrid."
					},
					"CAAAAGVcAQAAAAAAalwBAAAAAAAAAAAAalwBAAAAAABrXAEAAAAAAAAAAABrXAEAAAAAAGxcAQAAAAAAAAAAAGxcAQAAAAAAbVwBAAAAAAAAAAAAbVwBAAAAAABuXAEAAAAAAAAAAABuXAEAAAAAAG9cAQAAAAAAAAAAAG9cAQAAAAAAcFwBAAAAAAAAAAAAcFwBAAAAAABxXAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZVwBAAAAAABlXAEAAAAAAP///////+9/"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAHFcAQAAAAAAclwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcVwBAAAAAABxXAEAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"left_delete",
					null,
					"AQAAAHFcAQAAAAAAcVwBAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAclwBAAAAAAByXAEAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAHBcAQAAAAAAcFwBAAAAAAABAAAALmpcAQAAAAAAalwBAAAAAAAGAAAAcmxncmlk",
					"AQAAAAAAAAABAAAAcVwBAAAAAABxXAEAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": "draw"
					},
					"BAAAAGpcAQAAAAAAa1wBAAAAAAAAAAAAa1wBAAAAAABsXAEAAAAAAAAAAABsXAEAAAAAAG1cAQAAAAAAAAAAAG1cAQAAAAAAblwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAalwBAAAAAABqXAEAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "draw_sprite_sheet_clip_on_grid(sprite_clip: Sprite_Clip_Name, dst_rectangle: raylib.Rectangle, dst_grid_cell_size, rotation: f32, flip_x: bool = false, flip_y: bool = false)"
					},
					"AgAAAGpcAQAAAAAAalwBAAAAAAAEAAAAZHJhd2pcAQAAAAAAilwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAblwBAAAAAABuXAEAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": ".Frogger"
					},
					"CAAAAIlcAQAAAAAAilwBAAAAAAAAAAAAilwBAAAAAACLXAEAAAAAAAAAAACLXAEAAAAAAIxcAQAAAAAAAAAAAIxcAQAAAAAAjVwBAAAAAAAAAAAAjVwBAAAAAACOXAEAAAAAAAAAAACOXAEAAAAAAI9cAQAAAAAAAAAAAI9cAQAAAAAAkFwBAAAAAAAAAAAAkFwBAAAAAACRXAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiVwBAAAAAACJXAEAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":13,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Frogger_Frame_0"
					},
					"AgAAAIpcAQAAAAAAilwBAAAAAAAHAAAARnJvZ2dlcopcAQAAAAAAmVwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkVwBAAAAAACRXAEAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJlcAQAAAAAAmlwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmVwBAAAAAACZXAEAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJpcAQAAAAAAm1wBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmlwBAAAAAACaXAEAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": "dst_rectangle,"
					},
					"DgAAAJtcAQAAAAAAnFwBAAAAAAAAAAAAnFwBAAAAAACdXAEAAAAAAAAAAACdXAEAAAAAAJ5cAQAAAAAAAAAAAJ5cAQAAAAAAn1wBAAAAAAAAAAAAn1wBAAAAAACgXAEAAAAAAAAAAACgXAEAAAAAAKFcAQAAAAAAAAAAAKFcAQAAAAAAolwBAAAAAAAAAAAAolwBAAAAAACjXAEAAAAAAAAAAACjXAEAAAAAAKRcAQAAAAAAAAAAAKRcAQAAAAAApVwBAAAAAAAAAAAApVwBAAAAAACmXAEAAAAAAAAAAACmXAEAAAAAAKdcAQAAAAAAAAAAAKdcAQAAAAAAqFwBAAAAAAAAAAAAqFwBAAAAAACpXAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAm1wBAAAAAACbXAEAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKlcAQAAAAAAqlwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqVwBAAAAAACpXAEAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": "global"
					},
					"BgAAAKpcAQAAAAAAq1wBAAAAAAAAAAAAq1wBAAAAAACsXAEAAAAAAAAAAACsXAEAAAAAAK1cAQAAAAAAAAAAAK1cAQAAAAAArlwBAAAAAAAAAAAArlwBAAAAAACvXAEAAAAAAAAAAACvXAEAAAAAALBcAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqlwBAAAAAACqXAEAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALBcAQAAAAAAsVwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsFwBAAAAAACwXAEAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"left_delete",
					null,
					"AQAAALBcAQAAAAAAsFwBAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAsVwBAAAAAACxXAEAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":5,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "global_grid_cell_size"
					},
					"AgAAAKpcAQAAAAAAqlwBAAAAAAAGAAAAZ2xvYmFsqlwBAAAAAAC/XAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsFwBAAAAAACwXAEAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAL9cAQAAAAAAwFwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAv1wBAAAAAAC/XAEAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": " 0.0"
					},
					"BAAAAMBcAQAAAAAAwVwBAAAAAAAAAAAAwVwBAAAAAADCXAEAAAAAAAAAAADCXAEAAAAAAMNcAQAAAAAAAAAAAMNcAQAAAAAAxFwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwFwBAAAAAADAXAEAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMRcAQAAAAAAxVwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxFwBAAAAAADEXAEAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMVcAQAAAAAAxlwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxVwBAAAAAADFXAEAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					2,
					"left_delete",
					null,
					"AgAAAMVcAQAAAAAAxVwBAAAAAAABAAAAIMRcAQAAAAAAxFwBAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAxlwBAAAAAADGXAEAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"left_delete",
					null,
					"AQAAAPVbAQAAAAAA9VsBAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA9lsBAAAAAAD2WwEAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAPVbAQAAAAAA9lsBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9VsBAAAAAAD1WwEAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"left_delete",
					null,
					"AQAAABpcAQAAAAAAGlwBAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAG1wBAAAAAAAbXAEAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAABpcAQAAAAAAG1wBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGlwBAAAAAAAaXAEAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": "f32("
					},
					"BAAAAPVbAQAAAAAA9lsBAAAAAAAAAAAA9lsBAAAAAAD3WwEAAAAAAAAAAAD3WwEAAAAAAPhbAQAAAAAAAAAAAPhbAQAAAAAA+VsBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9VsBAAAAAAD1WwEAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAPpbAQAAAAAA+1sBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+lsBAAAAAAD6WwEAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"left_delete",
					null,
					"AQAAAB9cAQAAAAAAH1wBAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAIFwBAAAAAAAgXAEAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAB9cAQAAAAAAIFwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAH1wBAAAAAAAfXAEAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": "\nspacing"
					},
					"CAAAALtbAQAAAAAAwFsBAAAAAAAAAAAAwFsBAAAAAADBWwEAAAAAAAAAAADBWwEAAAAAAMJbAQAAAAAAAAAAAMJbAQAAAAAAw1sBAAAAAAAAAAAAw1sBAAAAAADEWwEAAAAAAAAAAADEWwEAAAAAAMVbAQAAAAAAAAAAAMVbAQAAAAAAxlsBAAAAAAAAAAAAxlsBAAAAAADHWwEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAu1sBAAAAAAC7WwEAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					3,
					"delete_word",
					{
						"forward": false
					},
					"AwAAAMBbAQAAAAAAwFsBAAAAAAAHAAAAc3BhY2luZ7xbAQAAAAAAvFsBAAAAAAAEAAAACQkJCbtbAQAAAAAAu1sBAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAx1sBAAAAAADHWwEAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAPtbAQAAAAAA/FsBAAAAAAAAAAAA/FsBAAAAAAD9WwEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+1sBAAAAAAD7WwEAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": " scalle"
					},
					"BwAAAP1bAQAAAAAA/lsBAAAAAAAAAAAA/lsBAAAAAAD/WwEAAAAAAAAAAAD/WwEAAAAAAABcAQAAAAAAAAAAAABcAQAAAAAAAVwBAAAAAAAAAAAAAVwBAAAAAAACXAEAAAAAAAAAAAACXAEAAAAAAANcAQAAAAAAAAAAAANcAQAAAAAABFwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/VsBAAAAAAD9WwEAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					2,
					"left_delete",
					null,
					"AgAAAANcAQAAAAAAA1wBAAAAAAABAAAAZQJcAQAAAAAAAlwBAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAABFwBAAAAAAAEXAEAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAAJcAQAAAAAAA1wBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAlwBAAAAAAACXAEAAAAAAAAAAAAAAPC/"
				],
				[
					424,
					1,
					"insert",
					{
						"characters": "\ngmem.lives"
					},
					"CwAAAArYAAAAAAAADNgAAAAAAAAAAAAADNgAAAAAAAAN2AAAAAAAAAAAAAAN2AAAAAAAAA7YAAAAAAAAAAAAAA7YAAAAAAAAD9gAAAAAAAAAAAAAD9gAAAAAAAAQ2AAAAAAAAAAAAAAQ2AAAAAAAABHYAAAAAAAAAAAAABHYAAAAAAAAEtgAAAAAAAAAAAAAEtgAAAAAAAAT2AAAAAAAAAAAAAAT2AAAAAAAABTYAAAAAAAAAAAAABTYAAAAAAAAFdgAAAAAAAAAAAAAFdgAAAAAAAAW2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACtgAAAAAAAAK2AAAAAAAAAAAAAAAAPC/"
				],
				[
					425,
					1,
					"insert",
					{
						"characters": " -="
					},
					"AwAAABbYAAAAAAAAF9gAAAAAAAAAAAAAF9gAAAAAAAAY2AAAAAAAAAAAAAAY2AAAAAAAABnYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFtgAAAAAAAAW2AAAAAAAAAAAAAAAAPC/"
				],
				[
					426,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAABnYAAAAAAAAGtgAAAAAAAAAAAAAGtgAAAAAAAAb2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGdgAAAAAAAAZ2AAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAAr/AAAAAAAAC/8AAAAAAAAAAAAAC/8AAAAAAAAM/wAAAAAAAAAAAAAM/wAAAAAAAA3/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACv8AAAAAAAAK/wAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"insert",
					{
						"characters": " gmem.lives"
					},
					"CwAAAA3/AAAAAAAADv8AAAAAAAAAAAAADv8AAAAAAAAP/wAAAAAAAAAAAAAP/wAAAAAAABD/AAAAAAAAAAAAABD/AAAAAAAAEf8AAAAAAAAAAAAAEf8AAAAAAAAS/wAAAAAAAAAAAAAS/wAAAAAAABP/AAAAAAAAAAAAABP/AAAAAAAAFP8AAAAAAAAAAAAAFP8AAAAAAAAV/wAAAAAAAAAAAAAV/wAAAAAAABb/AAAAAAAAAAAAABb/AAAAAAAAF/8AAAAAAAAAAAAAF/8AAAAAAAAY/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADf8AAAAAAAAN/wAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAABj/AAAAAAAAGf8AAAAAAAAAAAAAGf8AAAAAAAAa/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGP8AAAAAAAAY/wAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABr/AAAAAAAAG/8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGv8AAAAAAAAa/wAAAAAAAAAAAAAAAPC/"
				],
				[
					456,
					1,
					"left_delete",
					null,
					"AQAAABr/AAAAAAAAGv8AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAG/8AAAAAAAAb/wAAAAAAAAAAAAAAAPC/"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAABr/AAAAAAAAG/8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGv8AAAAAAAAa/wAAAAAAAAAAAAAAAPC/"
				],
				[
					458,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAABv/AAAAAAAAHP8AAAAAAAAAAAAAHP8AAAAAAAAd/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAG/8AAAAAAAAb/wAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					3,
					"left_delete",
					null,
					"AwAAABz/AAAAAAAAHP8AAAAAAAABAAAAMBv/AAAAAAAAG/8AAAAAAAABAAAAIBr/AAAAAAAAGv8AAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAHf8AAAAAAAAd/wAAAAAAAAAAAAAAAPC/"
				],
				[
					460,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAABr/AAAAAAAAG/8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGv8AAAAAAAAa/wAAAAAAAAAAAAAAAPC/"
				],
				[
					461,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAABv/AAAAAAAAHP8AAAAAAAAAAAAAHP8AAAAAAAAd/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAG/8AAAAAAAAb/wAAAAAAAAAAAAAAAPC/"
				],
				[
					463,
					1,
					"insert",
					{
						"characters": "\nelse"
					},
					"BQAAAE//AAAAAAAAVP8AAAAAAAAAAAAAVP8AAAAAAABV/wAAAAAAAAAAAABV/wAAAAAAAFb/AAAAAAAAAAAAAFb/AAAAAAAAV/8AAAAAAAAAAAAAV/8AAAAAAABY/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAT/8AAAAAAABP/wAAAAAAAAAAAAAAwHlA"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAAFj/AAAAAAAAWf8AAAAAAAAAAAAAWf8AAAAAAABa/wAAAAAAAAAAAABa/wAAAAAAAFv/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWP8AAAAAAABY/wAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"insert",
					{
						"characters": " did_complete"
					},
					"DQAAAFv/AAAAAAAAXP8AAAAAAAAAAAAAXP8AAAAAAABd/wAAAAAAAAAAAABd/wAAAAAAAF7/AAAAAAAAAAAAAF7/AAAAAAAAX/8AAAAAAAAAAAAAX/8AAAAAAABg/wAAAAAAAAAAAABg/wAAAAAAAGH/AAAAAAAAAAAAAGH/AAAAAAAAYv8AAAAAAAAAAAAAYv8AAAAAAABj/wAAAAAAAAAAAABj/wAAAAAAAGT/AAAAAAAAAAAAAGT/AAAAAAAAZf8AAAAAAAAAAAAAZf8AAAAAAABm/wAAAAAAAAAAAABm/wAAAAAAAGf/AAAAAAAAAAAAAGf/AAAAAAAAaP8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAW/8AAAAAAABb/wAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAGj/AAAAAAAAaf8AAAAAAAAAAAAAaf8AAAAAAABq/wAAAAAAAAAAAABq/wAAAAAAAGv/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaP8AAAAAAABo/wAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					1,
					"insert",
					{
						"characters": " gmem.lives"
					},
					"CwAAAGv/AAAAAAAAbP8AAAAAAAAAAAAAbP8AAAAAAABt/wAAAAAAAAAAAABt/wAAAAAAAG7/AAAAAAAAAAAAAG7/AAAAAAAAb/8AAAAAAAAAAAAAb/8AAAAAAABw/wAAAAAAAAAAAABw/wAAAAAAAHH/AAAAAAAAAAAAAHH/AAAAAAAAcv8AAAAAAAAAAAAAcv8AAAAAAABz/wAAAAAAAAAAAABz/wAAAAAAAHT/AAAAAAAAAAAAAHT/AAAAAAAAdf8AAAAAAAAAAAAAdf8AAAAAAAB2/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAa/8AAAAAAABr/wAAAAAAAAAAAAAAAPC/"
				],
				[
					468,
					1,
					"insert",
					{
						"characters": " <"
					},
					"AgAAAHb/AAAAAAAAd/8AAAAAAAAAAAAAd/8AAAAAAAB4/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdv8AAAAAAAB2/wAAAAAAAAAAAAAAAPC/"
				],
				[
					469,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAHj/AAAAAAAAef8AAAAAAAAAAAAAef8AAAAAAAB6/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeP8AAAAAAAB4/wAAAAAAAAAAAAAAAPC/"
				],
				[
					470,
					3,
					"left_delete",
					null,
					"AwAAAHn/AAAAAAAAef8AAAAAAAABAAAAMXj/AAAAAAAAeP8AAAAAAAABAAAAIHf/AAAAAAAAd/8AAAAAAAABAAAAPA",
					"AQAAAAAAAAABAAAAev8AAAAAAAB6/wAAAAAAAAAAAAAAAPC/"
				],
				[
					471,
					1,
					"insert",
					{
						"characters": "=="
					},
					"AgAAAHf/AAAAAAAAeP8AAAAAAAAAAAAAeP8AAAAAAAB5/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAd/8AAAAAAAB3/wAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAHn/AAAAAAAAev8AAAAAAAAAAAAAev8AAAAAAAB7/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAef8AAAAAAAB5/wAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHv/AAAAAAAAgP8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAe/8AAAAAAAB7/wAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAID/AAAAAAAAgv8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgP8AAAAAAACA/wAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAAIH/AAAAAAAAhv8AAAAAAAAAAAAAhv8AAAAAAACL/wAAAAAAAAAAAACC/wAAAAAAAIL/AAAAAAAABAAAAAkJCQmC/wAAAAAAAIf/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgf8AAAAAAACB/wAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					2,
					"left_delete",
					null,
					"AwAAABr/AAAAAAAAGv8AAAAAAAABAAAAPYH/AAAAAAAAgf8AAAAAAAAFAAAACQkJCQkZ/wAAAAAAABn/AAAAAAAAAQAAAD4",
					"AQAAAAAAAAABAAAAG/8AAAAAAAAb/wAAAAAAAAAAAAAAAPC/"
				],
				[
					483,
					1,
					"insert",
					{
						"characters": "!="
					},
					"AgAAABn/AAAAAAAAGv8AAAAAAAAAAAAAGv8AAAAAAAAb/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGf8AAAAAAAAZ/wAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"left_delete",
					null,
					"AQAAABz/AAAAAAAAHP8AAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAHf8AAAAAAAAd/wAAAAAAAAAAAAAAAPC/"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAABz/AAAAAAAAHf8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHP8AAAAAAAAc/wAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"reindent",
					null,
					"AQAAAIL/AAAAAAAAh/8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgv8AAAAAAACC/wAAAAAAAAAAAAAAwHlA"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": "frogger_Reset"
					},
					"DQAAAIf/AAAAAAAAiP8AAAAAAAAAAAAAiP8AAAAAAACJ/wAAAAAAAAAAAACJ/wAAAAAAAIr/AAAAAAAAAAAAAIr/AAAAAAAAi/8AAAAAAAAAAAAAi/8AAAAAAACM/wAAAAAAAAAAAACM/wAAAAAAAI3/AAAAAAAAAAAAAI3/AAAAAAAAjv8AAAAAAAAAAAAAjv8AAAAAAACP/wAAAAAAAAAAAACP/wAAAAAAAJD/AAAAAAAAAAAAAJD/AAAAAAAAkf8AAAAAAAAAAAAAkf8AAAAAAACS/wAAAAAAAAAAAACS/wAAAAAAAJP/AAAAAAAAAAAAAJP/AAAAAAAAlP8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh/8AAAAAAACH/wAAAAAAAAAAAAAAAPC/"
				],
				[
					490,
					5,
					"left_delete",
					null,
					"BQAAAJP/AAAAAAAAk/8AAAAAAAABAAAAdJL/AAAAAAAAkv8AAAAAAAABAAAAZZH/AAAAAAAAkf8AAAAAAAABAAAAc5D/AAAAAAAAkP8AAAAAAAABAAAAZY//AAAAAAAAj/8AAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAlP8AAAAAAACU/wAAAAAAAAAAAAAAAPC/"
				],
				[
					491,
					1,
					"insert",
					{
						"characters": "reset"
					},
					"BQAAAI//AAAAAAAAkP8AAAAAAAAAAAAAkP8AAAAAAACR/wAAAAAAAAAAAACR/wAAAAAAAJL/AAAAAAAAAAAAAJL/AAAAAAAAk/8AAAAAAAAAAAAAk/8AAAAAAACU/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAj/8AAAAAAACP/wAAAAAAAAAAAAAAAPC/"
				],
				[
					492,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJT/AAAAAAAAlv8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlP8AAAAAAACU/wAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "frogger_start_pos"
					},
					"EQAAAJX/AAAAAAAAlv8AAAAAAAAAAAAAlv8AAAAAAACX/wAAAAAAAAAAAACX/wAAAAAAAJj/AAAAAAAAAAAAAJj/AAAAAAAAmf8AAAAAAAAAAAAAmf8AAAAAAACa/wAAAAAAAAAAAACa/wAAAAAAAJv/AAAAAAAAAAAAAJv/AAAAAAAAnP8AAAAAAAAAAAAAnP8AAAAAAACd/wAAAAAAAAAAAACd/wAAAAAAAJ7/AAAAAAAAAAAAAJ7/AAAAAAAAn/8AAAAAAAAAAAAAn/8AAAAAAACg/wAAAAAAAAAAAACg/wAAAAAAAKH/AAAAAAAAAAAAAKH/AAAAAAAAov8AAAAAAAAAAAAAov8AAAAAAACj/wAAAAAAAAAAAACj/wAAAAAAAKT/AAAAAAAAAAAAAKT/AAAAAAAApf8AAAAAAAAAAAAApf8AAAAAAACm/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlf8AAAAAAACV/wAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": "\ngmem.root"
					},
					"CgAAAKf/AAAAAAAArf8AAAAAAAAAAAAArf8AAAAAAACu/wAAAAAAAAAAAACu/wAAAAAAAK//AAAAAAAAAAAAAK//AAAAAAAAsP8AAAAAAAAAAAAAsP8AAAAAAACx/wAAAAAAAAAAAACx/wAAAAAAALL/AAAAAAAAAAAAALL/AAAAAAAAs/8AAAAAAAAAAAAAs/8AAAAAAAC0/wAAAAAAAAAAAAC0/wAAAAAAALX/AAAAAAAAAAAAALX/AAAAAAAAtv8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAp/8AAAAAAACn/wAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":28,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "root_state"
					},
					"AgAAALL/AAAAAAAAsv8AAAAAAAAEAAAAcm9vdLL/AAAAAAAAvP8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtv8AAAAAAAC2/wAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALz/AAAAAAAAvf8AAAAAAAAAAAAAvf8AAAAAAAC+/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvP8AAAAAAAC8/wAAAAAAAAAAAAAAAPC/"
				],
				[
					498,
					1,
					"insert",
					{
						"characters": " .Main_"
					},
					"BwAAAL7/AAAAAAAAv/8AAAAAAAAAAAAAv/8AAAAAAADA/wAAAAAAAAAAAADA/wAAAAAAAMH/AAAAAAAAAAAAAMH/AAAAAAAAwv8AAAAAAAAAAAAAwv8AAAAAAADD/wAAAAAAAAAAAADD/wAAAAAAAMT/AAAAAAAAAAAAAMT/AAAAAAAAxf8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvv8AAAAAAAC+/wAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"insert",
					{
						"characters": "Menu"
					},
					"BAAAAMX/AAAAAAAAxv8AAAAAAAAAAAAAxv8AAAAAAADH/wAAAAAAAAAAAADH/wAAAAAAAMj/AAAAAAAAAAAAAMj/AAAAAAAAyf8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxf8AAAAAAADF/wAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "\ngmem.lvel"
					},
					"CgAAAMn/AAAAAAAAz/8AAAAAAAAAAAAAz/8AAAAAAADQ/wAAAAAAAAAAAADQ/wAAAAAAANH/AAAAAAAAAAAAANH/AAAAAAAA0v8AAAAAAAAAAAAA0v8AAAAAAADT/wAAAAAAAAAAAADT/wAAAAAAANT/AAAAAAAAAAAAANT/AAAAAAAA1f8AAAAAAAAAAAAA1f8AAAAAAADW/wAAAAAAAAAAAADW/wAAAAAAANf/AAAAAAAAAAAAANf/AAAAAAAA2P8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyf8AAAAAAADJ/wAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					3,
					"left_delete",
					null,
					"AwAAANf/AAAAAAAA1/8AAAAAAAABAAAAbNb/AAAAAAAA1v8AAAAAAAABAAAAZdX/AAAAAAAA1f8AAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAA2P8AAAAAAADY/wAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": "ele"
					},
					"AwAAANX/AAAAAAAA1v8AAAAAAAAAAAAA1v8AAAAAAADX/wAAAAAAAAAAAADX/wAAAAAAANj/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1f8AAAAAAADV/wAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					2,
					"left_delete",
					null,
					"AgAAANf/AAAAAAAA1/8AAAAAAAABAAAAZdb/AAAAAAAA1v8AAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA2P8AAAAAAADY/wAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					1,
					"insert",
					{
						"characters": "vel_ined"
					},
					"CAAAANb/AAAAAAAA1/8AAAAAAAAAAAAA1/8AAAAAAADY/wAAAAAAAAAAAADY/wAAAAAAANn/AAAAAAAAAAAAANn/AAAAAAAA2v8AAAAAAAAAAAAA2v8AAAAAAADb/wAAAAAAAAAAAADb/wAAAAAAANz/AAAAAAAAAAAAANz/AAAAAAAA3f8AAAAAAAAAAAAA3f8AAAAAAADe/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1v8AAAAAAADW/wAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					2,
					"left_delete",
					null,
					"AgAAAN3/AAAAAAAA3f8AAAAAAAABAAAAZNz/AAAAAAAA3P8AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA3v8AAAAAAADe/wAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert",
					{
						"characters": "de"
					},
					"AgAAANz/AAAAAAAA3f8AAAAAAAAAAAAA3f8AAAAAAADe/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3P8AAAAAAADc/wAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":23,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "level_index"
					},
					"AgAAANT/AAAAAAAA1P8AAAAAAAAKAAAAbGV2ZWxfaW5kZdT/AAAAAAAA3/8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3v8AAAAAAADe/wAAAAAAAAAAAAAAAPC/"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAN//AAAAAAAA4P8AAAAAAAAAAAAA4P8AAAAAAADh/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3/8AAAAAAADf/wAAAAAAAAAAAAAAAPC/"
				],
				[
					510,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAOH/AAAAAAAA4v8AAAAAAAAAAAAA4v8AAAAAAADj/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4f8AAAAAAADh/wAAAAAAAAAAAAAAAPC/"
				],
				[
					511,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOP/AAAAAAAA6f8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4/8AAAAAAADj/wAAAAAAAAAAAAAAAPC/"
				],
				[
					513,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAOT/AAAAAAAA5P8AAAAAAAAFAAAACQkJCQk",
					"AQAAAAAAAAABAAAA6f8AAAAAAADp/wAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					1,
					"reindent",
					null,
					"AQAAAOT/AAAAAAAA6f8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5P8AAAAAAADk/wAAAAAAAAAAAAAAAPC/"
				],
				[
					515,
					1,
					"insert",
					{
						"characters": "gmem.is_frog"
					},
					"DAAAAOn/AAAAAAAA6v8AAAAAAAAAAAAA6v8AAAAAAADr/wAAAAAAAAAAAADr/wAAAAAAAOz/AAAAAAAAAAAAAOz/AAAAAAAA7f8AAAAAAAAAAAAA7f8AAAAAAADu/wAAAAAAAAAAAADu/wAAAAAAAO//AAAAAAAAAAAAAO//AAAAAAAA8P8AAAAAAAAAAAAA8P8AAAAAAADx/wAAAAAAAAAAAADx/wAAAAAAAPL/AAAAAAAAAAAAAPL/AAAAAAAA8/8AAAAAAAAAAAAA8/8AAAAAAAD0/wAAAAAAAAAAAAD0/wAAAAAAAPX/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6f8AAAAAAADp/wAAAAAAAAAAAAAAAPC/"
				],
				[
					516,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":19,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "is_frogs_on_lilypads"
					},
					"AgAAAO7/AAAAAAAA7v8AAAAAAAAHAAAAaXNfZnJvZ+7/AAAAAAAAAgABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9f8AAAAAAAD1/wAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BAAAAOP/AAAAAAAA6f8AAAAAAAAAAAAA6f8AAAAAAADq/wAAAAAAAAAAAADq/wAAAAAAAOv/AAAAAAAAAAAAAOv/AAAAAAAA7P8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4/8AAAAAAADj/wAAAAAAAAAAAAAAMHdA"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": " &"
					},
					"AgAAAOz/AAAAAAAA7f8AAAAAAAAAAAAA7f8AAAAAAADu/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7P8AAAAAAADs/wAAAAAAAAAAAAAAAPC/"
				],
				[
					520,
					1,
					"insert",
					{
						"characters": "is_frog_on_"
					},
					"CwAAAO7/AAAAAAAA7/8AAAAAAAAAAAAA7/8AAAAAAADw/wAAAAAAAAAAAADw/wAAAAAAAPH/AAAAAAAAAAAAAPH/AAAAAAAA8v8AAAAAAAAAAAAA8v8AAAAAAADz/wAAAAAAAAAAAADz/wAAAAAAAPT/AAAAAAAAAAAAAPT/AAAAAAAA9f8AAAAAAAAAAAAA9f8AAAAAAAD2/wAAAAAAAAAAAAD2/wAAAAAAAPf/AAAAAAAAAAAAAPf/AAAAAAAA+P8AAAAAAAAAAAAA+P8AAAAAAAD5/wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7v8AAAAAAADu/wAAAAAAAAAAAAAAAPC/"
				],
				[
					521,
					1,
					"insert",
					{
						"characters": "lilypad"
					},
					"BwAAAPn/AAAAAAAA+v8AAAAAAAAAAAAA+v8AAAAAAAD7/wAAAAAAAAAAAAD7/wAAAAAAAPz/AAAAAAAAAAAAAPz/AAAAAAAA/f8AAAAAAAAAAAAA/f8AAAAAAAD+/wAAAAAAAAAAAAD+/wAAAAAAAP//AAAAAAAAAAAAAP//AAAAAAAAAAABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+f8AAAAAAAD5/wAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAAAAAQAAAAAAAQABAAAAAAAAAAAAAQABAAAAAAACAAEAAAAAAAAAAAACAAEAAAAAAAMAAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAPC/"
				],
				[
					523,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMAAQAAAAAABAABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwABAAAAAAADAAEAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"cut",
					null,
					"AQAAAAoAAQAAAAAACgABAAAAAAAZAAAAZ21lbS5pc19mcm9nc19vbl9saWx5cGFkcw",
					"AQAAAAAAAAABAAAAIwABAAAAAAAKAAEAAAAAAAAAAAAAAPC/"
				],
				[
					531,
					1,
					"paste",
					null,
					"AQAAAAQAAQAAAAAAHQABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAABAAAAAAAEAAEAAAAAAP///////+9/"
				],
				[
					532,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAB0AAQAAAAAAIwABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQABAAAAAAAdAAEAAAAAAAAAAAAAAPC/"
				],
				[
					533,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACMAAQAAAAAAJQABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwABAAAAAAAjAAEAAAAAAAAAAAAAAPC/"
				],
				[
					534,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAACQAAQAAAAAAKgABAAAAAAAAAAAAKgABAAAAAAAwAAEAAAAAAAAAAAAlAAEAAAAAACUAAQAAAAAABQAAAAkJCQkJJQABAAAAAAArAAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAABAAAAAAAkAAEAAAAAAAAAAAAAAPC/"
				],
				[
					535,
					1,
					"insert",
					{
						"characters": "is_frog_on_"
					},
					"CwAAACsAAQAAAAAALAABAAAAAAAAAAAALAABAAAAAAAtAAEAAAAAAAAAAAAtAAEAAAAAAC4AAQAAAAAAAAAAAC4AAQAAAAAALwABAAAAAAAAAAAALwABAAAAAAAwAAEAAAAAAAAAAAAwAAEAAAAAADEAAQAAAAAAAAAAADEAAQAAAAAAMgABAAAAAAAAAAAAMgABAAAAAAAzAAEAAAAAAAAAAAAzAAEAAAAAADQAAQAAAAAAAAAAADQAAQAAAAAANQABAAAAAAAAAAAANQABAAAAAAA2AAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwABAAAAAAArAAEAAAAAAAAAAAAAAPC/"
				],
				[
					536,
					1,
					"insert",
					{
						"characters": "lilypad"
					},
					"BwAAADYAAQAAAAAANwABAAAAAAAAAAAANwABAAAAAAA4AAEAAAAAAAAAAAA4AAEAAAAAADkAAQAAAAAAAAAAADkAAQAAAAAAOgABAAAAAAAAAAAAOgABAAAAAAA7AAEAAAAAAAAAAAA7AAEAAAAAADwAAQAAAAAAAAAAADwAAQAAAAAAPQABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgABAAAAAAA2AAEAAAAAAAAAAAAAAPC/"
				],
				[
					537,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAD0AAQAAAAAAPgABAAAAAAAAAAAAPgABAAAAAAA/AAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQABAAAAAAA9AAEAAAAAAAAAAAAAAPC/"
				],
				[
					538,
					1,
					"insert",
					{
						"characters": " false"
					},
					"BgAAAD8AAQAAAAAAQAABAAAAAAAAAAAAQAABAAAAAABBAAEAAAAAAAAAAABBAAEAAAAAAEIAAQAAAAAAAAAAAEIAAQAAAAAAQwABAAAAAAAAAAAAQwABAAAAAABEAAEAAAAAAAAAAABEAAEAAAAAAEUAAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwABAAAAAAA/AAEAAAAAAAAAAAAAAPC/"
				],
				[
					541,
					1,
					"insert",
					{
						"characters": "\ngmem.score"
					},
					"CwAAAEwAAQAAAAAAUgABAAAAAAAAAAAAUgABAAAAAABTAAEAAAAAAAAAAABTAAEAAAAAAFQAAQAAAAAAAAAAAFQAAQAAAAAAVQABAAAAAAAAAAAAVQABAAAAAABWAAEAAAAAAAAAAABWAAEAAAAAAFcAAQAAAAAAAAAAAFcAAQAAAAAAWAABAAAAAAAAAAAAWAABAAAAAABZAAEAAAAAAAAAAABZAAEAAAAAAFoAAQAAAAAAAAAAAFoAAQAAAAAAWwABAAAAAAAAAAAAWwABAAAAAABcAAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAABAAAAAABMAAEAAAAAAAAAAAAAwHlA"
				],
				[
					542,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFwAAQAAAAAAXQABAAAAAAAAAAAAXQABAAAAAABeAAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAABAAAAAABcAAEAAAAAAAAAAAAAAPC/"
				],
				[
					543,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAF4AAQAAAAAAXwABAAAAAAAAAAAAXwABAAAAAABgAAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgABAAAAAABeAAEAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAAArYAAAAAAAADNgAAAAAAAAAAAAADNgAAAAAAAAN2AAAAAAAAAAAAAAN2AAAAAAAAA7YAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACtgAAAAAAAAK2AAAAAAAAAAAAAAAAPC/"
				],
				[
					579,
					1,
					"insert",
					{
						"characters": " gmem.lives"
					},
					"CwAAAA7YAAAAAAAAD9gAAAAAAAAAAAAAD9gAAAAAAAAQ2AAAAAAAAAAAAAAQ2AAAAAAAABHYAAAAAAAAAAAAABHYAAAAAAAAEtgAAAAAAAAAAAAAEtgAAAAAAAAT2AAAAAAAAAAAAAAT2AAAAAAAABTYAAAAAAAAAAAAABTYAAAAAAAAFdgAAAAAAAAAAAAAFdgAAAAAAAAW2AAAAAAAAAAAAAAW2AAAAAAAABfYAAAAAAAAAAAAABfYAAAAAAAAGNgAAAAAAAAAAAAAGNgAAAAAAAAZ2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADtgAAAAAAAAO2AAAAAAAAAAAAAAAAPC/"
				],
				[
					580,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAABnYAAAAAAAAGtgAAAAAAAAAAAAAGtgAAAAAAAAb2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGdgAAAAAAAAZ2AAAAAAAAAAAAAAAAPC/"
				],
				[
					581,
					1,
					"left_delete",
					null,
					"AQAAABrYAAAAAAAAGtgAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAG9gAAAAAAAAb2AAAAAAAAAAAAAAAAPC/"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "!="
					},
					"AgAAABrYAAAAAAAAG9gAAAAAAAAAAAAAG9gAAAAAAAAc2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGtgAAAAAAAAa2AAAAAAAAAAAAAAAAPC/"
				],
				[
					583,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAABzYAAAAAAAAHdgAAAAAAAAAAAAAHdgAAAAAAAAe2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHNgAAAAAAAAc2AAAAAAAAAAAAAAAAPC/"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAB7YAAAAAAAAINgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHtgAAAAAAAAe2AAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACDYAAAAAAAAItgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAINgAAAAAAAAg2AAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAACHYAAAAAAAAI9gAAAAAAAAAAAAAI9gAAAAAAAAl2AAAAAAAAAAAAAAi2AAAAAAAACLYAAAAAAAAAQAAAAki2AAAAAAAACTYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIdgAAAAAAAAh2AAAAAAAAAAAAAAAAPC/"
				],
				[
					589,
					1,
					"cut",
					null,
					"AQAAACjYAAAAAAAAKNgAAAAAAAARAAAACWdtZW0ubGl2ZXMgLT0gMQo",
					"AQAAAAAAAAABAAAALdgAAAAAAAAt2AAAAAAAAAAAAAAAgFBA"
				],
				[
					591,
					1,
					"paste",
					null,
					"AQAAACLYAAAAAAAAM9gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAItgAAAAAAAAi2AAAAAAAAAAAAAAAAAAA"
				],
				[
					593,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AgAAACLYAAAAAAAAI9gAAAAAAAAAAAAANNgAAAAAAAA02AAAAAAAAAIAAAAJCQ",
					"AQAAAAAAAAABAAAAItgAAAAAAAAi2AAAAAAAAAAAAAAAAAAA"
				],
				[
					595,
					1,
					"left_delete",
					null,
					"AQAAADPYAAAAAAAAM9gAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAANNgAAAAAAAA02AAAAAAAAAAAAAAAgEBA"
				],
				[
					619,
					1,
					"insert",
					{
						"characters": "\nfr"
					},
					"AwAAAHhpAQAAAAAAe2kBAAAAAAAAAAAAe2kBAAAAAAB8aQEAAAAAAAAAAAB8aQEAAAAAAH1pAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeGkBAAAAAAB4aQEAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"insert",
					{
						"characters": "ogger_reset"
					},
					"CwAAAH1pAQAAAAAAfmkBAAAAAAAAAAAAfmkBAAAAAAB/aQEAAAAAAAAAAAB/aQEAAAAAAIBpAQAAAAAAAAAAAIBpAQAAAAAAgWkBAAAAAAAAAAAAgWkBAAAAAACCaQEAAAAAAAAAAACCaQEAAAAAAINpAQAAAAAAAAAAAINpAQAAAAAAhGkBAAAAAAAAAAAAhGkBAAAAAACFaQEAAAAAAAAAAACFaQEAAAAAAIZpAQAAAAAAAAAAAIZpAQAAAAAAh2kBAAAAAAAAAAAAh2kBAAAAAACIaQEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfWkBAAAAAAB9aQEAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIhpAQAAAAAAiWkBAAAAAAAAAAAAiWkBAAAAAACKaQEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiGkBAAAAAACIaQEAAAAAAAAAAAAAAPC/"
				],
				[
					622,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIppAQAAAAAAi2kBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAimkBAAAAAACKaQEAAAAAAAAAAAAAAPC/"
				],
				[
					623,
					3,
					"left_delete",
					null,
					"AwAAAIppAQAAAAAAimkBAAAAAAABAAAAIIlpAQAAAAAAiWkBAAAAAAABAAAAPYhpAQAAAAAAiGkBAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAi2kBAAAAAACLaQEAAAAAAAAAAAAAAPC/"
				],
				[
					624,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIhpAQAAAAAAimkBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiGkBAAAAAACIaQEAAAAAAAAAAAAAAPC/"
				],
				[
					626,
					1,
					"insert",
					{
						"characters": "globalstart"
					},
					"CwAAAIlpAQAAAAAAimkBAAAAAAAAAAAAimkBAAAAAACLaQEAAAAAAAAAAACLaQEAAAAAAIxpAQAAAAAAAAAAAIxpAQAAAAAAjWkBAAAAAAAAAAAAjWkBAAAAAACOaQEAAAAAAAAAAACOaQEAAAAAAI9pAQAAAAAAAAAAAI9pAQAAAAAAkGkBAAAAAAAAAAAAkGkBAAAAAACRaQEAAAAAAAAAAACRaQEAAAAAAJJpAQAAAAAAAAAAAJJpAQAAAAAAk2kBAAAAAAAAAAAAk2kBAAAAAACUaQEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiWkBAAAAAACJaQEAAAAAAAAAAAAAAPC/"
				],
				[
					627,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAIlpAQAAAAAAiWkBAAAAAAALAAAAZ2xvYmFsc3RhcnQ",
					"AQAAAAAAAAABAAAAlGkBAAAAAACUaQEAAAAAAAAAAAAAAPC/"
				],
				[
					656,
					1,
					"cut",
					null,
					"AQAAAHzgAAAAAAAAfOAAAAAAAAAjAAAACWZyb2dnZXJfc3RhcnRfcG9zIDo9IFsyXWYzMns3LDE0fQo",
					"AQAAAAAAAAABAAAAk+AAAAAAAACT4AAAAAAAAAAAAAAAAPC/"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABDWAAAAAAAAEtYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAENYAAAAAAAAQ1gAAAAAAAAAAAAAAAPC/"
				],
				[
					676,
					1,
					"paste",
					null,
					"AQAAABHWAAAAAAAANNYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEtYAAAAAAAAS1gAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AgAAABLWAAAAAAAAEtYAAAAAAAARAAAAZnJvZ2dlcl9zdGFydF9wb3Mj1gAAAAAAACPWAAAAAAAAAQAAAAk",
					"AQAAAAAAAAABAAAAI9YAAAAAAAAj1gAAAAAAAAAAAAAAAPC/"
				],
				[
					681,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"AwAAABLWAAAAAAAAE9YAAAAAAAAAAAAAE9YAAAAAAAAU1gAAAAAAAAAAAAAU1gAAAAAAABXWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEtYAAAAAAAAS1gAAAAAAAAAAAAAAAPC/"
				],
				[
					686,
					1,
					"left_delete",
					null,
					"AQAAAALWAAAAAAAAAtYAAAAAAAALAAAAcG9zOiBbMl1mMzI",
					"AQAAAAAAAAABAAAAAtYAAAAAAAAN1gAAAAAAAAAAAAAAAPC/"
				],
				[
					710,
					1,
					"left_delete",
					null,
					"AQAAADr/AAAAAAAAOv8AAAAAAAARAAAAZnJvZ2dlcl9zdGFydF9wb3M",
					"AQAAAAAAAAABAAAAOv8AAAAAAABL/wAAAAAAAAAAAAAAAPC/"
				],
				[
					717,
					1,
					"left_delete",
					null,
					"AgAAAMQoAQAAAAAAxCgBAAAAAAARAAAAZnJvZ2dlcl9zdGFydF9wb3OH/wAAAAAAAIf/AAAAAAAAEQAAAGZyb2dnZXJfc3RhcnRfcG9z",
					"AQAAAAAAAAACAAAAh/8AAAAAAACY/wAAAAAAAAAAAAAAAPC/xCgBAAAAAADVKAEAAAAAAAAAAAAAAPC/"
				],
				[
					743,
					1,
					"insert",
					{
						"characters": "\ngmem.frogger"
					},
					"DQAAADPWAAAAAAAANdYAAAAAAAAAAAAANdYAAAAAAAA21gAAAAAAAAAAAAA21gAAAAAAADfWAAAAAAAAAAAAADfWAAAAAAAAONYAAAAAAAAAAAAAONYAAAAAAAA51gAAAAAAAAAAAAA51gAAAAAAADrWAAAAAAAAAAAAADrWAAAAAAAAO9YAAAAAAAAAAAAAO9YAAAAAAAA81gAAAAAAAAAAAAA81gAAAAAAAD3WAAAAAAAAAAAAAD3WAAAAAAAAPtYAAAAAAAAAAAAAPtYAAAAAAAA/1gAAAAAAAAAAAAA/1gAAAAAAAEDWAAAAAAAAAAAAAEDWAAAAAAAAQdYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAM9YAAAAAAAAz1gAAAAAAAAAAAAAAAPC/"
				],
				[
					744,
					1,
					"insert",
					{
						"characters": "_rotation"
					},
					"CQAAAEHWAAAAAAAAQtYAAAAAAAAAAAAAQtYAAAAAAABD1gAAAAAAAAAAAABD1gAAAAAAAETWAAAAAAAAAAAAAETWAAAAAAAARdYAAAAAAAAAAAAARdYAAAAAAABG1gAAAAAAAAAAAABG1gAAAAAAAEfWAAAAAAAAAAAAAEfWAAAAAAAASNYAAAAAAAAAAAAASNYAAAAAAABJ1gAAAAAAAAAAAABJ1gAAAAAAAErWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQdYAAAAAAABB1gAAAAAAAAAAAAAAAPC/"
				],
				[
					745,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":17,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "frogger_sprite_rotation"
					},
					"AgAAADrWAAAAAAAAOtYAAAAAAAAQAAAAZnJvZ2dlcl9yb3RhdGlvbjrWAAAAAAAAUdYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAStYAAAAAAABK1gAAAAAAAAAAAAAAAPC/"
				],
				[
					746,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFHWAAAAAAAAUtYAAAAAAAAAAAAAUtYAAAAAAABT1gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUdYAAAAAAABR1gAAAAAAAAAAAAAAAPC/"
				],
				[
					747,
					1,
					"insert",
					{
						"characters": " 0.0"
					},
					"BAAAAFPWAAAAAAAAVNYAAAAAAAAAAAAAVNYAAAAAAABV1gAAAAAAAAAAAABV1gAAAAAAAFbWAAAAAAAAAAAAAFbWAAAAAAAAV9YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAU9YAAAAAAABT1gAAAAAAAAAAAAAAAPC/"
				],
				[
					762,
					1,
					"left_delete",
					null,
					"AQAAAJj/AAAAAAAAmP8AAAAAAAAVAAAACQkJCQlmcm9nZ2VyX3Jlc2V0KCkK",
					"AQAAAAAAAAABAAAAmP8AAAAAAACt/wAAAAAAAAAAAAAAAPC/"
				],
				[
					768,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"BwAAAFAAAQAAAAAAVgABAAAAAAAAAAAAVgABAAAAAABXAAEAAAAAAAAAAABXAAEAAAAAAFgAAQAAAAAAAAAAAFgAAQAAAAAAWQABAAAAAAAAAAAAWQABAAAAAABaAAEAAAAAAAAAAABaAAEAAAAAAFsAAQAAAAAAAAAAAFsAAQAAAAAAXAABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAABAAAAAABQAAEAAAAAAAAAAAAAAPC/"
				],
				[
					770,
					1,
					"insert",
					{
						"characters": " //"
					},
					"AwAAAFwAAQAAAAAAXQABAAAAAAAAAAAAXQABAAAAAABeAAEAAAAAAAAAAABeAAEAAAAAAF8AAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAABAAAAAABcAAEAAAAAAAAAAAAAAPC/"
				],
				[
					771,
					1,
					"insert",
					{
						"characters": " don't"
					},
					"BgAAAF8AAQAAAAAAYAABAAAAAAAAAAAAYAABAAAAAABhAAEAAAAAAAAAAABhAAEAAAAAAGIAAQAAAAAAAAAAAGIAAQAAAAAAYwABAAAAAAAAAAAAYwABAAAAAABkAAEAAAAAAAAAAABkAAEAAAAAAGUAAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwABAAAAAABfAAEAAAAAAAAAAAAAAPC/"
				],
				[
					772,
					1,
					"insert",
					{
						"characters": " process"
					},
					"CAAAAGUAAQAAAAAAZgABAAAAAAAAAAAAZgABAAAAAABnAAEAAAAAAAAAAABnAAEAAAAAAGgAAQAAAAAAAAAAAGgAAQAAAAAAaQABAAAAAAAAAAAAaQABAAAAAABqAAEAAAAAAAAAAABqAAEAAAAAAGsAAQAAAAAAAAAAAGsAAQAAAAAAbAABAAAAAAAAAAAAbAABAAAAAABtAAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQABAAAAAABlAAEAAAAAAAAAAAAAAPC/"
				],
				[
					773,
					1,
					"insert",
					{
						"characters": " any"
					},
					"BAAAAG0AAQAAAAAAbgABAAAAAAAAAAAAbgABAAAAAABvAAEAAAAAAAAAAABvAAEAAAAAAHAAAQAAAAAAAAAAAHAAAQAAAAAAcQABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQABAAAAAABtAAEAAAAAAAAAAAAAAPC/"
				],
				[
					774,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHEAAQAAAAAAcgABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQABAAAAAABxAAEAAAAAAAAAAAAAAPC/"
				],
				[
					775,
					1,
					"left_delete",
					null,
					"AQAAAHEAAQAAAAAAcQABAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAcgABAAAAAAByAAEAAAAAAAAAAAAAAPC/"
				],
				[
					776,
					1,
					"insert",
					{
						"characters": "thing"
					},
					"BQAAAHEAAQAAAAAAcgABAAAAAAAAAAAAcgABAAAAAABzAAEAAAAAAAAAAABzAAEAAAAAAHQAAQAAAAAAAAAAAHQAAQAAAAAAdQABAAAAAAAAAAAAdQABAAAAAAB2AAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQABAAAAAABxAAEAAAAAAAAAAAAAAPC/"
				],
				[
					777,
					1,
					"insert",
					{
						"characters": " else"
					},
					"BQAAAHYAAQAAAAAAdwABAAAAAAAAAAAAdwABAAAAAAB4AAEAAAAAAAAAAAB4AAEAAAAAAHkAAQAAAAAAAAAAAHkAAQAAAAAAegABAAAAAAAAAAAAegABAAAAAAB7AAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgABAAAAAAB2AAEAAAAAAAAAAAAAAPC/"
				],
				[
					778,
					1,
					"insert",
					{
						"characters": " here"
					},
					"BQAAAHsAAQAAAAAAfAABAAAAAAAAAAAAfAABAAAAAAB9AAEAAAAAAAAAAAB9AAEAAAAAAH4AAQAAAAAAAAAAAH4AAQAAAAAAfwABAAAAAAAAAAAAfwABAAAAAACAAAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewABAAAAAAB7AAEAAAAAAAAAAAAAAPC/"
				],
				[
					810,
					1,
					"insert",
					{
						"characters": "\nprogress"
					},
					"CQAAAKlQAQAAAAAArVABAAAAAAAAAAAArVABAAAAAACuUAEAAAAAAAAAAACuUAEAAAAAAK9QAQAAAAAAAAAAAK9QAQAAAAAAsFABAAAAAAAAAAAAsFABAAAAAACxUAEAAAAAAAAAAACxUAEAAAAAALJQAQAAAAAAAAAAALJQAQAAAAAAs1ABAAAAAAAAAAAAs1ABAAAAAAC0UAEAAAAAAAAAAAC0UAEAAAAAALVQAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqVABAAAAAACpUAEAAAAAAAAAAAAAAPC/"
				],
				[
					811,
					1,
					"insert",
					{
						"characters": "_of_level_end_"
					},
					"DgAAALVQAQAAAAAAtlABAAAAAAAAAAAAtlABAAAAAAC3UAEAAAAAAAAAAAC3UAEAAAAAALhQAQAAAAAAAAAAALhQAQAAAAAAuVABAAAAAAAAAAAAuVABAAAAAAC6UAEAAAAAAAAAAAC6UAEAAAAAALtQAQAAAAAAAAAAALtQAQAAAAAAvFABAAAAAAAAAAAAvFABAAAAAAC9UAEAAAAAAAAAAAC9UAEAAAAAAL5QAQAAAAAAAAAAAL5QAQAAAAAAv1ABAAAAAAAAAAAAv1ABAAAAAADAUAEAAAAAAAAAAADAUAEAAAAAAMFQAQAAAAAAAAAAAMFQAQAAAAAAwlABAAAAAAAAAAAAwlABAAAAAADDUAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtVABAAAAAAC1UAEAAAAAAAAAAAAAAPC/"
				],
				[
					812,
					1,
					"insert",
					{
						"characters": "timer"
					},
					"BQAAAMNQAQAAAAAAxFABAAAAAAAAAAAAxFABAAAAAADFUAEAAAAAAAAAAADFUAEAAAAAAMZQAQAAAAAAAAAAAMZQAQAAAAAAx1ABAAAAAAAAAAAAx1ABAAAAAADIUAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAw1ABAAAAAADDUAEAAAAAAAAAAAAAAPC/"
				],
				[
					824,
					1,
					"insert",
					{
						"characters": "\n\nBeha"
					},
					"BgAAACwEAAAAAAAALQQAAAAAAAAAAAAALQQAAAAAAAAuBAAAAAAAAAAAAAAuBAAAAAAAAC8EAAAAAAAAAAAAAC8EAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAAxBAAAAAAAAAAAAAAxBAAAAAAAADIEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAQAAAAAAAAsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					825,
					1,
					"insert",
					{
						"characters": "vior"
					},
					"BAAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADUEAAAAAAAAAAAAADUEAAAAAAAANgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgQAAAAAAAAyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					827,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAC0EAAAAAAAALgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQQAAAAAAAAtBAAAAAAAAAAAAAAAgFBA"
				],
				[
					830,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAADcEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA5BAAAAAAAAAAAAAA5BAAAAAAAADoEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					831,
					1,
					"insert",
					{
						"characters": " enum"
					},
					"BQAAADoEAAAAAAAAOwQAAAAAAAAAAAAAOwQAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAAD0EAAAAAAAAAAAAAD0EAAAAAAAAPgQAAAAAAAAAAAAAPgQAAAAAAAA/BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgQAAAAAAAA6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					832,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8EAAAAAAAAQAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwQAAAAAAAA/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					833,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEAEAAAAAAAAQgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAQAAAAAAABABAAAAAAAAAAAAAAAAPC/"
				],
				[
					834,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAEEEAAAAAAAAQgQAAAAAAAAAAAAAQgQAAAAAAABDBAAAAAAAAAAAAABCBAAAAAAAAEMEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQQAAAAAAABBBAAAAAAAAAAAAAAAAPC/"
				],
				[
					835,
					1,
					"insert",
					{
						"characters": "Move"
					},
					"BAAAAEMEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABFBAAAAAAAAAAAAABFBAAAAAAAAEYEAAAAAAAAAAAAAEYEAAAAAAAARwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwQAAAAAAABDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					836,
					1,
					"insert",
					{
						"characters": "_W"
					},
					"AgAAAEcEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABJBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwQAAAAAAABHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					837,
					1,
					"left_delete",
					null,
					"AQAAAEgEAAAAAAAASAQAAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAASQQAAAAAAABJBAAAAAAAAAAAAAAAAPC/"
				],
				[
					838,
					1,
					"insert",
					{
						"characters": "And_Warp"
					},
					"CAAAAEgEAAAAAAAASQQAAAAAAAAAAAAASQQAAAAAAABKBAAAAAAAAAAAAABKBAAAAAAAAEsEAAAAAAAAAAAAAEsEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABNBAAAAAAAAAAAAABNBAAAAAAAAE4EAAAAAAAAAAAAAE4EAAAAAAAATwQAAAAAAAAAAAAATwQAAAAAAABQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAQAAAAAAABIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					839,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFAEAAAAAAAAUQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAQAAAAAAABQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					840,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFEEAAAAAAAAUwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQQAAAAAAABRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					841,
					4,
					"delete_word",
					{
						"forward": false
					},
					"BAAAAFIEAAAAAAAAUgQAAAAAAAABAAAACVEEAAAAAAAAUQQAAAAAAAABAAAAClAEAAAAAAAAUAQAAAAAAAABAAAALEMEAAAAAAAAQwQAAAAAAAANAAAATW92ZV9BbmRfV2FycA",
					"AQAAAAAAAAABAAAAUwQAAAAAAABTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					842,
					1,
					"insert",
					{
						"characters": "Row_Move"
					},
					"CAAAAEMEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABFBAAAAAAAAAAAAABFBAAAAAAAAEYEAAAAAAAAAAAAAEYEAAAAAAAARwQAAAAAAAAAAAAARwQAAAAAAABIBAAAAAAAAAAAAABIBAAAAAAAAEkEAAAAAAAAAAAAAEkEAAAAAAAASgQAAAAAAAAAAAAASgQAAAAAAABLBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwQAAAAAAABDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					843,
					4,
					"left_delete",
					null,
					"BAAAAEoEAAAAAAAASgQAAAAAAAABAAAAZUkEAAAAAAAASQQAAAAAAAABAAAAdkgEAAAAAAAASAQAAAAAAAABAAAAb0cEAAAAAAAARwQAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAASwQAAAAAAABLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					844,
					1,
					"insert",
					{
						"characters": "Lco"
					},
					"AwAAAEcEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABJBAAAAAAAAAAAAABJBAAAAAAAAEoEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwQAAAAAAABHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					845,
					2,
					"left_delete",
					null,
					"AgAAAEkEAAAAAAAASQQAAAAAAAABAAAAb0gEAAAAAAAASAQAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAASgQAAAAAAABKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					846,
					1,
					"insert",
					{
						"characters": "ocked_Movement"
					},
					"DgAAAEgEAAAAAAAASQQAAAAAAAAAAAAASQQAAAAAAABKBAAAAAAAAAAAAABKBAAAAAAAAEsEAAAAAAAAAAAAAEsEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABNBAAAAAAAAAAAAABNBAAAAAAAAE4EAAAAAAAAAAAAAE4EAAAAAAAATwQAAAAAAAAAAAAATwQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFEEAAAAAAAAAAAAAFEEAAAAAAAAUgQAAAAAAAAAAAAAUgQAAAAAAABTBAAAAAAAAAAAAABTBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAVQQAAAAAAAAAAAAAVQQAAAAAAABWBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAQAAAAAAABIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					848,
					1,
					"insert",
					{
						"characters": "Auto"
					},
					"BAAAAE4EAAAAAAAATwQAAAAAAAAAAAAATwQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFEEAAAAAAAAAAAAAFEEAAAAAAAAUgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgQAAAAAAABOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					849,
					4,
					"left_delete",
					null,
					"BAAAAFEEAAAAAAAAUQQAAAAAAAABAAAAb1AEAAAAAAAAUAQAAAAAAAABAAAAdE8EAAAAAAAATwQAAAAAAAABAAAAdU4EAAAAAAAATgQAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAAUgQAAAAAAABSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					851,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFYEAAAAAAAAWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgQAAAAAAABWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					854,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAEMEAAAAAAAAQwQAAAAAAAATAAAAUm93X0xvY2tlZF9Nb3ZlbWVudEQEAAAAAAAARAQAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAVgQAAAAAAABWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					855,
					1,
					"insert",
					{
						"characters": "Move_On_W"
					},
					"CQAAAEMEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABFBAAAAAAAAAAAAABFBAAAAAAAAEYEAAAAAAAAAAAAAEYEAAAAAAAARwQAAAAAAAAAAAAARwQAAAAAAABIBAAAAAAAAAAAAABIBAAAAAAAAEkEAAAAAAAAAAAAAEkEAAAAAAAASgQAAAAAAAAAAAAASgQAAAAAAABLBAAAAAAAAAAAAABLBAAAAAAAAEwEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwQAAAAAAABDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					856,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAEwEAAAAAAAATQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAQAAAAAAABMBAAAAAAAAAAAAAAAAPC/"
				],
				[
					857,
					2,
					"left_delete",
					null,
					"AgAAAEwEAAAAAAAATAQAAAAAAAABAAAAb0sEAAAAAAAASwQAAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAATQQAAAAAAABNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					858,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAEsEAAAAAAAATAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwQAAAAAAABLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					859,
					1,
					"left_delete",
					null,
					"AQAAAEsEAAAAAAAASwQAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAATAQAAAAAAABMBAAAAAAAAAAAAAAAAPC/"
				],
				[
					860,
					1,
					"insert",
					{
						"characters": "Row_+"
					},
					"BQAAAEsEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABNBAAAAAAAAAAAAABNBAAAAAAAAE4EAAAAAAAAAAAAAE4EAAAAAAAATwQAAAAAAAAAAAAATwQAAAAAAABQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwQAAAAAAABLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					861,
					1,
					"left_delete",
					null,
					"AQAAAE8EAAAAAAAATwQAAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAAUAQAAAAAAABQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					862,
					1,
					"insert",
					{
						"characters": "Anmd"
					},
					"BAAAAE8EAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABRBAAAAAAAAAAAAABRBAAAAAAAAFIEAAAAAAAAAAAAAFIEAAAAAAAAUwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwQAAAAAAABPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					863,
					2,
					"left_delete",
					null,
					"AgAAAFIEAAAAAAAAUgQAAAAAAAABAAAAZFEEAAAAAAAAUQQAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAUwQAAAAAAABTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					864,
					1,
					"insert",
					{
						"characters": "d_+W"
					},
					"BAAAAFEEAAAAAAAAUgQAAAAAAAAAAAAAUgQAAAAAAABTBAAAAAAAAAAAAABTBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAVQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQQAAAAAAABRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					865,
					2,
					"left_delete",
					null,
					"AgAAAFQEAAAAAAAAVAQAAAAAAAABAAAAV1MEAAAAAAAAUwQAAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAAVQQAAAAAAABVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"insert",
					{
						"characters": "Warp"
					},
					"BAAAAFMEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABVBAAAAAAAAAAAAABVBAAAAAAAAFYEAAAAAAAAAAAAAFYEAAAAAAAAVwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwQAAAAAAABTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					867,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFcEAAAAAAAAWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwQAAAAAAABXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					868,
					1,
					"insert",
					{
						"characters": "\nSn"
					},
					"AwAAAFgEAAAAAAAAWgQAAAAAAAAAAAAAWgQAAAAAAABbBAAAAAAAAAAAAABbBAAAAAAAAFwEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAQAAAAAAABYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					869,
					1,
					"insert",
					{
						"characters": "ake,"
					},
					"BAAAAFwEAAAAAAAAXQQAAAAAAAAAAAAAXQQAAAAAAABeBAAAAAAAAAAAAABeBAAAAAAAAF8EAAAAAAAAAAAAAF8EAAAAAAAAYAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAQAAAAAAABcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					870,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGAEAAAAAAAAYgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAQAAAAAAABgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					873,
					1,
					"insert",
					{
						"characters": "Entity_"
					},
					"CAAAAC8EAAAAAAAAMAQAAAAAAAAAAAAAYgQAAAAAAABiBAAAAAAAAAEAAAAJMAQAAAAAAAAxBAAAAAAAAAAAAAAxBAAAAAAAADIEAAAAAAAAAAAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADUEAAAAAAAAAAAAADUEAAAAAAAANgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwQAAAAAAAAvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					875,
					1,
					"reindent",
					null,
					"AQAAAGgEAAAAAAAAaQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAQAAAAAAABoBAAAAAAAAAAAAAAAAE1A"
				],
				[
					876,
					1,
					"insert",
					{
						"characters": "Otter,"
					},
					"BgAAAGkEAAAAAAAAagQAAAAAAAAAAAAAagQAAAAAAABrBAAAAAAAAAAAAABrBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAbQQAAAAAAAAAAAAAbQQAAAAAAABuBAAAAAAAAAAAAABuBAAAAAAAAG8EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQQAAAAAAABpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					877,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAG8EAAAAAAAAcQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwQAAAAAAABvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					880,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAEoEAAAAAAAASgQAAAAAAAAUAAAATW92ZV9Pbl9Sb3dfQW5kX1dhcnBcBAAAAAAAAFwEAAAAAAAAAQAAAAk",
					"AQAAAAAAAAABAAAAXgQAAAAAAABeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					881,
					1,
					"insert",
					{
						"characters": "Row_Itemr"
					},
					"CQAAAEoEAAAAAAAASwQAAAAAAAAAAAAASwQAAAAAAABMBAAAAAAAAAAAAABMBAAAAAAAAE0EAAAAAAAAAAAAAE0EAAAAAAAATgQAAAAAAAAAAAAATgQAAAAAAABPBAAAAAAAAAAAAABPBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAUQQAAAAAAAAAAAAAUQQAAAAAAABSBAAAAAAAAAAAAABSBAAAAAAAAFMEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgQAAAAAAABKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					882,
					1,
					"left_delete",
					null,
					"AQAAAFIEAAAAAAAAUgQAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAUwQAAAAAAABTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					884,
					1,
					"reindent",
					null,
					"AQAAAGQEAAAAAAAAZQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAQAAAAAAABkBAAAAAAAAAAAAAAAwFhA"
				],
				[
					887,
					4,
					"left_delete",
					null,
					"BQAAAFEEAAAAAAAAUQQAAAAAAAABAAAAbWMEAAAAAAAAYwQAAAAAAAABAAAACVAEAAAAAAAAUAQAAAAAAAABAAAAZU8EAAAAAAAATwQAAAAAAAABAAAAdE4EAAAAAAAATgQAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAUgQAAAAAAABSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					888,
					1,
					"insert",
					{
						"characters": "Obstacle"
					},
					"CAAAAE4EAAAAAAAATwQAAAAAAAAAAAAATwQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFEEAAAAAAAAAAAAAFEEAAAAAAAAUgQAAAAAAAAAAAAAUgQAAAAAAABTBAAAAAAAAAAAAABTBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAVQQAAAAAAAAAAAAAVQQAAAAAAABWBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgQAAAAAAABOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					892,
					1,
					"insert",
					{
						"characters": "\nsecondar"
					},
					"CQAAAFQGAAAAAAAAVgYAAAAAAAAAAAAAVgYAAAAAAABXBgAAAAAAAAAAAABXBgAAAAAAAFgGAAAAAAAAAAAAAFgGAAAAAAAAWQYAAAAAAAAAAAAAWQYAAAAAAABaBgAAAAAAAAAAAABaBgAAAAAAAFsGAAAAAAAAAAAAAFsGAAAAAAAAXAYAAAAAAAAAAAAAXAYAAAAAAABdBgAAAAAAAAAAAABdBgAAAAAAAF4GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAYAAAAAAABUBgAAAAAAAP///////+9/"
				],
				[
					893,
					1,
					"insert",
					{
						"characters": "yt"
					},
					"AgAAAF4GAAAAAAAAXwYAAAAAAAAAAAAAXwYAAAAAAABgBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgYAAAAAAABeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					894,
					1,
					"left_delete",
					null,
					"AQAAAF8GAAAAAAAAXwYAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAYAYAAAAAAABgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					895,
					1,
					"insert",
					{
						"characters": "_hitbox"
					},
					"BwAAAF8GAAAAAAAAYAYAAAAAAAAAAAAAYAYAAAAAAABhBgAAAAAAAAAAAABhBgAAAAAAAGIGAAAAAAAAAAAAAGIGAAAAAAAAYwYAAAAAAAAAAAAAYwYAAAAAAABkBgAAAAAAAAAAAABkBgAAAAAAAGUGAAAAAAAAAAAAAGUGAAAAAAAAZgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwYAAAAAAABfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAFYGAAAAAAAAVgYAAAAAAAAQAAAAc2Vjb25kYXJ5X2hpdGJveA",
					"AQAAAAAAAAABAAAAZgYAAAAAAABmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					897,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAFUGAAAAAAAAVQYAAAAAAAABAAAACVQGAAAAAAAAVAYAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					899,
					1,
					"left_delete",
					null,
					"AQAAAGgEAAAAAAAAaAQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAaQQAAAAAAABpBAAAAAAAAAAAAAAAwIBA"
				],
				[
					900,
					1,
					"reindent",
					null,
					"AQAAAGgEAAAAAAAAaQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAQAAAAAAABoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					901,
					1,
					"insert",
					{
						"characters": "Alligao"
					},
					"BwAAAGkEAAAAAAAAagQAAAAAAAAAAAAAagQAAAAAAABrBAAAAAAAAAAAAABrBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAbQQAAAAAAAAAAAAAbQQAAAAAAABuBAAAAAAAAAAAAABuBAAAAAAAAG8EAAAAAAAAAAAAAG8EAAAAAAAAcAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQQAAAAAAABpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					902,
					1,
					"left_delete",
					null,
					"AQAAAG8EAAAAAAAAbwQAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAcAQAAAAAAABwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					903,
					1,
					"insert",
					{
						"characters": "tor,"
					},
					"BAAAAG8EAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAABxBAAAAAAAAAAAAABxBAAAAAAAAHIEAAAAAAAAAAAAAHIEAAAAAAAAcwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwQAAAAAAABvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					914,
					1,
					"left_delete",
					null,
					"AQAAABUFAAAAAAAAFQUAAAAAAABtAAAACWxlZnRfd2FycF9sb2NhdGlvbiA6IGYzMiwgLy8gaG93IGZhciBiZXlvbmQgdGhlIGVkZ2VzIG9mIHRoZSBtYXAgc2hvdWxkIHRoaXMgZW50aXR5IHdhcnAgdG8gdGhlIG90aGVyIHNpZGU/Cg",
					"AQAAAAAAAAABAAAAFQUAAAAAAACCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					920,
					3,
					"left_delete",
					null,
					"CQAAAMLAAAAAAAAAwsAAAAAAAAAWAAAAbGVmdF93YXJwX2xvY2F0aW9uID0gMvC/AAAAAAAA8L8AAAAAAAAWAAAAbGVmdF93YXJwX2xvY2F0aW9uID0gMh2/AAAAAAAAHb8AAAAAAAAWAAAAbGVmdF93YXJwX2xvY2F0aW9uID0gMpXAAAAAAAAAlcAAAAAAAAABAAAAINm/AAAAAAAA2b8AAAAAAAABAAAAIBy/AAAAAAAAHL8AAAAAAAABAAAAIJLAAAAAAAAAksAAAAAAAAABAAAALNe/AAAAAAAA178AAAAAAAABAAAALBu/AAAAAAAAG78AAAAAAAABAAAALA",
					"AQAAAAAAAAADAAAAHb8AAAAAAAAzvwAAAAAAAAAAAAAAAPC/8L8AAAAAAAAGwAAAAAAAAAAAAAAAAPC/wsAAAAAAAADYwAAAAAAAAAAAAAAAAPC/"
				],
				[
					925,
					2,
					"left_delete",
					null,
					"AgAAAEnBAAAAAAAAScEAAAAAAAAXAAAAbGVmdF93YXJwX2xvY2F0aW9uID0gMixIwQAAAAAAAEjBAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAAYMEAAAAAAABJwQAAAAAAAAAAAAAAAPC/"
				],
				[
					931,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAClQAQAAAAAALFABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKVABAAAAAAApUAEAAAAAAAAAAAAAAPC/"
				],
				[
					982,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAClQAQAAAAAAKVABAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAAQlABAAAAAABCUAEAAAAAAAAAAAAAAPC/"
				],
				[
					984,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAERQAQAAAAAARVABAAAAAAAAAAAARVABAAAAAABGUAEAAAAAAAAAAABGUAEAAAAAAEdQAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARFABAAAAAABEUAEAAAAAAAAAAAAAAPC/"
				],
				[
					985,
					1,
					"insert",
					{
						"characters": " timer_progf"
					},
					"DAAAAEdQAQAAAAAASFABAAAAAAAAAAAASFABAAAAAABJUAEAAAAAAAAAAABJUAEAAAAAAEpQAQAAAAAAAAAAAEpQAQAAAAAAS1ABAAAAAAAAAAAAS1ABAAAAAABMUAEAAAAAAAAAAABMUAEAAAAAAE1QAQAAAAAAAAAAAE1QAQAAAAAATlABAAAAAAAAAAAATlABAAAAAABPUAEAAAAAAAAAAABPUAEAAAAAAFBQAQAAAAAAAAAAAFBQAQAAAAAAUVABAAAAAAAAAAAAUVABAAAAAABSUAEAAAAAAAAAAABSUAEAAAAAAFNQAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAR1ABAAAAAABHUAEAAAAAAAAAAAAAAPC/"
				],
				[
					986,
					1,
					"left_delete",
					null,
					"AQAAAFJQAQAAAAAAUlABAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAU1ABAAAAAABTUAEAAAAAAAAAAAAAAPC/"
				],
				[
					987,
					1,
					"insert",
					{
						"characters": "ress"
					},
					"BAAAAFJQAQAAAAAAU1ABAAAAAAAAAAAAU1ABAAAAAABUUAEAAAAAAAAAAABUUAEAAAAAAFVQAQAAAAAAAAAAAFVQAQAAAAAAVlABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUlABAAAAAABSUAEAAAAAAAAAAAAAAPC/"
				],
				[
					988,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAEhQAQAAAAAASFABAAAAAAAOAAAAdGltZXJfcHJvZ3Jlc3M",
					"AQAAAAAAAAABAAAAVlABAAAAAABWUAEAAAAAAAAAAAAAAPC/"
				],
				[
					989,
					1,
					"insert",
					{
						"characters": "timer_per"
					},
					"CQAAAEhQAQAAAAAASVABAAAAAAAAAAAASVABAAAAAABKUAEAAAAAAAAAAABKUAEAAAAAAEtQAQAAAAAAAAAAAEtQAQAAAAAATFABAAAAAAAAAAAATFABAAAAAABNUAEAAAAAAAAAAABNUAEAAAAAAE5QAQAAAAAAAAAAAE5QAQAAAAAAT1ABAAAAAAAAAAAAT1ABAAAAAABQUAEAAAAAAAAAAABQUAEAAAAAAFFQAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASFABAAAAAABIUAEAAAAAAAAAAAAAAPC/"
				],
				[
					990,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "timer_percentage(timer: Timer) "
					},
					"AgAAAEhQAQAAAAAASFABAAAAAAAJAAAAdGltZXJfcGVySFABAAAAAABaUAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUVABAAAAAABRUAEAAAAAAAAAAAAAAPC/"
				],
				[
					991,
					1,
					"insert",
					{
						"characters": "timer_level"
					},
					"CwAAAFlQAQAAAAAAWlABAAAAAAAAAAAAWlABAAAAAABbUAEAAAAAAAAAAABbUAEAAAAAAFxQAQAAAAAAAAAAAFxQAQAAAAAAXVABAAAAAAAAAAAAXVABAAAAAABeUAEAAAAAAAAAAABeUAEAAAAAAF9QAQAAAAAAAAAAAF9QAQAAAAAAYFABAAAAAAAAAAAAYFABAAAAAABhUAEAAAAAAAAAAABhUAEAAAAAAGJQAQAAAAAAAAAAAGJQAQAAAAAAY1ABAAAAAAAAAAAAY1ABAAAAAABkUAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWVABAAAAAABZUAEAAAAAAAAAAAAAAPC/"
				],
				[
					992,
					5,
					"left_delete",
					null,
					"BQAAAGNQAQAAAAAAY1ABAAAAAAABAAAAbGJQAQAAAAAAYlABAAAAAAABAAAAZWFQAQAAAAAAYVABAAAAAAABAAAAdmBQAQAAAAAAYFABAAAAAAABAAAAZV9QAQAAAAAAX1ABAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAZFABAAAAAABkUAEAAAAAAAAAAAAAAPC/"
				],
				[
					994,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAFlQAQAAAAAAWVABAAAAAAAGAAAAdGltZXJf",
					"AQAAAAAAAAABAAAAX1ABAAAAAABfUAEAAAAAAAAAAAAAAPC/"
				],
				[
					995,
					1,
					"insert",
					{
						"characters": "gmem.level"
					},
					"CgAAAFlQAQAAAAAAWlABAAAAAAAAAAAAWlABAAAAAABbUAEAAAAAAAAAAABbUAEAAAAAAFxQAQAAAAAAAAAAAFxQAQAAAAAAXVABAAAAAAAAAAAAXVABAAAAAABeUAEAAAAAAAAAAABeUAEAAAAAAF9QAQAAAAAAAAAAAF9QAQAAAAAAYFABAAAAAAAAAAAAYFABAAAAAABhUAEAAAAAAAAAAABhUAEAAAAAAGJQAQAAAAAAAAAAAGJQAQAAAAAAY1ABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWVABAAAAAABZUAEAAAAAAAAAAAAAAPC/"
				],
				[
					998,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":22,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "level_end_timer"
					},
					"AgAAAF5QAQAAAAAAXlABAAAAAAAFAAAAbGV2ZWxeUAEAAAAAAG1QAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAY1ABAAAAAABjUAEAAAAAAAAAAAAAAPC/"
				],
				[
					1000,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAG5QAQAAAAAAclABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAblABAAAAAABuUAEAAAAAAAAAAAAAAPC/"
				],
				[
					1005,
					1,
					"insert",
					{
						"characters": "\nfrogs_o"
					},
					"CQAAANfZAAAAAAAA2tkAAAAAAAAAAAAAclABAAAAAAByUAEAAAAAAAMAAAAJCQna2QAAAAAAANvZAAAAAAAAAAAAANvZAAAAAAAA3NkAAAAAAAAAAAAA3NkAAAAAAADd2QAAAAAAAAAAAADd2QAAAAAAAN7ZAAAAAAAAAAAAAN7ZAAAAAAAA39kAAAAAAAAAAAAA39kAAAAAAADg2QAAAAAAAAAAAADg2QAAAAAAAOHZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA19kAAAAAAADX2QAAAAAAAAAAAAAAAPC/"
				],
				[
					1006,
					1,
					"insert",
					{
						"characters": "n_lilypad_"
					},
					"CgAAAOHZAAAAAAAA4tkAAAAAAAAAAAAA4tkAAAAAAADj2QAAAAAAAAAAAADj2QAAAAAAAOTZAAAAAAAAAAAAAOTZAAAAAAAA5dkAAAAAAAAAAAAA5dkAAAAAAADm2QAAAAAAAAAAAADm2QAAAAAAAOfZAAAAAAAAAAAAAOfZAAAAAAAA6NkAAAAAAAAAAAAA6NkAAAAAAADp2QAAAAAAAAAAAADp2QAAAAAAAOrZAAAAAAAAAAAAAOrZAAAAAAAA69kAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4dkAAAAAAADh2QAAAAAAAAAAAAAAAPC/"
				],
				[
					1007,
					1,
					"insert",
					{
						"characters": "mod_key"
					},
					"BwAAAOvZAAAAAAAA7NkAAAAAAAAAAAAA7NkAAAAAAADt2QAAAAAAAAAAAADt2QAAAAAAAO7ZAAAAAAAAAAAAAO7ZAAAAAAAA79kAAAAAAAAAAAAA79kAAAAAAADw2QAAAAAAAAAAAADw2QAAAAAAAPHZAAAAAAAAAAAAAPHZAAAAAAAA8tkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA69kAAAAAAADr2QAAAAAAAAAAAAAAAPC/"
				],
				[
					1008,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAPLZAAAAAAAA89kAAAAAAAAAAAAA89kAAAAAAAD02QAAAAAAAAAAAAD02QAAAAAAAPXZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8tkAAAAAAADy2QAAAAAAAAAAAAAAAPC/"
				],
				[
					1009,
					1,
					"insert",
					{
						"characters": " rl.Key"
					},
					"BwAAAPXZAAAAAAAA9tkAAAAAAAAAAAAA9tkAAAAAAAD32QAAAAAAAAAAAAD32QAAAAAAAPjZAAAAAAAAAAAAAPjZAAAAAAAA+dkAAAAAAAAAAAAA+dkAAAAAAAD62QAAAAAAAAAAAAD62QAAAAAAAPvZAAAAAAAAAAAAAPvZAAAAAAAA/NkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9dkAAAAAAAD12QAAAAAAAAAAAAAAAPC/"
				],
				[
					1010,
					1,
					"insert",
					{
						"characters": "boardKey."
					},
					"CQAAAPzZAAAAAAAA/dkAAAAAAAAAAAAA/dkAAAAAAAD+2QAAAAAAAAAAAAD+2QAAAAAAAP/ZAAAAAAAAAAAAAP/ZAAAAAAAAANoAAAAAAAAAAAAAANoAAAAAAAAB2gAAAAAAAAAAAAAB2gAAAAAAAALaAAAAAAAAAAAAAALaAAAAAAAAA9oAAAAAAAAAAAAAA9oAAAAAAAAE2gAAAAAAAAAAAAAE2gAAAAAAAAXaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/NkAAAAAAAD82QAAAAAAAAAAAAAAAPC/"
				],
				[
					1011,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAAXaAAAAAAAABtoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABdoAAAAAAAAF2gAAAAAAAAAAAAAAAPC/"
				],
				[
					1013,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAbaAAAAAAAACdoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABtoAAAAAAAAG2gAAAAAAAAAAAAAAAPC/"
				],
				[
					1017,
					1,
					"insert",
					{
						"characters": "\nelse"
					},
					"BgAAAPbdAAAAAAAA+d0AAAAAAAAAAAAAB9oAAAAAAAAH2gAAAAAAAAIAAAAJCffdAAAAAAAA+N0AAAAAAAAAAAAA+N0AAAAAAAD53QAAAAAAAAAAAAD53QAAAAAAAPrdAAAAAAAAAAAAAPrdAAAAAAAA+90AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9t0AAAAAAAD23QAAAAAAAAAAAAAAAPC/"
				],
				[
					1018,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAAPvdAAAAAAAA/N0AAAAAAAAAAAAA/N0AAAAAAAD93QAAAAAAAAAAAAD93QAAAAAAAP7dAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+90AAAAAAAD73QAAAAAAAAAAAAAAAPC/"
				],
				[
					1019,
					1,
					"insert",
					{
						"characters": " rl.IsKeyDow"
					},
					"DAAAAP7dAAAAAAAA/90AAAAAAAAAAAAA/90AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAAHeAAAAAAAAAAAAAAHeAAAAAAAAAt4AAAAAAAAAAAAAAt4AAAAAAAAD3gAAAAAAAAAAAAAD3gAAAAAAAATeAAAAAAAAAAAAAATeAAAAAAAABd4AAAAAAAAAAAAABd4AAAAAAAAG3gAAAAAAAAAAAAAG3gAAAAAAAAfeAAAAAAAAAAAAAAfeAAAAAAAACN4AAAAAAAAAAAAACN4AAAAAAAAJ3gAAAAAAAAAAAAAJ3gAAAAAAAAreAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/t0AAAAAAAD+3QAAAAAAAAAAAAAAAPC/"
				],
				[
					1020,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAAreAAAAAAAAC94AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACt4AAAAAAAAK3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1021,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAveAAAAAAAADd4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAC94AAAAAAAAL3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1022,
					1,
					"insert",
					{
						"characters": "frogs"
					},
					"BQAAAAzeAAAAAAAADd4AAAAAAAAAAAAADd4AAAAAAAAO3gAAAAAAAAAAAAAO3gAAAAAAAA/eAAAAAAAAAAAAAA/eAAAAAAAAEN4AAAAAAAAAAAAAEN4AAAAAAAAR3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADN4AAAAAAAAM3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1023,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABHeAAAAAAAAEt4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEd4AAAAAAAAR3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1024,
					1,
					"left_delete",
					null,
					"AQAAABHeAAAAAAAAEd4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAEt4AAAAAAAAS3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1025,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":3,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "frogs_on_lilypad_mod_key"
					},
					"AgAAAAzeAAAAAAAADN4AAAAAAAAFAAAAZnJvZ3MM3gAAAAAAACTeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEd4AAAAAAAAR3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1027,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACXeAAAAAAAAKN4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJd4AAAAAAAAl3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1028,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACjeAAAAAAAAKt4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKN4AAAAAAAAo3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1029,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAACneAAAAAAAALN4AAAAAAAAAAAAALN4AAAAAAAAv3gAAAAAAAAAAAAAq3gAAAAAAACreAAAAAAAAAgAAAAkJKt4AAAAAAAAt3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKd4AAAAAAAAp3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1030,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAC3eAAAAAAAALt4AAAAAAAAAAAAALt4AAAAAAAAv3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALd4AAAAAAAAt3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1031,
					1,
					"insert",
					{
						"characters": " rl.IsKeyP"
					},
					"CgAAAC/eAAAAAAAAMN4AAAAAAAAAAAAAMN4AAAAAAAAx3gAAAAAAAAAAAAAx3gAAAAAAADLeAAAAAAAAAAAAADLeAAAAAAAAM94AAAAAAAAAAAAAM94AAAAAAAA03gAAAAAAAAAAAAA03gAAAAAAADXeAAAAAAAAAAAAADXeAAAAAAAANt4AAAAAAAAAAAAANt4AAAAAAAA33gAAAAAAAAAAAAA33gAAAAAAADjeAAAAAAAAAAAAADjeAAAAAAAAOd4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAL94AAAAAAAAv3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1032,
					1,
					"insert",
					{
						"characters": "ressed"
					},
					"BgAAADneAAAAAAAAOt4AAAAAAAAAAAAAOt4AAAAAAAA73gAAAAAAAAAAAAA73gAAAAAAADzeAAAAAAAAAAAAADzeAAAAAAAAPd4AAAAAAAAAAAAAPd4AAAAAAAA+3gAAAAAAAAAAAAA+3gAAAAAAAD/eAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOd4AAAAAAAA53gAAAAAAAAAAAAAAAPC/"
				],
				[
					1033,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD/eAAAAAAAAQd4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAP94AAAAAAAA/3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1034,
					1,
					"insert",
					{
						"characters": ".RIGHT_BRAC"
					},
					"CwAAAEDeAAAAAAAAQd4AAAAAAAAAAAAAQd4AAAAAAABC3gAAAAAAAAAAAABC3gAAAAAAAEPeAAAAAAAAAAAAAEPeAAAAAAAARN4AAAAAAAAAAAAARN4AAAAAAABF3gAAAAAAAAAAAABF3gAAAAAAAEbeAAAAAAAAAAAAAEbeAAAAAAAAR94AAAAAAAAAAAAAR94AAAAAAABI3gAAAAAAAAAAAABI3gAAAAAAAEneAAAAAAAAAAAAAEneAAAAAAAASt4AAAAAAAAAAAAASt4AAAAAAABL3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQN4AAAAAAABA3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1035,
					1,
					"insert",
					{
						"characters": "KET"
					},
					"AwAAAEveAAAAAAAATN4AAAAAAAAAAAAATN4AAAAAAABN3gAAAAAAAAAAAABN3gAAAAAAAE7eAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAS94AAAAAAABL3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1037,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAE/eAAAAAAAAU94AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAT94AAAAAAABP3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1038,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFPeAAAAAAAAVd4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAU94AAAAAAABT3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1039,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAAFTeAAAAAAAAWN4AAAAAAAAAAAAAWN4AAAAAAABc3gAAAAAAAAAAAABV3gAAAAAAAFXeAAAAAAAAAwAAAAkJCVXeAAAAAAAAWd4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVN4AAAAAAABU3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1040,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAFneAAAAAAAAWt4AAAAAAAAAAAAAWt4AAAAAAABb3gAAAAAAAAAAAABb3gAAAAAAAFzeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWd4AAAAAAABZ3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1041,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFzeAAAAAAAAXd4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXN4AAAAAAABc3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1042,
					1,
					"insert",
					{
						"characters": "&lp"
					},
					"AwAAAF3eAAAAAAAAXt4AAAAAAAAAAAAAXt4AAAAAAABf3gAAAAAAAAAAAABf3gAAAAAAAGDeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXd4AAAAAAABd3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1043,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAGDeAAAAAAAAYd4AAAAAAAAAAAAAYd4AAAAAAABi3gAAAAAAAAAAAABi3gAAAAAAAGPeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYN4AAAAAAABg3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1044,
					1,
					"insert",
					{
						"characters": " gme."
					},
					"BQAAAGPeAAAAAAAAZN4AAAAAAAAAAAAAZN4AAAAAAABl3gAAAAAAAAAAAABl3gAAAAAAAGbeAAAAAAAAAAAAAGbeAAAAAAAAZ94AAAAAAAAAAAAAZ94AAAAAAABo3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAY94AAAAAAABj3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1045,
					3,
					"left_delete",
					null,
					"AwAAAGfeAAAAAAAAZ94AAAAAAAABAAAALmbeAAAAAAAAZt4AAAAAAAABAAAAZWXeAAAAAAAAZd4AAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAaN4AAAAAAABo3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1046,
					1,
					"insert",
					{
						"characters": "em"
					},
					"AgAAAGXeAAAAAAAAZt4AAAAAAAAAAAAAZt4AAAAAAABn3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZd4AAAAAAABl3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1047,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAGTeAAAAAAAAZN4AAAAAAAADAAAAZ2VtYd4AAAAAAABh3gAAAAAAAAMAAABpbiA",
					"AQAAAAAAAAABAAAAZ94AAAAAAABn3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1048,
					3,
					"left_delete",
					null,
					"AwAAAGDeAAAAAAAAYN4AAAAAAAABAAAAIF/eAAAAAAAAX94AAAAAAAABAAAAcF7eAAAAAAAAXt4AAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAYd4AAAAAAABh3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1049,
					1,
					"insert",
					{
						"characters": "present"
					},
					"BwAAAF7eAAAAAAAAX94AAAAAAAAAAAAAX94AAAAAAABg3gAAAAAAAAAAAABg3gAAAAAAAGHeAAAAAAAAAAAAAGHeAAAAAAAAYt4AAAAAAAAAAAAAYt4AAAAAAABj3gAAAAAAAAAAAABj3gAAAAAAAGTeAAAAAAAAAAAAAGTeAAAAAAAAZd4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXt4AAAAAAABe3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1050,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAGXeAAAAAAAAZt4AAAAAAAAAAAAAZt4AAAAAAABn3gAAAAAAAAAAAABn3gAAAAAAAGjeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZd4AAAAAAABl3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1051,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAGjeAAAAAAAAad4AAAAAAAAAAAAAad4AAAAAAABq3gAAAAAAAAAAAABq3gAAAAAAAGveAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaN4AAAAAAABo3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1052,
					1,
					"insert",
					{
						"characters": "_frogs"
					},
					"BgAAAGveAAAAAAAAbN4AAAAAAAAAAAAAbN4AAAAAAABt3gAAAAAAAAAAAABt3gAAAAAAAG7eAAAAAAAAAAAAAG7eAAAAAAAAb94AAAAAAAAAAAAAb94AAAAAAABw3gAAAAAAAAAAAABw3gAAAAAAAHHeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAa94AAAAAAABr3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1053,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "is_frogs_on_lilypads"
					},
					"AgAAAGneAAAAAAAAad4AAAAAAAAIAAAAaXNfZnJvZ3Np3gAAAAAAAH3eAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcd4AAAAAAABx3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1055,
					1,
					"insert",
					{
						"characters": "gmem."
					},
					"BQAAAGneAAAAAAAAat4AAAAAAAAAAAAAat4AAAAAAABr3gAAAAAAAAAAAABr3gAAAAAAAGzeAAAAAAAAAAAAAGzeAAAAAAAAbd4AAAAAAAAAAAAAbd4AAAAAAABu3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAad4AAAAAAABp3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1057,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAILeAAAAAAAAh94AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgt4AAAAAAACC3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1058,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIfeAAAAAAAAid4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh94AAAAAAACH3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1059,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAAIjeAAAAAAAAjd4AAAAAAAAAAAAAjd4AAAAAAACS3gAAAAAAAAAAAACJ3gAAAAAAAIneAAAAAAAABAAAAAkJCQmJ3gAAAAAAAI7eAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiN4AAAAAAACI3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1060,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAI7eAAAAAAAAj94AAAAAAAAAAAAAj94AAAAAAACQ3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjt4AAAAAAACO3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1061,
					1,
					"insert",
					{
						"characters": " !present"
					},
					"CQAAAJDeAAAAAAAAkd4AAAAAAAAAAAAAkd4AAAAAAACS3gAAAAAAAAAAAACS3gAAAAAAAJPeAAAAAAAAAAAAAJPeAAAAAAAAlN4AAAAAAAAAAAAAlN4AAAAAAACV3gAAAAAAAAAAAACV3gAAAAAAAJbeAAAAAAAAAAAAAJbeAAAAAAAAl94AAAAAAAAAAAAAl94AAAAAAACY3gAAAAAAAAAAAACY3gAAAAAAAJneAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkN4AAAAAAACQ3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1062,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJneAAAAAAAAn94AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmd4AAAAAAACZ3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1063,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJ/eAAAAAAAAod4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAn94AAAAAAACf3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1064,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAAKDeAAAAAAAApt4AAAAAAAAAAAAApt4AAAAAAACs3gAAAAAAAAAAAACh3gAAAAAAAKHeAAAAAAAABQAAAAkJCQkJod4AAAAAAACn3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoN4AAAAAAACg3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1065,
					1,
					"insert",
					{
						"characters": "present"
					},
					"BwAAAKfeAAAAAAAAqN4AAAAAAAAAAAAAqN4AAAAAAACp3gAAAAAAAAAAAACp3gAAAAAAAKreAAAAAAAAAAAAAKreAAAAAAAAq94AAAAAAAAAAAAAq94AAAAAAACs3gAAAAAAAAAAAACs3gAAAAAAAK3eAAAAAAAAAAAAAK3eAAAAAAAArt4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAp94AAAAAAACn3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1066,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAK7eAAAAAAAAr94AAAAAAAAAAAAAr94AAAAAAACw3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArt4AAAAAAACu3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1067,
					1,
					"insert",
					{
						"characters": " true"
					},
					"BQAAALDeAAAAAAAAsd4AAAAAAAAAAAAAsd4AAAAAAACy3gAAAAAAAAAAAACy3gAAAAAAALPeAAAAAAAAAAAAALPeAAAAAAAAtN4AAAAAAAAAAAAAtN4AAAAAAAC13gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsN4AAAAAAACw3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1077,
					1,
					"insert",
					{
						"characters": "\nbnre"
					},
					"BQAAALXeAAAAAAAAvN4AAAAAAAAAAAAAvN4AAAAAAAC93gAAAAAAAAAAAAC93gAAAAAAAL7eAAAAAAAAAAAAAL7eAAAAAAAAv94AAAAAAAAAAAAAv94AAAAAAADA3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtd4AAAAAAAC13gAAAAAAAAAAAAAAAPC/"
				],
				[
					1078,
					3,
					"left_delete",
					null,
					"AwAAAL/eAAAAAAAAv94AAAAAAAABAAAAZb7eAAAAAAAAvt4AAAAAAAABAAAAcr3eAAAAAAAAvd4AAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAwN4AAAAAAADA3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1079,
					1,
					"insert",
					{
						"characters": "reak"
					},
					"BAAAAL3eAAAAAAAAvt4AAAAAAAAAAAAAvt4AAAAAAAC/3gAAAAAAAAAAAAC/3gAAAAAAAMDeAAAAAAAAAAAAAMDeAAAAAAAAwd4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvd4AAAAAAAC93gAAAAAAAAAAAAAAAPC/"
				],
				[
					1097,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAABJSAQAAAAAAGFIBAAAAAAAAAAAAGFIBAAAAAAAZUgEAAAAAAAAAAAAZUgEAAAAAABpSAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAElIBAAAAAAASUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1098,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABpSAQAAAAAAG1IBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGlIBAAAAAAAaUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1099,
					1,
					"insert",
					{
						"characters": "progress_of_"
					},
					"DAAAABtSAQAAAAAAHFIBAAAAAAAAAAAAHFIBAAAAAAAdUgEAAAAAAAAAAAAdUgEAAAAAAB5SAQAAAAAAAAAAAB5SAQAAAAAAH1IBAAAAAAAAAAAAH1IBAAAAAAAgUgEAAAAAAAAAAAAgUgEAAAAAACFSAQAAAAAAAAAAACFSAQAAAAAAIlIBAAAAAAAAAAAAIlIBAAAAAAAjUgEAAAAAAAAAAAAjUgEAAAAAACRSAQAAAAAAAAAAACRSAQAAAAAAJVIBAAAAAAAAAAAAJVIBAAAAAAAmUgEAAAAAAAAAAAAmUgEAAAAAACdSAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAG1IBAAAAAAAbUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1100,
					1,
					"insert",
					{
						"characters": "level_lend_t"
					},
					"DAAAACdSAQAAAAAAKFIBAAAAAAAAAAAAKFIBAAAAAAApUgEAAAAAAAAAAAApUgEAAAAAACpSAQAAAAAAAAAAACpSAQAAAAAAK1IBAAAAAAAAAAAAK1IBAAAAAAAsUgEAAAAAAAAAAAAsUgEAAAAAAC1SAQAAAAAAAAAAAC1SAQAAAAAALlIBAAAAAAAAAAAALlIBAAAAAAAvUgEAAAAAAAAAAAAvUgEAAAAAADBSAQAAAAAAAAAAADBSAQAAAAAAMVIBAAAAAAAAAAAAMVIBAAAAAAAyUgEAAAAAAAAAAAAyUgEAAAAAADNSAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJ1IBAAAAAAAnUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1101,
					1,
					"insert",
					{
						"characters": "imer"
					},
					"BAAAADNSAQAAAAAANFIBAAAAAAAAAAAANFIBAAAAAAA1UgEAAAAAAAAAAAA1UgEAAAAAADZSAQAAAAAAAAAAADZSAQAAAAAAN1IBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAM1IBAAAAAAAzUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1102,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAADdSAQAAAAAAOFIBAAAAAAAAAAAAOFIBAAAAAAA5UgEAAAAAAAAAAAA5UgEAAAAAADpSAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAN1IBAAAAAAA3UgEAAAAAAAAAAAAAAPC/"
				],
				[
					1103,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADpSAQAAAAAAO1IBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOlIBAAAAAAA6UgEAAAAAAAAAAAAAAPC/"
				],
				[
					1104,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAADtSAQAAAAAAPFIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAO1IBAAAAAAA7UgEAAAAAAAAAAAAAAPC/"
				],
				[
					1105,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADxSAQAAAAAAQlIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPFIBAAAAAAA8UgEAAAAAAAAAAAAAAPC/"
				],
				[
					1106,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEJSAQAAAAAARFIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQlIBAAAAAABCUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1107,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAAENSAQAAAAAASVIBAAAAAAAAAAAASVIBAAAAAABPUgEAAAAAAAAAAABEUgEAAAAAAERSAQAAAAAABQAAAAkJCQkJRFIBAAAAAABKUgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQ1IBAAAAAABDUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1109,
					1,
					"cut",
					null,
					"AQAAAFJSAQAAAAAAUlIBAAAAAAC5AAAACQkJCQlybGdyaWQuZHJhd19ncmlkX3RleHR1cmVfY2xpcF9vbl9ncmlkKGdtZW0udGV4dHVyZV9zcHJpdGVfc2hlZXQsIGdsb2JhbF9zcHJpdGVfc2hlZXRfY2xpcHNbLkhhcHB5X0Zyb2dfQ2xvc2VkX01vdXRoXSwgZ2xvYmFsX3Nwcml0ZV9zaGVldF9jZWxsX3NpemUsICBscCwgZ2xvYmFsX2dyaWRfY2VsbF9zaXplLCAwKQo",
					"AQAAAAAAAAABAAAAW1IBAAAAAABbUgEAAAAAAAAAAAAAwGhA"
				],
				[
					1111,
					1,
					"paste_and_indent",
					null,
					"AQAAAERSAQAAAAAA/VIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARFIBAAAAAABEUgEAAAAAAAAAAAAAAAAA"
				],
				[
					1113,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AgAAAERSAQAAAAAARVIBAAAAAAAAAAAA/lIBAAAAAAD+UgEAAAAAAAYAAAAJCQkJCQk",
					"AQAAAAAAAAABAAAARFIBAAAAAABEUgEAAAAAAAAAAAAAAAAA"
				],
				[
					1115,
					1,
					"left_delete",
					null,
					"AQAAAP1SAQAAAAAA/VIBAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA/lIBAAAAAAD+UgEAAAAAAAAAAAAAgEBA"
				],
				[
					1118,
					1,
					"insert",
					{
						"characters": "\nfrog_p"
					},
					"BwAAABJSAQAAAAAAGFIBAAAAAAAAAAAAGFIBAAAAAAAZUgEAAAAAAAAAAAAZUgEAAAAAABpSAQAAAAAAAAAAABpSAQAAAAAAG1IBAAAAAAAAAAAAG1IBAAAAAAAcUgEAAAAAAAAAAAAcUgEAAAAAAB1SAQAAAAAAAAAAAB1SAQAAAAAAHlIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAElIBAAAAAAASUgEAAAAAAAAAAAAAKJpA"
				],
				[
					1119,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAB5SAQAAAAAAH1IBAAAAAAAAAAAAH1IBAAAAAAAgUgEAAAAAAAAAAAAgUgEAAAAAACFSAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHlIBAAAAAAAeUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1120,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAACFSAQAAAAAAIlIBAAAAAAAAAAAAIlIBAAAAAAAjUgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIVIBAAAAAAAhUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1121,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAACNSAQAAAAAAJFIBAAAAAAAAAAAAJFIBAAAAAAAlUgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAI1IBAAAAAAAjUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1122,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACVSAQAAAAAAJlIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJVIBAAAAAAAlUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1123,
					1,
					"insert",
					{
						"characters": "len"
					},
					"AwAAACZSAQAAAAAAJ1IBAAAAAAAAAAAAJ1IBAAAAAAAoUgEAAAAAAAAAAAAoUgEAAAAAAClSAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJlIBAAAAAAAmUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1124,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAClSAQAAAAAAK1IBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKVIBAAAAAAApUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1125,
					1,
					"insert",
					{
						"characters": "lilypads"
					},
					"CAAAACpSAQAAAAAAK1IBAAAAAAAAAAAAK1IBAAAAAAAsUgEAAAAAAAAAAAAsUgEAAAAAAC1SAQAAAAAAAAAAAC1SAQAAAAAALlIBAAAAAAAAAAAALlIBAAAAAAAvUgEAAAAAAAAAAAAvUgEAAAAAADBSAQAAAAAAAAAAADBSAQAAAAAAMVIBAAAAAAAAAAAAMVIBAAAAAAAyUgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKlIBAAAAAAAqUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1130,
					1,
					"left_delete",
					null,
					"AQAAAE5SAQAAAAAATlIBAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAT1IBAAAAAABPUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1133,
					1,
					"insert",
					{
						"characters": "\nelse"
					},
					"BQAAACRTAQAAAAAAKlMBAAAAAAAAAAAAKlMBAAAAAAArUwEAAAAAAAAAAAArUwEAAAAAACxTAQAAAAAAAAAAACxTAQAAAAAALVMBAAAAAAAAAAAALVMBAAAAAAAuUwEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJFMBAAAAAAAkUwEAAAAAAAAAAAAAIHVA"
				],
				[
					1134,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAC5TAQAAAAAANFMBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALlMBAAAAAAAuUwEAAAAAAAAAAAAAAPC/"
				],
				[
					1135,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADRTAQAAAAAANlMBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANFMBAAAAAAA0UwEAAAAAAAAAAAAAAPC/"
				],
				[
					1136,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAADVTAQAAAAAAO1MBAAAAAAAAAAAAO1MBAAAAAABBUwEAAAAAAAAAAAA2UwEAAAAAADZTAQAAAAAABQAAAAkJCQkJNlMBAAAAAAA8UwEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANVMBAAAAAAA1UwEAAAAAAAAAAAAAAPC/"
				],
				[
					1137,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAADxTAQAAAAAAPVMBAAAAAAAAAAAAPVMBAAAAAAA+UwEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPFMBAAAAAAA8UwEAAAAAAAAAAAAAAPC/"
				],
				[
					1138,
					1,
					"insert",
					{
						"characters": " frog_p"
					},
					"BwAAAD5TAQAAAAAAP1MBAAAAAAAAAAAAP1MBAAAAAABAUwEAAAAAAAAAAABAUwEAAAAAAEFTAQAAAAAAAAAAAEFTAQAAAAAAQlMBAAAAAAAAAAAAQlMBAAAAAABDUwEAAAAAAAAAAABDUwEAAAAAAERTAQAAAAAAAAAAAERTAQAAAAAARVMBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPlMBAAAAAAA+UwEAAAAAAAAAAAAAAPC/"
				],
				[
					1139,
					1,
					"insert",
					{
						"characters": " >="
					},
					"AwAAAEVTAQAAAAAARlMBAAAAAAAAAAAARlMBAAAAAABHUwEAAAAAAAAAAABHUwEAAAAAAEhTAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARVMBAAAAAABFUwEAAAAAAAAAAAAAAPC/"
				],
				[
					1140,
					1,
					"insert",
					{
						"characters": " progress"
					},
					"CQAAAEhTAQAAAAAASVMBAAAAAAAAAAAASVMBAAAAAABKUwEAAAAAAAAAAABKUwEAAAAAAEtTAQAAAAAAAAAAAEtTAQAAAAAATFMBAAAAAAAAAAAATFMBAAAAAABNUwEAAAAAAAAAAABNUwEAAAAAAE5TAQAAAAAAAAAAAE5TAQAAAAAAT1MBAAAAAAAAAAAAT1MBAAAAAABQUwEAAAAAAAAAAABQUwEAAAAAAFFTAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASFMBAAAAAABIUwEAAAAAAAAAAAAAAPC/"
				],
				[
					1141,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "progress_of_level_end_timer"
					},
					"AgAAAElTAQAAAAAASVMBAAAAAAAIAAAAcHJvZ3Jlc3NJUwEAAAAAAGRTAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUVMBAAAAAABRUwEAAAAAAAAAAAAAAPC/"
				],
				[
					1142,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGRTAQAAAAAAa1MBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZFMBAAAAAABkUwEAAAAAAAAAAAAAAPC/"
				],
				[
					1143,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGtTAQAAAAAAbVMBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAa1MBAAAAAABrUwEAAAAAAAAAAAAAAPC/"
				],
				[
					1144,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAAGxTAQAAAAAAc1MBAAAAAAAAAAAAc1MBAAAAAAB6UwEAAAAAAAAAAABtUwEAAAAAAG1TAQAAAAAABgAAAAkJCQkJCW1TAQAAAAAAdFMBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbFMBAAAAAABsUwEAAAAAAAAAAAAAAPC/"
				],
				[
					1156,
					1,
					"paste",
					null,
					"AQAAAG1TAQAAAAAAJ1QBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdFMBAAAAAAB0UwEAAAAAAAAAAAAAAPC/"
				],
				[
					1159,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AgAAAHNTAQAAAAAAdFMBAAAAAAAAAAAAKFQBAAAAAAAoVAEAAAAAAAcAAAAJCQkJCQkJ",
					"AQAAAAAAAAABAAAAc1MBAAAAAABzUwEAAAAAAAAAAAAAwGhA"
				],
				[
					1161,
					1,
					"left_delete",
					null,
					"AQAAACdUAQAAAAAAJ1QBAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAKFQBAAAAAAAoVAEAAAAAAAAAAAAA4GxA"
				],
				[
					1164,
					6,
					"left_delete",
					null,
					"BgAAAOBTAQAAAAAA4FMBAAAAAAABAAAAZN9TAQAAAAAA31MBAAAAAAABAAAAZd5TAQAAAAAA3lMBAAAAAAABAAAAc91TAQAAAAAA3VMBAAAAAAABAAAAb9xTAQAAAAAA3FMBAAAAAAABAAAAbNtTAQAAAAAA21MBAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAA4VMBAAAAAADhUwEAAAAAAAAAAAAAAPC/"
				],
				[
					1165,
					1,
					"insert",
					{
						"characters": "Open"
					},
					"BAAAANtTAQAAAAAA3FMBAAAAAAAAAAAA3FMBAAAAAADdUwEAAAAAAAAAAADdUwEAAAAAAN5TAQAAAAAAAAAAAN5TAQAAAAAA31MBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA21MBAAAAAADbUwEAAAAAAAAAAAAAAPC/"
				],
				[
					1173,
					1,
					"insert",
					{
						"characters": "f32("
					},
					"BAAAACJSAQAAAAAAI1IBAAAAAAAAAAAAI1IBAAAAAAAkUgEAAAAAAAAAAAAkUgEAAAAAACVSAQAAAAAAAAAAACVSAQAAAAAAJlIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIlIBAAAAAAAiUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1175,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACdSAQAAAAAAKFIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJ1IBAAAAAAAnUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1178,
					1,
					"insert",
					{
						"characters": "f32("
					},
					"BAAAACtSAQAAAAAALFIBAAAAAAAAAAAALFIBAAAAAAAtUgEAAAAAAAAAAAAtUgEAAAAAAC5SAQAAAAAAAAAAAC5SAQAAAAAAL1IBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAK1IBAAAAAAArUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1180,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAADxSAQAAAAAAPVIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPFIBAAAAAAA8UgEAAAAAAAAAAAAAAPC/"
				],
				[
					1183,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAACBSAQAAAAAAIVIBAAAAAAAAAAAAIVIBAAAAAAAiUgEAAAAAAAAAAAAiUgEAAAAAACNSAQAAAAAAAAAAACNSAQAAAAAAJFIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIFIBAAAAAAAgUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1184,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACRSAQAAAAAAJVIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJFIBAAAAAAAkUgEAAAAAAAAAAAAAAPC/"
				],
				[
					1188,
					1,
					"insert",
					{
						"characters": "\nelse"
					},
					"BQAAADxUAQAAAAAAQ1QBAAAAAAAAAAAAQ1QBAAAAAABEVAEAAAAAAAAAAABEVAEAAAAAAEVUAQAAAAAAAAAAAEVUAQAAAAAARlQBAAAAAAAAAAAARlQBAAAAAABHVAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPFQBAAAAAAA8VAEAAAAAAAAAAAAAAPC/"
				],
				[
					1189,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEdUAQAAAAAATlQBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAR1QBAAAAAABHVAEAAAAAAAAAAAAAAPC/"
				],
				[
					1190,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAE5UAQAAAAAAUFQBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATlQBAAAAAABOVAEAAAAAAAAAAAAAAPC/"
				],
				[
					1191,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAAE9UAQAAAAAAVlQBAAAAAAAAAAAAVlQBAAAAAABdVAEAAAAAAAAAAABQVAEAAAAAAFBUAQAAAAAABgAAAAkJCQkJCVBUAQAAAAAAV1QBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAT1QBAAAAAABPVAEAAAAAAAAAAAAAAPC/"
				],
				[
					1195,
					1,
					"paste_and_indent",
					null,
					"AQAAAFBUAQAAAAAACVUBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAV1QBAAAAAABXVAEAAAAAAAAAAAAA4GxA"
				],
				[
					1196,
					8,
					"left_delete",
					null,
					"CAAAAA9VAQAAAAAAD1UBAAAAAAABAAAACQ5VAQAAAAAADlUBAAAAAAABAAAACQ1VAQAAAAAADVUBAAAAAAABAAAACQxVAQAAAAAADFUBAAAAAAABAAAACQtVAQAAAAAAC1UBAAAAAAABAAAACQpVAQAAAAAAClUBAAAAAAABAAAACQlVAQAAAAAACVUBAAAAAAABAAAACQhVAQAAAAAACFUBAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAEFUBAAAAAAAQVQEAAAAAAAAAAAAAAPC/"
				],
				[
					1201,
					4,
					"left_delete",
					null,
					"BAAAAMFUAQAAAAAAwVQBAAAAAAABAAAAbsBUAQAAAAAAwFQBAAAAAAABAAAAZb9UAQAAAAAAv1QBAAAAAAABAAAAcL5UAQAAAAAAvlQBAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAAwlQBAAAAAADCVAEAAAAAAAAAAAAAAPC/"
				],
				[
					1202,
					1,
					"insert",
					{
						"characters": "Closed"
					},
					"BgAAAL5UAQAAAAAAv1QBAAAAAAAAAAAAv1QBAAAAAADAVAEAAAAAAAAAAADAVAEAAAAAAMFUAQAAAAAAAAAAAMFUAQAAAAAAwlQBAAAAAAAAAAAAwlQBAAAAAADDVAEAAAAAAAAAAADDVAEAAAAAAMRUAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvlQBAAAAAAC+VAEAAAAAAAAAAAAAAPC/"
				],
				[
					1230,
					1,
					"left_delete",
					null,
					"AQAAAI3TAAAAAAAAjdMAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAjtMAAAAAAACO0wAAAAAAAAAAAAAAAPC/"
				],
				[
					1231,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAI3TAAAAAAAAjtMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjdMAAAAAAACN0wAAAAAAAAAAAAAAAPC/"
				],
				[
					1234,
					1,
					"left_delete",
					null,
					"AQAAAJ/TAAAAAAAAn9MAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAoNMAAAAAAACg0wAAAAAAAAAAAAAAAPC/"
				],
				[
					1235,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAJ/TAAAAAAAAoNMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAn9MAAAAAAACf0wAAAAAAAAAAAAAAAPC/"
				],
				[
					1250,
					4,
					"left_delete",
					null,
					"BAAAAO1TAQAAAAAA7VMBAAAAAAABAAAAbuxTAQAAAAAA7FMBAAAAAAABAAAAZetTAQAAAAAA61MBAAAAAAABAAAAcOpTAQAAAAAA6lMBAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAA7lMBAAAAAADuUwEAAAAAAAAAAAAAAPC/"
				],
				[
					1251,
					1,
					"insert",
					{
						"characters": "Closed"
					},
					"BgAAAOpTAQAAAAAA61MBAAAAAAAAAAAA61MBAAAAAADsUwEAAAAAAAAAAADsUwEAAAAAAO1TAQAAAAAAAAAAAO1TAQAAAAAA7lMBAAAAAAAAAAAA7lMBAAAAAADvUwEAAAAAAAAAAADvUwEAAAAAAPBTAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6lMBAAAAAADqUwEAAAAAAAAAAAAAAPC/"
				],
				[
					1253,
					6,
					"left_delete",
					null,
					"BgAAAMVUAQAAAAAAxVQBAAAAAAABAAAAZMRUAQAAAAAAxFQBAAAAAAABAAAAZcNUAQAAAAAAw1QBAAAAAAABAAAAc8JUAQAAAAAAwlQBAAAAAAABAAAAb8FUAQAAAAAAwVQBAAAAAAABAAAAbMBUAQAAAAAAwFQBAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAAxlQBAAAAAADGVAEAAAAAAAAAAAAAqJFA"
				],
				[
					1254,
					1,
					"insert",
					{
						"characters": "Open"
					},
					"BAAAAMBUAQAAAAAAwVQBAAAAAAAAAAAAwVQBAAAAAADCVAEAAAAAAAAAAADCVAEAAAAAAMNUAQAAAAAAAAAAAMNUAQAAAAAAxFQBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwFQBAAAAAADAVAEAAAAAAAAAAAAAAPC/"
				],
				[
					1284,
					1,
					"left_delete",
					null,
					"AQAAAI3TAAAAAAAAjdMAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAjtMAAAAAAACO0wAAAAAAAAAAAAAAAPC/"
				],
				[
					1285,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAI3TAAAAAAAAjtMAAAAAAAAAAAAAjtMAAAAAAACP0wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjdMAAAAAAACN0wAAAAAAAAAAAAAAAPC/"
				],
				[
					1288,
					1,
					"left_delete",
					null,
					"AQAAAKDTAAAAAAAAoNMAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAodMAAAAAAACh0wAAAAAAAAAAAAAAAPC/"
				],
				[
					1289,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAKDTAAAAAAAAodMAAAAAAAAAAAAAodMAAAAAAACi0wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoNMAAAAAAACg0wAAAAAAAAAAAAAAAPC/"
				],
				[
					1303,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAI3TAAAAAAAAjtMAAAAAAAACAAAAMTA",
					"AQAAAAAAAAABAAAAjdMAAAAAAACP0wAAAAAAAAAAAAAAAPC/"
				],
				[
					1306,
					2,
					"left_delete",
					null,
					"AgAAAKDTAAAAAAAAoNMAAAAAAAABAAAAMJ/TAAAAAAAAn9MAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAodMAAAAAAACh0wAAAAAAAAAAAAAAAPC/"
				],
				[
					1307,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAJ/TAAAAAAAAoNMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAn9MAAAAAAACf0wAAAAAAAAAAAAAAAPC/"
				],
				[
					1336,
					2,
					"left_delete",
					null,
					"AgAAAF0mAQAAAAAAXSYBAAAAAAABAAAAMVwmAQAAAAAAXCYBAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAXiYBAAAAAABeJgEAAAAAAAAAAAAAAPC/"
				],
				[
					1337,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAFwmAQAAAAAAXSYBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXCYBAAAAAABcJgEAAAAAAAAAAAAAAPC/"
				],
				[
					1338,
					1,
					"left_delete",
					null,
					"AQAAAFwmAQAAAAAAXCYBAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAXSYBAAAAAABdJgEAAAAAAAAAAAAAAPC/"
				],
				[
					1339,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAFwmAQAAAAAAXSYBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXCYBAAAAAABcJgEAAAAAAAAAAAAAAPC/"
				],
				[
					1344,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"AwAAADUmAQAAAAAAOyYBAAAAAAAAAAAAOyYBAAAAAAA8JgEAAAAAAAAAAAA8JgEAAAAAAD0mAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANSYBAAAAAAA1JgEAAAAAAAAAAAAAAPC/"
				],
				[
					1345,
					1,
					"insert",
					{
						"characters": " 10"
					},
					"AwAAAD0mAQAAAAAAPiYBAAAAAAAAAAAAPiYBAAAAAAA/JgEAAAAAAAAAAAA/JgEAAAAAAEAmAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPSYBAAAAAAA9JgEAAAAAAAAAAAAAAPC/"
				],
				[
					1346,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEAmAQAAAAAAQSYBAAAAAAAAAAAAQSYBAAAAAABCJgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQCYBAAAAAABAJgEAAAAAAAAAAAAAAPC/"
				],
				[
					1347,
					1,
					"insert",
					{
						"characters": " frog"
					},
					"BQAAAEImAQAAAAAAQyYBAAAAAAAAAAAAQyYBAAAAAABEJgEAAAAAAAAAAABEJgEAAAAAAEUmAQAAAAAAAAAAAEUmAQAAAAAARiYBAAAAAAAAAAAARiYBAAAAAABHJgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQiYBAAAAAABCJgEAAAAAAAAAAAAAAPC/"
				],
				[
					1348,
					1,
					"insert",
					{
						"characters": " safely"
					},
					"BwAAAEcmAQAAAAAASCYBAAAAAAAAAAAASCYBAAAAAABJJgEAAAAAAAAAAABJJgEAAAAAAEomAQAAAAAAAAAAAEomAQAAAAAASyYBAAAAAAAAAAAASyYBAAAAAABMJgEAAAAAAAAAAABMJgEAAAAAAE0mAQAAAAAAAAAAAE0mAQAAAAAATiYBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARyYBAAAAAABHJgEAAAAAAAAAAAAAAPC/"
				],
				[
					1349,
					1,
					"insert",
					{
						"characters": " gets"
					},
					"BQAAAE4mAQAAAAAATyYBAAAAAAAAAAAATyYBAAAAAABQJgEAAAAAAAAAAABQJgEAAAAAAFEmAQAAAAAAAAAAAFEmAQAAAAAAUiYBAAAAAAAAAAAAUiYBAAAAAABTJgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATiYBAAAAAABOJgEAAAAAAAAAAAAAAPC/"
				],
				[
					1350,
					1,
					"insert",
					{
						"characters": " gome"
					},
					"BQAAAFMmAQAAAAAAVCYBAAAAAAAAAAAAVCYBAAAAAABVJgEAAAAAAAAAAABVJgEAAAAAAFYmAQAAAAAAAAAAAFYmAQAAAAAAVyYBAAAAAAAAAAAAVyYBAAAAAABYJgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUyYBAAAAAABTJgEAAAAAAAAAAAAAAPC/"
				],
				[
					1362,
					1,
					"insert",
					{
						"characters": "\ngmem.score"
					},
					"CwAAAMoqAQAAAAAAzyoBAAAAAAAAAAAAzyoBAAAAAADQKgEAAAAAAAAAAADQKgEAAAAAANEqAQAAAAAAAAAAANEqAQAAAAAA0ioBAAAAAAAAAAAA0ioBAAAAAADTKgEAAAAAAAAAAADTKgEAAAAAANQqAQAAAAAAAAAAANQqAQAAAAAA1SoBAAAAAAAAAAAA1SoBAAAAAADWKgEAAAAAAAAAAADWKgEAAAAAANcqAQAAAAAAAAAAANcqAQAAAAAA2CoBAAAAAAAAAAAA2CoBAAAAAADZKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyioBAAAAAADKKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1363,
					1,
					"insert",
					{
						"characters": " +="
					},
					"AwAAANkqAQAAAAAA2ioBAAAAAAAAAAAA2ioBAAAAAADbKgEAAAAAAAAAAADbKgEAAAAAANwqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2SoBAAAAAADZKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1364,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANwqAQAAAAAA3SoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3CoBAAAAAADcKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1365,
					1,
					"insert",
					{
						"characters": "1000"
					},
					"BAAAAN0qAQAAAAAA3ioBAAAAAAAAAAAA3ioBAAAAAADfKgEAAAAAAAAAAADfKgEAAAAAAOAqAQAAAAAAAAAAAOAqAQAAAAAA4SoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3SoBAAAAAADdKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1367,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"AwAAAMoqAQAAAAAAzyoBAAAAAAAAAAAAzyoBAAAAAADQKgEAAAAAAAAAAADQKgEAAAAAANEqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyioBAAAAAADKKgEAAAAAAAAAAAAAgHFA"
				],
				[
					1368,
					1,
					"insert",
					{
						"characters": " 1000"
					},
					"BQAAANEqAQAAAAAA0ioBAAAAAAAAAAAA0ioBAAAAAADTKgEAAAAAAAAAAADTKgEAAAAAANQqAQAAAAAAAAAAANQqAQAAAAAA1SoBAAAAAAAAAAAA1SoBAAAAAADWKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0SoBAAAAAADRKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1369,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAANYqAQAAAAAA1yoBAAAAAAAAAAAA1yoBAAAAAADYKgEAAAAAAAAAAADYKgEAAAAAANkqAQAAAAAAAAAAANkqAQAAAAAA2ioBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1ioBAAAAAADWKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1370,
					1,
					"insert",
					{
						"characters": " saving"
					},
					"BwAAANoqAQAAAAAA2yoBAAAAAAAAAAAA2yoBAAAAAADcKgEAAAAAAAAAAADcKgEAAAAAAN0qAQAAAAAAAAAAAN0qAQAAAAAA3ioBAAAAAAAAAAAA3ioBAAAAAADfKgEAAAAAAAAAAADfKgEAAAAAAOAqAQAAAAAAAAAAAOAqAQAAAAAA4SoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2ioBAAAAAADaKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1371,
					1,
					"insert",
					{
						"characters": " all"
					},
					"BAAAAOEqAQAAAAAA4ioBAAAAAAAAAAAA4ioBAAAAAADjKgEAAAAAAAAAAADjKgEAAAAAAOQqAQAAAAAAAAAAAOQqAQAAAAAA5SoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4SoBAAAAAADhKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1372,
					1,
					"insert",
					{
						"characters": " gr"
					},
					"AwAAAOUqAQAAAAAA5ioBAAAAAAAAAAAA5ioBAAAAAADnKgEAAAAAAAAAAADnKgEAAAAAAOgqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5SoBAAAAAADlKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1373,
					2,
					"left_delete",
					null,
					"AgAAAOcqAQAAAAAA5yoBAAAAAAABAAAAcuYqAQAAAAAA5ioBAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAA6CoBAAAAAADoKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1374,
					1,
					"insert",
					{
						"characters": "frogs"
					},
					"BQAAAOYqAQAAAAAA5yoBAAAAAAAAAAAA5yoBAAAAAADoKgEAAAAAAAAAAADoKgEAAAAAAOkqAQAAAAAAAAAAAOkqAQAAAAAA6ioBAAAAAAAAAAAA6ioBAAAAAADrKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5ioBAAAAAADmKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1377,
					1,
					"insert",
					{
						"characters": "\n\nremaining_secon"
					},
					"EgAAAI4pAQAAAAAAlCkBAAAAAAAAAAAAlCkBAAAAAACaKQEAAAAAAAAAAACPKQEAAAAAAI8pAQAAAAAABQAAAAkJCQkJlSkBAAAAAACWKQEAAAAAAAAAAACWKQEAAAAAAJcpAQAAAAAAAAAAAJcpAQAAAAAAmCkBAAAAAAAAAAAAmCkBAAAAAACZKQEAAAAAAAAAAACZKQEAAAAAAJopAQAAAAAAAAAAAJopAQAAAAAAmykBAAAAAAAAAAAAmykBAAAAAACcKQEAAAAAAAAAAACcKQEAAAAAAJ0pAQAAAAAAAAAAAJ0pAQAAAAAAnikBAAAAAAAAAAAAnikBAAAAAACfKQEAAAAAAAAAAACfKQEAAAAAAKApAQAAAAAAAAAAAKApAQAAAAAAoSkBAAAAAAAAAAAAoSkBAAAAAACiKQEAAAAAAAAAAACiKQEAAAAAAKMpAQAAAAAAAAAAAKMpAQAAAAAApCkBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjikBAAAAAACOKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1378,
					1,
					"insert",
					{
						"characters": "ds"
					},
					"AgAAAKQpAQAAAAAApSkBAAAAAAAAAAAApSkBAAAAAACmKQEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApCkBAAAAAACkKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1379,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAKYpAQAAAAAApykBAAAAAAAAAAAApykBAAAAAACoKQEAAAAAAAAAAACoKQEAAAAAAKkpAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApikBAAAAAACmKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1380,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkpAQAAAAAAqikBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqSkBAAAAAACpKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1394,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkpAQAAAAAAqikBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqSkBAAAAAACpKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1395,
					1,
					"paste",
					null,
					"AQAAAKopAQAAAAAA0ykBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqikBAAAAAACqKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1396,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAANMpAQAAAAAA1CkBAAAAAAAAAAAA1CkBAAAAAADVKQEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0ykBAAAAAADTKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1397,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANUpAQAAAAAA1ikBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1SkBAAAAAADVKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1398,
					2,
					"left_delete",
					null,
					"AgAAANUpAQAAAAAA1SkBAAAAAAABAAAAINQpAQAAAAAA1CkBAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA1ikBAAAAAADWKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1399,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAANQpAQAAAAAA1SkBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1CkBAAAAAADUKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1400,
					1,
					"insert",
					{
						"characters": " gmem"
					},
					"BQAAANUpAQAAAAAA1ikBAAAAAAAAAAAA1ikBAAAAAADXKQEAAAAAAAAAAADXKQEAAAAAANgpAQAAAAAAAAAAANgpAQAAAAAA2SkBAAAAAAAAAAAA2SkBAAAAAADaKQEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1SkBAAAAAADVKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1401,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAANopAQAAAAAA2ykBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2ikBAAAAAADaKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1402,
					1,
					"insert",
					{
						"characters": "countdown"
					},
					"CQAAANspAQAAAAAA3CkBAAAAAAAAAAAA3CkBAAAAAADdKQEAAAAAAAAAAADdKQEAAAAAAN4pAQAAAAAAAAAAAN4pAQAAAAAA3ykBAAAAAAAAAAAA3ykBAAAAAADgKQEAAAAAAAAAAADgKQEAAAAAAOEpAQAAAAAAAAAAAOEpAQAAAAAA4ikBAAAAAAAAAAAA4ikBAAAAAADjKQEAAAAAAAAAAADjKQEAAAAAAOQpAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2ykBAAAAAADbKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1403,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "countdown_timer_lose_life"
					},
					"AgAAANspAQAAAAAA2ykBAAAAAAAJAAAAY291bnRkb3du2ykBAAAAAAD0KQEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5CkBAAAAAADkKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1407,
					1,
					"insert",
					{
						"characters": "int("
					},
					"BAAAAKopAQAAAAAAqykBAAAAAAAAAAAAqykBAAAAAACsKQEAAAAAAAAAAACsKQEAAAAAAK0pAQAAAAAAAAAAAK0pAQAAAAAArikBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqikBAAAAAACqKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1409,
					1,
					"left_delete",
					null,
					"AQAAAPgpAQAAAAAA+CkBAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA+SkBAAAAAAD5KQEAAAAAAP///////+9/"
				],
				[
					1410,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAPgpAQAAAAAA+SkBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+CkBAAAAAAD4KQEAAAAAAAAAAAAAAPC/"
				],
				[
					1412,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPkpAQAAAAAA/ykBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+SkBAAAAAAD5KQEAAAAAAAAAAAAAAPC/"
				],
				[
					1413,
					1,
					"insert",
					{
						"characters": "bonus"
					},
					"BQAAAP8pAQAAAAAAACoBAAAAAAAAAAAAACoBAAAAAAABKgEAAAAAAAAAAAABKgEAAAAAAAIqAQAAAAAAAAAAAAIqAQAAAAAAAyoBAAAAAAAAAAAAAyoBAAAAAAAEKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/ykBAAAAAAD/KQEAAAAAAAAAAAAAAPC/"
				],
				[
					1414,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAAQqAQAAAAAABSoBAAAAAAAAAAAABSoBAAAAAAAGKgEAAAAAAAAAAAAGKgEAAAAAAAcqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABCoBAAAAAAAEKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1415,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAcqAQAAAAAACCoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAByoBAAAAAAAHKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1416,
					1,
					"insert",
					{
						"characters": "10.0"
					},
					"BAAAAAgqAQAAAAAACSoBAAAAAAAAAAAACSoBAAAAAAAKKgEAAAAAAAAAAAAKKgEAAAAAAAsqAQAAAAAAAAAAAAsqAQAAAAAADCoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACCoBAAAAAAAIKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1417,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAwqAQAAAAAADSoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADCoBAAAAAAAMKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1420,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAAwqAQAAAAAADSoBAAAAAAAAAAAADSoBAAAAAAAOKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADCoBAAAAAAAMKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1421,
					1,
					"insert",
					{
						"characters": " remaining_se"
					},
					"DQAAAA4qAQAAAAAADyoBAAAAAAAAAAAADyoBAAAAAAAQKgEAAAAAAAAAAAAQKgEAAAAAABEqAQAAAAAAAAAAABEqAQAAAAAAEioBAAAAAAAAAAAAEioBAAAAAAATKgEAAAAAAAAAAAATKgEAAAAAABQqAQAAAAAAAAAAABQqAQAAAAAAFSoBAAAAAAAAAAAAFSoBAAAAAAAWKgEAAAAAAAAAAAAWKgEAAAAAABcqAQAAAAAAAAAAABcqAQAAAAAAGCoBAAAAAAAAAAAAGCoBAAAAAAAZKgEAAAAAAAAAAAAZKgEAAAAAABoqAQAAAAAAAAAAABoqAQAAAAAAGyoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADioBAAAAAAAOKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1422,
					1,
					"insert",
					{
						"characters": "conds"
					},
					"BQAAABsqAQAAAAAAHCoBAAAAAAAAAAAAHCoBAAAAAAAdKgEAAAAAAAAAAAAdKgEAAAAAAB4qAQAAAAAAAAAAAB4qAQAAAAAAHyoBAAAAAAAAAAAAHyoBAAAAAAAgKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGyoBAAAAAAAbKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1427,
					1,
					"insert",
					{
						"characters": "f32("
					},
					"BAAAAA8qAQAAAAAAECoBAAAAAAAAAAAAECoBAAAAAAARKgEAAAAAAAAAAAARKgEAAAAAABIqAQAAAAAAAAAAABIqAQAAAAAAEyoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADyoBAAAAAAAPKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1429,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACQqAQAAAAAAJSoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJCoBAAAAAAAkKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1431,
					1,
					"insert",
					{
						"characters": "f32("
					},
					"BAAAAAgqAQAAAAAACSoBAAAAAAAAAAAACSoBAAAAAAAKKgEAAAAAAAAAAAAKKgEAAAAAAAsqAQAAAAAAAAAAAAsqAQAAAAAADCoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACCoBAAAAAAAIKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1434,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAABAqAQAAAAAAESoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAECoBAAAAAAAQKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1437,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAAYqAQAAAAAAByoBAAAAAAAAAAAAByoBAAAAAAAIKgEAAAAAAAAAAAAIKgEAAAAAAAkqAQAAAAAAAAAAAAkqAQAAAAAACioBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABioBAAAAAAAGKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1438,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAoqAQAAAAAACyoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACioBAAAAAAAKKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1440,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADAqAQAAAAAANioBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMCoBAAAAAAAwKgEAAAAAAP///////+9/"
				],
				[
					1443,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AwAAAAsqAQAAAAAACyoBAAAAAAABAAAAPTAqAQAAAAAAMCoBAAAAAAAFAAAACQkJCQkHKgEAAAAAAAcqAQAAAAAABAAAAGYzMiA",
					"AQAAAAAAAAABAAAADCoBAAAAAAAMKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1444,
					1,
					"insert",
					{
						"characters": "int"
					},
					"AwAAAAcqAQAAAAAACCoBAAAAAAAAAAAACCoBAAAAAAAJKgEAAAAAAAAAAAAJKgEAAAAAAAoqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAByoBAAAAAAAHKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1445,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAoqAQAAAAAACyoBAAAAAAAAAAAACyoBAAAAAAAMKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACioBAAAAAAAKKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1447,
					1,
					"reindent",
					null,
					"AQAAADEqAQAAAAAANioBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMSoBAAAAAAAxKgEAAAAAAAAAAAAAAHFA"
				],
				[
					1448,
					1,
					"insert",
					{
						"characters": "gmem.score"
					},
					"CgAAADYqAQAAAAAANyoBAAAAAAAAAAAANyoBAAAAAAA4KgEAAAAAAAAAAAA4KgEAAAAAADkqAQAAAAAAAAAAADkqAQAAAAAAOioBAAAAAAAAAAAAOioBAAAAAAA7KgEAAAAAAAAAAAA7KgEAAAAAADwqAQAAAAAAAAAAADwqAQAAAAAAPSoBAAAAAAAAAAAAPSoBAAAAAAA+KgEAAAAAAAAAAAA+KgEAAAAAAD8qAQAAAAAAAAAAAD8qAQAAAAAAQCoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANioBAAAAAAA2KgEAAAAAAAAAAAAAAPC/"
				],
				[
					1449,
					1,
					"insert",
					{
						"characters": " +="
					},
					"AwAAAEAqAQAAAAAAQSoBAAAAAAAAAAAAQSoBAAAAAABCKgEAAAAAAAAAAABCKgEAAAAAAEMqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQCoBAAAAAABAKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1450,
					1,
					"insert",
					{
						"characters": " bonus"
					},
					"BgAAAEMqAQAAAAAARCoBAAAAAAAAAAAARCoBAAAAAABFKgEAAAAAAAAAAABFKgEAAAAAAEYqAQAAAAAAAAAAAEYqAQAAAAAARyoBAAAAAAAAAAAARyoBAAAAAABIKgEAAAAAAAAAAABIKgEAAAAAAEkqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQyoBAAAAAABDKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1456,
					1,
					"insert",
					{
						"characters": "int"
					},
					"AwAAAA0qAQAAAAAADioBAAAAAAAAAAAADioBAAAAAAAPKgEAAAAAAAAAAAAPKgEAAAAAABAqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADSoBAAAAAAANKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1457,
					3,
					"left_delete",
					null,
					"AwAAAA8qAQAAAAAADyoBAAAAAAABAAAAdA4qAQAAAAAADioBAAAAAAABAAAAbg0qAQAAAAAADSoBAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAECoBAAAAAAAQKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1460,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAABAqAQAAAAAAECoBAAAAAAABAAAAKA0qAQAAAAAADSoBAAAAAAADAAAAZjMy",
					"AQAAAAAAAAABAAAAESoBAAAAAAARKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1463,
					1,
					"left_delete",
					null,
					"AQAAABEqAQAAAAAAESoBAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAEioBAAAAAAASKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1466,
					1,
					"insert",
					{
						"characters": "int("
					},
					"BAAAAA0qAQAAAAAADioBAAAAAAAAAAAADioBAAAAAAAPKgEAAAAAAAAAAAAPKgEAAAAAABAqAQAAAAAAAAAAABAqAQAAAAAAESoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADSoBAAAAAAANKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1468,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAC8qAQAAAAAAMCoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALyoBAAAAAAAvKgEAAAAAAP///////+9/"
				],
				[
					1473,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAABsqAQAAAAAAGyoBAAAAAAABAAAAKBgqAQAAAAAAGCoBAAAAAAADAAAAZjMy",
					"AQAAAAAAAAABAAAAHCoBAAAAAAAcKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1476,
					2,
					"left_delete",
					null,
					"AgAAABQqAQAAAAAAFCoBAAAAAAABAAAAMBMqAQAAAAAAEyoBAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAFSoBAAAAAAAVKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1478,
					3,
					"left_delete",
					null,
					"AwAAAA8qAQAAAAAADyoBAAAAAAABAAAAdA4qAQAAAAAADioBAAAAAAABAAAAbg0qAQAAAAAADSoBAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAECoBAAAAAAAQKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1480,
					1,
					"left_delete",
					null,
					"AQAAAA0qAQAAAAAADSoBAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAADioBAAAAAAAOKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1483,
					3,
					"left_delete",
					null,
					"AwAAACUqAQAAAAAAJSoBAAAAAAABAAAAKSQqAQAAAAAAJCoBAAAAAAABAAAAICMqAQAAAAAAIyoBAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAJioBAAAAAAAmKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1488,
					4,
					"delete_word",
					{
						"forward": false
					},
					"BAAAANgpAQAAAAAA2CkBAAAAAAACAAAALSCuKQEAAAAAAK4pAQAAAAAAKgAAAGdsb2JhbF9jb3VudGRvd25fdGltZXJfbG9zZV9saWZlX2R1cmF0aW9uIK0pAQAAAAAArSkBAAAAAAABAAAAKKopAQAAAAAAqikBAAAAAAADAAAAaW50",
					"AQAAAAAAAAABAAAA2ikBAAAAAADaKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1490,
					1,
					"left_delete",
					null,
					"AQAAAMgpAQAAAAAAyCkBAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAySkBAAAAAADJKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1493,
					1,
					"insert",
					{
						"characters": "int("
					},
					"BAAAAKopAQAAAAAAqykBAAAAAAAAAAAAqykBAAAAAACsKQEAAAAAAAAAAACsKQEAAAAAAK0pAQAAAAAAAAAAAK0pAQAAAAAArikBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqikBAAAAAACqKQEAAAAAAAAAAAAAAPC/"
				],
				[
					1498,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAMwpAQAAAAAAzSkBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzCkBAAAAAADMKQEAAAAAAP///////+9/"
				],
				[
					1508,
					1,
					"insert",
					{
						"characters": "\nelse"
					},
					"BQAAANfeAAAAAAAA2t4AAAAAAAAAAAAA2t4AAAAAAADb3gAAAAAAAAAAAADb3gAAAAAAANzeAAAAAAAAAAAAANzeAAAAAAAA3d4AAAAAAAAAAAAA3d4AAAAAAADe3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA194AAAAAAADX3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1509,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAAN7eAAAAAAAA394AAAAAAAAAAAAA394AAAAAAADg3gAAAAAAAAAAAADg3gAAAAAAAOHeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3t4AAAAAAADe3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1510,
					1,
					"insert",
					{
						"characters": " rl.IsKeyt"
					},
					"CgAAAOHeAAAAAAAA4t4AAAAAAAAAAAAA4t4AAAAAAADj3gAAAAAAAAAAAADj3gAAAAAAAOTeAAAAAAAAAAAAAOTeAAAAAAAA5d4AAAAAAAAAAAAA5d4AAAAAAADm3gAAAAAAAAAAAADm3gAAAAAAAOfeAAAAAAAAAAAAAOfeAAAAAAAA6N4AAAAAAAAAAAAA6N4AAAAAAADp3gAAAAAAAAAAAADp3gAAAAAAAOreAAAAAAAAAAAAAOreAAAAAAAA694AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4d4AAAAAAADh3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1511,
					1,
					"left_delete",
					null,
					"AQAAAOreAAAAAAAA6t4AAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA694AAAAAAADr3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1512,
					1,
					"insert",
					{
						"characters": "Pressed"
					},
					"BwAAAOreAAAAAAAA694AAAAAAAAAAAAA694AAAAAAADs3gAAAAAAAAAAAADs3gAAAAAAAO3eAAAAAAAAAAAAAO3eAAAAAAAA7t4AAAAAAAAAAAAA7t4AAAAAAADv3gAAAAAAAAAAAADv3gAAAAAAAPDeAAAAAAAAAAAAAPDeAAAAAAAA8d4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6t4AAAAAAADq3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1513,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPHeAAAAAAAA894AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8d4AAAAAAADx3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1514,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAPLeAAAAAAAA894AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8t4AAAAAAADy3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1515,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAAPPeAAAAAAAA9N4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA894AAAAAAADz3gAAAAAAAAAAAAAAAPC/"
				],
				[
					1517,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPXeAAAAAAAA+N4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9d4AAAAAAAD13gAAAAAAAAAAAAAAAPC/"
				],
				[
					1518,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPjeAAAAAAAA+t4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+N4AAAAAAAD43gAAAAAAAAAAAAAAAPC/"
				],
				[
					1519,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAAPneAAAAAAAA/N4AAAAAAAAAAAAA/N4AAAAAAAD/3gAAAAAAAAAAAAD63gAAAAAAAPreAAAAAAAAAgAAAAkJ+t4AAAAAAAD93gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+d4AAAAAAAD53gAAAAAAAAAAAAAAAPC/"
				],
				[
					1520,
					1,
					"insert",
					{
						"characters": "gmem.root_st"
					},
					"DAAAAP3eAAAAAAAA/t4AAAAAAAAAAAAA/t4AAAAAAAD/3gAAAAAAAAAAAAD/3gAAAAAAAADfAAAAAAAAAAAAAADfAAAAAAAAAd8AAAAAAAAAAAAAAd8AAAAAAAAC3wAAAAAAAAAAAAAC3wAAAAAAAAPfAAAAAAAAAAAAAAPfAAAAAAAABN8AAAAAAAAAAAAABN8AAAAAAAAF3wAAAAAAAAAAAAAF3wAAAAAAAAbfAAAAAAAAAAAAAAbfAAAAAAAAB98AAAAAAAAAAAAAB98AAAAAAAAI3wAAAAAAAAAAAAAI3wAAAAAAAAnfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/d4AAAAAAAD93gAAAAAAAAAAAAAAAPC/"
				],
				[
					1521,
					1,
					"insert",
					{
						"characters": "ate"
					},
					"AwAAAAnfAAAAAAAACt8AAAAAAAAAAAAACt8AAAAAAAAL3wAAAAAAAAAAAAAL3wAAAAAAAAzfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACd8AAAAAAAAJ3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1522,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAzfAAAAAAAADd8AAAAAAAAAAAAADd8AAAAAAAAO3wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADN8AAAAAAAAM3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1523,
					1,
					"insert",
					{
						"characters": " .Main_Men"
					},
					"CgAAAA7fAAAAAAAAD98AAAAAAAAAAAAAD98AAAAAAAAQ3wAAAAAAAAAAAAAQ3wAAAAAAABHfAAAAAAAAAAAAABHfAAAAAAAAEt8AAAAAAAAAAAAAEt8AAAAAAAAT3wAAAAAAAAAAAAAT3wAAAAAAABTfAAAAAAAAAAAAABTfAAAAAAAAFd8AAAAAAAAAAAAAFd8AAAAAAAAW3wAAAAAAAAAAAAAW3wAAAAAAABffAAAAAAAAAAAAABffAAAAAAAAGN8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADt8AAAAAAAAO3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1524,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAABjfAAAAAAAAGd8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGN8AAAAAAAAY3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1527,
					1,
					"insert",
					{
						"characters": "\n\nenter_main"
					},
					"DAAAAOTXAAAAAAAA5dcAAAAAAAAAAAAA5dcAAAAAAADm1wAAAAAAAAAAAADm1wAAAAAAAOfXAAAAAAAAAAAAAOfXAAAAAAAA6NcAAAAAAAAAAAAA6NcAAAAAAADp1wAAAAAAAAAAAADp1wAAAAAAAOrXAAAAAAAAAAAAAOrXAAAAAAAA69cAAAAAAAAAAAAA69cAAAAAAADs1wAAAAAAAAAAAADs1wAAAAAAAO3XAAAAAAAAAAAAAO3XAAAAAAAA7tcAAAAAAAAAAAAA7tcAAAAAAADv1wAAAAAAAAAAAADv1wAAAAAAAPDXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5NcAAAAAAADk1wAAAAAAAAAAAAAAAPC/"
				],
				[
					1528,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAObXAAAAAAAA5tcAAAAAAAAKAAAAZW50ZXJfbWFpbg",
					"AQAAAAAAAAABAAAA8NcAAAAAAADw1wAAAAAAAAAAAAAAAPC/"
				],
				[
					1529,
					1,
					"insert",
					{
						"characters": "root_state_enter"
					},
					"EAAAAObXAAAAAAAA59cAAAAAAAAAAAAA59cAAAAAAADo1wAAAAAAAAAAAADo1wAAAAAAAOnXAAAAAAAAAAAAAOnXAAAAAAAA6tcAAAAAAAAAAAAA6tcAAAAAAADr1wAAAAAAAAAAAADr1wAAAAAAAOzXAAAAAAAAAAAAAOzXAAAAAAAA7dcAAAAAAAAAAAAA7dcAAAAAAADu1wAAAAAAAAAAAADu1wAAAAAAAO/XAAAAAAAAAAAAAO/XAAAAAAAA8NcAAAAAAAAAAAAA8NcAAAAAAADx1wAAAAAAAAAAAADx1wAAAAAAAPLXAAAAAAAAAAAAAPLXAAAAAAAA89cAAAAAAAAAAAAA89cAAAAAAAD01wAAAAAAAAAAAAD01wAAAAAAAPXXAAAAAAAAAAAAAPXXAAAAAAAA9tcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5tcAAAAAAADm1wAAAAAAAAAAAAAAAPC/"
				],
				[
					1530,
					5,
					"left_delete",
					null,
					"BQAAAPXXAAAAAAAA9dcAAAAAAAABAAAAcvTXAAAAAAAA9NcAAAAAAAABAAAAZfPXAAAAAAAA89cAAAAAAAABAAAAdPLXAAAAAAAA8tcAAAAAAAABAAAAbvHXAAAAAAAA8dcAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA9tcAAAAAAAD21wAAAAAAAAAAAAAAAPC/"
				],
				[
					1531,
					1,
					"insert",
					{
						"characters": "main_menu_ent"
					},
					"DQAAAPHXAAAAAAAA8tcAAAAAAAAAAAAA8tcAAAAAAADz1wAAAAAAAAAAAADz1wAAAAAAAPTXAAAAAAAAAAAAAPTXAAAAAAAA9dcAAAAAAAAAAAAA9dcAAAAAAAD21wAAAAAAAAAAAAD21wAAAAAAAPfXAAAAAAAAAAAAAPfXAAAAAAAA+NcAAAAAAAAAAAAA+NcAAAAAAAD51wAAAAAAAAAAAAD51wAAAAAAAPrXAAAAAAAAAAAAAPrXAAAAAAAA+9cAAAAAAAAAAAAA+9cAAAAAAAD81wAAAAAAAAAAAAD81wAAAAAAAP3XAAAAAAAAAAAAAP3XAAAAAAAA/tcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8dcAAAAAAADx1wAAAAAAAAAAAAAAAPC/"
				],
				[
					1532,
					1,
					"insert",
					{
						"characters": "er"
					},
					"AgAAAP7XAAAAAAAA/9cAAAAAAAAAAAAA/9cAAAAAAAAA2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/tcAAAAAAAD+1wAAAAAAAAAAAAAAAPC/"
				],
				[
					1533,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAAADYAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAC2AAAAAAAAAAAAAAC2AAAAAAAAAPYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAPC/"
				],
				[
					1534,
					1,
					"insert",
					{
						"characters": " proc"
					},
					"BQAAAAPYAAAAAAAABNgAAAAAAAAAAAAABNgAAAAAAAAF2AAAAAAAAAAAAAAF2AAAAAAAAAbYAAAAAAAAAAAAAAbYAAAAAAAAB9gAAAAAAAAAAAAAB9gAAAAAAAAI2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAA9gAAAAAAAAD2AAAAAAAAAAAAAAAAPC/"
				],
				[
					1535,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAjYAAAAAAAACtgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACNgAAAAAAAAI2AAAAAAAAAAAAAAAAPC/"
				],
				[
					1537,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAArYAAAAAAAAC9gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACtgAAAAAAAAK2AAAAAAAAAAAAAAAAPC/"
				],
				[
					1538,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAvYAAAAAAAADdgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAC9gAAAAAAAAL2AAAAAAAAAAAAAAAAPC/"
				],
				[
					1539,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAAzYAAAAAAAADdgAAAAAAAAAAAAADdgAAAAAAAAO2AAAAAAAAAAAAAAN2AAAAAAAAA7YAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADNgAAAAAAAAM2AAAAAAAAAAAAAAAAPC/"
				],
				[
					1561,
					1,
					"insert",
					{
						"characters": "\nroot_state_"
					},
					"DQAAAJgAAQAAAAAAngABAAAAAAAAAAAADdgAAAAAAAAN2AAAAAAAAAEAAAAJnQABAAAAAACeAAEAAAAAAAAAAACeAAEAAAAAAJ8AAQAAAAAAAAAAAJ8AAQAAAAAAoAABAAAAAAAAAAAAoAABAAAAAAChAAEAAAAAAAAAAAChAAEAAAAAAKIAAQAAAAAAAAAAAKIAAQAAAAAAowABAAAAAAAAAAAAowABAAAAAACkAAEAAAAAAAAAAACkAAEAAAAAAKUAAQAAAAAAAAAAAKUAAQAAAAAApgABAAAAAAAAAAAApgABAAAAAACnAAEAAAAAAAAAAACnAAEAAAAAAKgAAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAABAAAAAACYAAEAAAAAAAAAAAAAAPC/"
				],
				[
					1562,
					1,
					"insert",
					{
						"characters": "main_menu_en"
					},
					"DAAAAKgAAQAAAAAAqQABAAAAAAAAAAAAqQABAAAAAACqAAEAAAAAAAAAAACqAAEAAAAAAKsAAQAAAAAAAAAAAKsAAQAAAAAArAABAAAAAAAAAAAArAABAAAAAACtAAEAAAAAAAAAAACtAAEAAAAAAK4AAQAAAAAAAAAAAK4AAQAAAAAArwABAAAAAAAAAAAArwABAAAAAACwAAEAAAAAAAAAAACwAAEAAAAAALEAAQAAAAAAAAAAALEAAQAAAAAAsgABAAAAAAAAAAAAsgABAAAAAACzAAEAAAAAAAAAAACzAAEAAAAAALQAAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAABAAAAAACoAAEAAAAAAAAAAAAAAPC/"
				],
				[
					1563,
					1,
					"insert",
					{
						"characters": "ter"
					},
					"AwAAALQAAQAAAAAAtQABAAAAAAAAAAAAtQABAAAAAAC2AAEAAAAAAAAAAAC2AAEAAAAAALcAAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAABAAAAAAC0AAEAAAAAAAAAAAAAAPC/"
				],
				[
					1564,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALcAAQAAAAAAuQABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwABAAAAAAC3AAEAAAAAAAAAAAAAAPC/"
				],
				[
					1569,
					1,
					"cut",
					null,
					"AQAAAL8AAQAAAAAAvwABAAAAAACzAAAAZ21lbS5yb290X3N0YXRlID0gLk1haW5fTWVudQoJCQkJCWdtZW0ubGV2ZWxfaW5kZXggPSAwCgkJCQkJZm9yICZpc19mcm9nX29uX2xpbHlwYWQgaW4gZ21lbS5pc19mcm9nc19vbl9saWx5cGFkcwoJCQkJCXsKCQkJCQkJaXNfZnJvZ19vbl9saWx5cGFkID0gZmFsc2UKCQkJCQl9CgkJCQkJZ21lbS5zY29yZSA9IDA",
					"AQAAAAAAAAABAAAAcgEBAAAAAAC/AAEAAAAAAAAAAAAAAPC/"
				],
				[
					1570,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAALoAAQAAAAAAugABAAAAAAAFAAAACQkJCQm5AAEAAAAAALkAAQAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAvwABAAAAAAC/AAEAAAAAAAAAAAAAAPC/"
				],
				[
					1581,
					1,
					"paste_and_indent",
					null,
					"AQAAAA3YAAAAAAAAqdgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADdgAAAAAAAAN2AAAAAAAAAAAAAAAACBA"
				],
				[
					1585,
					1,
					"insert",
					{
						"characters": "\nfrogger_reset"
					},
					"DgAAAAzYAAAAAAAADtgAAAAAAAAAAAAADtgAAAAAAAAP2AAAAAAAAAAAAAAP2AAAAAAAABDYAAAAAAAAAAAAABDYAAAAAAAAEdgAAAAAAAAAAAAAEdgAAAAAAAAS2AAAAAAAAAAAAAAS2AAAAAAAABPYAAAAAAAAAAAAABPYAAAAAAAAFNgAAAAAAAAAAAAAFNgAAAAAAAAV2AAAAAAAAAAAAAAV2AAAAAAAABbYAAAAAAAAAAAAABbYAAAAAAAAF9gAAAAAAAAAAAAAF9gAAAAAAAAY2AAAAAAAAAAAAAAY2AAAAAAAABnYAAAAAAAAAAAAABnYAAAAAAAAGtgAAAAAAAAAAAAAGtgAAAAAAAAb2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADNgAAAAAAAAM2AAAAAAAAAAAAAAAAPC/"
				],
				[
					1586,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABvYAAAAAAAAHdgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAG9gAAAAAAAAb2AAAAAAAAAAAAAAAAPC/"
				],
				[
					1596,
					2,
					"left_delete",
					null,
					"AgAAANbfAAAAAAAA1t8AAAAAAAAbAAAAbWVtLnJvb3Rfc3RhdGUgPSAuTWFpbl9NZW511d8AAAAAAADV3wAAAAAAAAEAAABn",
					"AQAAAAAAAAABAAAA8d8AAAAAAADW3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1597,
					1,
					"insert",
					{
						"characters": "root_state"
					},
					"CgAAANXfAAAAAAAA1t8AAAAAAAAAAAAA1t8AAAAAAADX3wAAAAAAAAAAAADX3wAAAAAAANjfAAAAAAAAAAAAANjfAAAAAAAA2d8AAAAAAAAAAAAA2d8AAAAAAADa3wAAAAAAAAAAAADa3wAAAAAAANvfAAAAAAAAAAAAANvfAAAAAAAA3N8AAAAAAAAAAAAA3N8AAAAAAADd3wAAAAAAAAAAAADd3wAAAAAAAN7fAAAAAAAAAAAAAN7fAAAAAAAA398AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1d8AAAAAAADV3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1598,
					1,
					"insert",
					{
						"characters": "_main_menu_"
					},
					"CwAAAN/fAAAAAAAA4N8AAAAAAAAAAAAA4N8AAAAAAADh3wAAAAAAAAAAAADh3wAAAAAAAOLfAAAAAAAAAAAAAOLfAAAAAAAA498AAAAAAAAAAAAA498AAAAAAADk3wAAAAAAAAAAAADk3wAAAAAAAOXfAAAAAAAAAAAAAOXfAAAAAAAA5t8AAAAAAAAAAAAA5t8AAAAAAADn3wAAAAAAAAAAAADn3wAAAAAAAOjfAAAAAAAAAAAAAOjfAAAAAAAA6d8AAAAAAAAAAAAA6d8AAAAAAADq3wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA398AAAAAAADf3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1599,
					1,
					"insert",
					{
						"characters": "enter"
					},
					"BQAAAOrfAAAAAAAA698AAAAAAAAAAAAA698AAAAAAADs3wAAAAAAAAAAAADs3wAAAAAAAO3fAAAAAAAAAAAAAO3fAAAAAAAA7t8AAAAAAAAAAAAA7t8AAAAAAADv3wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6t8AAAAAAADq3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1600,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAO/fAAAAAAAA8d8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA798AAAAAAADv3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1601,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAPDfAAAAAAAA8d8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8N8AAAAAAADw3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1603,
					1,
					"left_delete",
					null,
					"AQAAAPDfAAAAAAAA8N8AAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA8d8AAAAAAADx3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1614,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"BwAAAPHfAAAAAAAA9d8AAAAAAAAAAAAA9d8AAAAAAAD23wAAAAAAAAAAAAD23wAAAAAAAPffAAAAAAAAAAAAAPffAAAAAAAA+N8AAAAAAAAAAAAA+N8AAAAAAAD53wAAAAAAAAAAAAD53wAAAAAAAPrfAAAAAAAAAAAAAPrfAAAAAAAA+98AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8d8AAAAAAADx3wAAAAAAAAAAAAAAAPC/"
				],
				[
					1624,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAF4qAQAAAAAAXyoBAAAAAAAAAAAAXyoBAAAAAABgKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXioBAAAAAABeKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1625,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAGAqAQAAAAAAYSoBAAAAAAAAAAAAYSoBAAAAAABiKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYCoBAAAAAABgKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1630,
					1,
					"reindent",
					null,
					"AQAAACAqAQAAAAAAJSoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAICoBAAAAAAAgKgEAAAAAAAAAAAAAoGVA"
				],
				[
					1631,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"BAAAACUqAQAAAAAAKyoBAAAAAAAAAAAAICoBAAAAAAAgKgEAAAAAAAUAAAAJCQkJCSYqAQAAAAAAJyoBAAAAAAAAAAAAJyoBAAAAAAAoKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJSoBAAAAAAAlKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1632,
					1,
					"insert",
					{
						"characters": " so"
					},
					"AwAAACgqAQAAAAAAKSoBAAAAAAAAAAAAKSoBAAAAAAAqKgEAAAAAAAAAAAAqKgEAAAAAACsqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKCoBAAAAAAAoKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1633,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAACsqAQAAAAAALCoBAAAAAAAAAAAALCoBAAAAAAAtKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKyoBAAAAAAArKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1634,
					1,
					"insert",
					{
						"characters": " think"
					},
					"BgAAAC0qAQAAAAAALioBAAAAAAAAAAAALioBAAAAAAAvKgEAAAAAAAAAAAAvKgEAAAAAADAqAQAAAAAAAAAAADAqAQAAAAAAMSoBAAAAAAAAAAAAMSoBAAAAAAAyKgEAAAAAAAAAAAAyKgEAAAAAADMqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALSoBAAAAAAAtKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1635,
					1,
					"insert",
					{
						"characters": " frogger"
					},
					"CAAAADMqAQAAAAAANCoBAAAAAAAAAAAANCoBAAAAAAA1KgEAAAAAAAAAAAA1KgEAAAAAADYqAQAAAAAAAAAAADYqAQAAAAAANyoBAAAAAAAAAAAANyoBAAAAAAA4KgEAAAAAAAAAAAA4KgEAAAAAADkqAQAAAAAAAAAAADkqAQAAAAAAOioBAAAAAAAAAAAAOioBAAAAAAA7KgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMyoBAAAAAAAzKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1636,
					1,
					"insert",
					{
						"characters": " counts"
					},
					"BwAAADsqAQAAAAAAPCoBAAAAAAAAAAAAPCoBAAAAAAA9KgEAAAAAAAAAAAA9KgEAAAAAAD4qAQAAAAAAAAAAAD4qAQAAAAAAPyoBAAAAAAAAAAAAPyoBAAAAAABAKgEAAAAAAAAAAABAKgEAAAAAAEEqAQAAAAAAAAAAAEEqAQAAAAAAQioBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOyoBAAAAAAA7KgEAAAAAAAAAAAAAAPC/"
				],
				[
					1637,
					1,
					"insert",
					{
						"characters": " two"
					},
					"BAAAAEIqAQAAAAAAQyoBAAAAAAAAAAAAQyoBAAAAAABEKgEAAAAAAAAAAABEKgEAAAAAAEUqAQAAAAAAAAAAAEUqAQAAAAAARioBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQioBAAAAAABCKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1638,
					1,
					"insert",
					{
						"characters": " ticks"
					},
					"BgAAAEYqAQAAAAAARyoBAAAAAAAAAAAARyoBAAAAAABIKgEAAAAAAAAAAABIKgEAAAAAAEkqAQAAAAAAAAAAAEkqAQAAAAAASioBAAAAAAAAAAAASioBAAAAAABLKgEAAAAAAAAAAABLKgEAAAAAAEwqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARioBAAAAAABGKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1639,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAEwqAQAAAAAATSoBAAAAAAAAAAAATSoBAAAAAABOKgEAAAAAAAAAAABOKgEAAAAAAE8qAQAAAAAAAAAAAE8qAQAAAAAAUCoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATCoBAAAAAABMKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1640,
					1,
					"insert",
					{
						"characters": " every"
					},
					"BgAAAFAqAQAAAAAAUSoBAAAAAAAAAAAAUSoBAAAAAABSKgEAAAAAAAAAAABSKgEAAAAAAFMqAQAAAAAAAAAAAFMqAQAAAAAAVCoBAAAAAAAAAAAAVCoBAAAAAABVKgEAAAAAAAAAAABVKgEAAAAAAFYqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUCoBAAAAAABQKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1641,
					1,
					"insert",
					{
						"characters": " second?"
					},
					"CAAAAFYqAQAAAAAAVyoBAAAAAAAAAAAAVyoBAAAAAABYKgEAAAAAAAAAAABYKgEAAAAAAFkqAQAAAAAAAAAAAFkqAQAAAAAAWioBAAAAAAAAAAAAWioBAAAAAABbKgEAAAAAAAAAAABbKgEAAAAAAFwqAQAAAAAAAAAAAFwqAQAAAAAAXSoBAAAAAAAAAAAAXSoBAAAAAABeKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVioBAAAAAABWKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1642,
					1,
					"insert",
					{
						"characters": " based"
					},
					"BgAAAF4qAQAAAAAAXyoBAAAAAAAAAAAAXyoBAAAAAABgKgEAAAAAAAAAAABgKgEAAAAAAGEqAQAAAAAAAAAAAGEqAQAAAAAAYioBAAAAAAAAAAAAYioBAAAAAABjKgEAAAAAAAAAAABjKgEAAAAAAGQqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXioBAAAAAABeKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1643,
					1,
					"insert",
					{
						"characters": " on"
					},
					"AwAAAGQqAQAAAAAAZSoBAAAAAAAAAAAAZSoBAAAAAABmKgEAAAAAAAAAAABmKgEAAAAAAGcqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZCoBAAAAAABkKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1644,
					1,
					"insert",
					{
						"characters": " timign"
					},
					"BwAAAGcqAQAAAAAAaCoBAAAAAAAAAAAAaCoBAAAAAABpKgEAAAAAAAAAAABpKgEAAAAAAGoqAQAAAAAAAAAAAGoqAQAAAAAAayoBAAAAAAAAAAAAayoBAAAAAABsKgEAAAAAAAAAAABsKgEAAAAAAG0qAQAAAAAAAAAAAG0qAQAAAAAAbioBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZyoBAAAAAABnKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1645,
					2,
					"left_delete",
					null,
					"AgAAAG0qAQAAAAAAbSoBAAAAAAABAAAAbmwqAQAAAAAAbCoBAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAbioBAAAAAABuKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1646,
					1,
					"insert",
					{
						"characters": "ng"
					},
					"AgAAAGwqAQAAAAAAbSoBAAAAAAAAAAAAbSoBAAAAAABuKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbCoBAAAAAABsKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1647,
					1,
					"insert",
					{
						"characters": " an"
					},
					"AwAAAG4qAQAAAAAAbyoBAAAAAAAAAAAAbyoBAAAAAABwKgEAAAAAAAAAAABwKgEAAAAAAHEqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbioBAAAAAABuKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1648,
					1,
					"insert",
					{
						"characters": " emulated"
					},
					"CQAAAHEqAQAAAAAAcioBAAAAAAAAAAAAcioBAAAAAABzKgEAAAAAAAAAAABzKgEAAAAAAHQqAQAAAAAAAAAAAHQqAQAAAAAAdSoBAAAAAAAAAAAAdSoBAAAAAAB2KgEAAAAAAAAAAAB2KgEAAAAAAHcqAQAAAAAAAAAAAHcqAQAAAAAAeCoBAAAAAAAAAAAAeCoBAAAAAAB5KgEAAAAAAAAAAAB5KgEAAAAAAHoqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcSoBAAAAAABxKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1649,
					1,
					"insert",
					{
						"characters": " version"
					},
					"CAAAAHoqAQAAAAAAeyoBAAAAAAAAAAAAeyoBAAAAAAB8KgEAAAAAAAAAAAB8KgEAAAAAAH0qAQAAAAAAAAAAAH0qAQAAAAAAfioBAAAAAAAAAAAAfioBAAAAAAB/KgEAAAAAAAAAAAB/KgEAAAAAAIAqAQAAAAAAAAAAAIAqAQAAAAAAgSoBAAAAAAAAAAAAgSoBAAAAAACCKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeioBAAAAAAB6KgEAAAAAAAAAAAAAAPC/"
				],
				[
					1652,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAACZjAQAAAAAAKWMBAAAAAAAAAAAAKWMBAAAAAAAsYwEAAAAAAAAAAAAnYwEAAAAAACdjAQAAAAAAAgAAAAkJ",
					"AQAAAAAAAAABAAAAJmMBAAAAAAAmYwEAAAAAAAAAAAAAAPC/"
				],
				[
					1653,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACpjAQAAAAAALGMBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKmMBAAAAAAAqYwEAAAAAAAAAAAAAAPC/"
				],
				[
					1654,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAACtjAQAAAAAALmMBAAAAAAAAAAAALmMBAAAAAAAxYwEAAAAAAAAAAAAsYwEAAAAAACxjAQAAAAAAAgAAAAkJLGMBAAAAAAAvYwEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAK2MBAAAAAAArYwEAAAAAAAAAAAAAAPC/"
				],
				[
					1656,
					1,
					"insert",
					{
						"characters": " //"
					},
					"BAAAACtjAQAAAAAALGMBAAAAAAAAAAAALWMBAAAAAAAtYwEAAAAAAAMAAAAJCQksYwEAAAAAAC1jAQAAAAAAAAAAAC1jAQAAAAAALmMBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAK2MBAAAAAAArYwEAAAAAAAAAAAAAwFhA"
				],
				[
					1657,
					1,
					"insert",
					{
						"characters": " draw"
					},
					"BQAAAC5jAQAAAAAAL2MBAAAAAAAAAAAAL2MBAAAAAAAwYwEAAAAAAAAAAAAwYwEAAAAAADFjAQAAAAAAAAAAADFjAQAAAAAAMmMBAAAAAAAAAAAAMmMBAAAAAAAzYwEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALmMBAAAAAAAuYwEAAAAAAAAAAAAAAPC/"
				],
				[
					1658,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADNjAQAAAAAANGMBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAM2MBAAAAAAAzYwEAAAAAAAAAAAAAAPC/"
				],
				[
					1659,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAC9jAQAAAAAAL2MBAAAAAAAFAAAAZHJhdyAsYwEAAAAAACxjAQAAAAAAAwAAAC8vIA",
					"AQAAAAAAAAABAAAANGMBAAAAAAA0YwEAAAAAAAAAAAAAAPC/"
				],
				[
					1661,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAACpjAQAAAAAAK2MBAAAAAAAAAAAAK2MBAAAAAAAsYwEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKmMBAAAAAAAqYwEAAAAAAAAAAAAAAPC/"
				],
				[
					1662,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACxjAQAAAAAALWMBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALGMBAAAAAAAsYwEAAAAAAAAAAAAAAPC/"
				],
				[
					1663,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAACpjAQAAAAAAKmMBAAAAAAADAAAAaWYg",
					"AQAAAAAAAAABAAAALWMBAAAAAAAtYwEAAAAAAAAAAAAAAPC/"
				],
				[
					1668,
					1,
					"insert",
					{
						"characters": "\n\nlast"
					},
					"BwAAAO8LAAAAAAAA8QsAAAAAAAAAAAAA8QsAAAAAAADzCwAAAAAAAAAAAADwCwAAAAAAAPALAAAAAAAAAQAAAAnyCwAAAAAAAPMLAAAAAAAAAAAAAPMLAAAAAAAA9AsAAAAAAAAAAAAA9AsAAAAAAAD1CwAAAAAAAAAAAAD1CwAAAAAAAPYLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wsAAAAAAADvCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1669,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPYLAAAAAAAA9wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gsAAAAAAAD2CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1670,
					1,
					"left_delete",
					null,
					"AQAAAPYLAAAAAAAA9gsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA9wsAAAAAAAD3CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1671,
					1,
					"insert",
					{
						"characters": "_time"
					},
					"BQAAAPYLAAAAAAAA9wsAAAAAAAAAAAAA9wsAAAAAAAD4CwAAAAAAAAAAAAD4CwAAAAAAAPkLAAAAAAAAAAAAAPkLAAAAAAAA+gsAAAAAAAAAAAAA+gsAAAAAAAD7CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gsAAAAAAAD2CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1672,
					4,
					"left_delete",
					null,
					"BAAAAPoLAAAAAAAA+gsAAAAAAAABAAAAZfkLAAAAAAAA+QsAAAAAAAABAAAAbfgLAAAAAAAA+AsAAAAAAAABAAAAafcLAAAAAAAA9wsAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA+wsAAAAAAAD7CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1673,
					1,
					"insert",
					{
						"characters": "completiong"
					},
					"CwAAAPcLAAAAAAAA+AsAAAAAAAAAAAAA+AsAAAAAAAD5CwAAAAAAAAAAAAD5CwAAAAAAAPoLAAAAAAAAAAAAAPoLAAAAAAAA+wsAAAAAAAAAAAAA+wsAAAAAAAD8CwAAAAAAAAAAAAD8CwAAAAAAAP0LAAAAAAAAAAAAAP0LAAAAAAAA/gsAAAAAAAAAAAAA/gsAAAAAAAD/CwAAAAAAAAAAAAD/CwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAACDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wsAAAAAAAD3CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1674,
					1,
					"left_delete",
					null,
					"AQAAAAEMAAAAAAAAAQwAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1675,
					1,
					"insert",
					{
						"characters": "_in"
					},
					"AwAAAAEMAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAADDAAAAAAAAAAAAAADDAAAAAAAAAQMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1676,
					13,
					"left_delete",
					null,
					"DQAAAAMMAAAAAAAAAwwAAAAAAAABAAAAbgIMAAAAAAAAAgwAAAAAAAABAAAAaQEMAAAAAAAAAQwAAAAAAAABAAAAXwAMAAAAAAAAAAwAAAAAAAABAAAAbv8LAAAAAAAA/wsAAAAAAAABAAAAb/4LAAAAAAAA/gsAAAAAAAABAAAAaf0LAAAAAAAA/QsAAAAAAAABAAAAdPwLAAAAAAAA/AsAAAAAAAABAAAAZfsLAAAAAAAA+wsAAAAAAAABAAAAbPoLAAAAAAAA+gsAAAAAAAABAAAAcPkLAAAAAAAA+QsAAAAAAAABAAAAbfgLAAAAAAAA+AsAAAAAAAABAAAAb/cLAAAAAAAA9wsAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAABAwAAAAAAAAEDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1677,
					1,
					"insert",
					{
						"characters": "cycle_completingo"
					},
					"EQAAAPcLAAAAAAAA+AsAAAAAAAAAAAAA+AsAAAAAAAD5CwAAAAAAAAAAAAD5CwAAAAAAAPoLAAAAAAAAAAAAAPoLAAAAAAAA+wsAAAAAAAAAAAAA+wsAAAAAAAD8CwAAAAAAAAAAAAD8CwAAAAAAAP0LAAAAAAAAAAAAAP0LAAAAAAAA/gsAAAAAAAAAAAAA/gsAAAAAAAD/CwAAAAAAAAAAAAD/CwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAABAwAAAAAAAAAAAAABAwAAAAAAAAFDAAAAAAAAAAAAAAFDAAAAAAAAAYMAAAAAAAAAAAAAAYMAAAAAAAABwwAAAAAAAAAAAAABwwAAAAAAAAIDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wsAAAAAAAD3CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1678,
					3,
					"left_delete",
					null,
					"AwAAAAcMAAAAAAAABwwAAAAAAAABAAAAbwYMAAAAAAAABgwAAAAAAAABAAAAZwUMAAAAAAAABQwAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAACAwAAAAAAAAIDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1679,
					1,
					"insert",
					{
						"characters": "on_in_secon"
					},
					"CwAAAAUMAAAAAAAABgwAAAAAAAAAAAAABgwAAAAAAAAHDAAAAAAAAAAAAAAHDAAAAAAAAAgMAAAAAAAAAAAAAAgMAAAAAAAACQwAAAAAAAAAAAAACQwAAAAAAAAKDAAAAAAAAAAAAAAKDAAAAAAAAAsMAAAAAAAAAAAAAAsMAAAAAAAADAwAAAAAAAAAAAAADAwAAAAAAAANDAAAAAAAAAAAAAANDAAAAAAAAA4MAAAAAAAAAAAAAA4MAAAAAAAADwwAAAAAAAAAAAAADwwAAAAAAAAQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQwAAAAAAAAFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1680,
					1,
					"insert",
					{
						"characters": "ds"
					},
					"AgAAABAMAAAAAAAAEQwAAAAAAAAAAAAAEQwAAAAAAAASDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAwAAAAAAAAQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1681,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAABIMAAAAAAAAEwwAAAAAAAAAAAAAEwwAAAAAAAAUDAAAAAAAAAAAAAAUDAAAAAAAABUMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgwAAAAAAAASDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1682,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABUMAAAAAAAAFgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQwAAAAAAAAVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1683,
					2,
					"left_delete",
					null,
					"AgAAABUMAAAAAAAAFQwAAAAAAAABAAAAIBQMAAAAAAAAFAwAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAFgwAAAAAAAAWDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1684,
					1,
					"insert",
					{
						"characters": " int,"
					},
					"BQAAABQMAAAAAAAAFQwAAAAAAAAAAAAAFQwAAAAAAAAWDAAAAAAAAAAAAAAWDAAAAAAAABcMAAAAAAAAAAAAABcMAAAAAAAAGAwAAAAAAAAAAAAAGAwAAAAAAAAZDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAwAAAAAAAAUDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1687,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAABgMAAAAAAAAGQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAwAAAAAAAAYDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1688,
					3,
					"left_delete",
					null,
					"AwAAABgMAAAAAAAAGAwAAAAAAAABAAAAMhcMAAAAAAAAFwwAAAAAAAABAAAAdBYMAAAAAAAAFgwAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAGQwAAAAAAAAZDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1689,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAABYMAAAAAAAAFwwAAAAAAAAAAAAAFwwAAAAAAAAYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgwAAAAAAAAWDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1697,
					1,
					"reindent",
					null,
					"AQAAADIrAQAAAAAANysBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMisBAAAAAAAyKwEAAAAAAAAAAAAAAPC/"
				],
				[
					1698,
					1,
					"insert",
					{
						"characters": "\ngmem.last"
					},
					"CwAAADcrAQAAAAAAPSsBAAAAAAAAAAAAMisBAAAAAAAyKwEAAAAAAAUAAAAJCQkJCTgrAQAAAAAAOSsBAAAAAAAAAAAAOSsBAAAAAAA6KwEAAAAAAAAAAAA6KwEAAAAAADsrAQAAAAAAAAAAADsrAQAAAAAAPCsBAAAAAAAAAAAAPCsBAAAAAAA9KwEAAAAAAAAAAAA9KwEAAAAAAD4rAQAAAAAAAAAAAD4rAQAAAAAAPysBAAAAAAAAAAAAPysBAAAAAABAKwEAAAAAAAAAAABAKwEAAAAAAEErAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANysBAAAAAAA3KwEAAAAAAAAAAAAAAPC/"
				],
				[
					1699,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":21,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "last_cycle_completion_in_seconds"
					},
					"AgAAAD0rAQAAAAAAPSsBAAAAAAAEAAAAbGFzdD0rAQAAAAAAXSsBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQSsBAAAAAABBKwEAAAAAAAAAAAAAAPC/"
				],
				[
					1700,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAF0rAQAAAAAAXisBAAAAAAAAAAAAXisBAAAAAABfKwEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXSsBAAAAAABdKwEAAAAAAAAAAAAAAPC/"
				],
				[
					1701,
					1,
					"insert",
					{
						"characters": " remainin"
					},
					"CQAAAF8rAQAAAAAAYCsBAAAAAAAAAAAAYCsBAAAAAABhKwEAAAAAAAAAAABhKwEAAAAAAGIrAQAAAAAAAAAAAGIrAQAAAAAAYysBAAAAAAAAAAAAYysBAAAAAABkKwEAAAAAAAAAAABkKwEAAAAAAGUrAQAAAAAAAAAAAGUrAQAAAAAAZisBAAAAAAAAAAAAZisBAAAAAABnKwEAAAAAAAAAAABnKwEAAAAAAGgrAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXysBAAAAAABfKwEAAAAAAAAAAAAAAPC/"
				],
				[
					1702,
					1,
					"insert",
					{
						"characters": "g_seconds"
					},
					"CQAAAGgrAQAAAAAAaSsBAAAAAAAAAAAAaSsBAAAAAABqKwEAAAAAAAAAAABqKwEAAAAAAGsrAQAAAAAAAAAAAGsrAQAAAAAAbCsBAAAAAAAAAAAAbCsBAAAAAABtKwEAAAAAAAAAAABtKwEAAAAAAG4rAQAAAAAAAAAAAG4rAQAAAAAAbysBAAAAAAAAAAAAbysBAAAAAABwKwEAAAAAAAAAAABwKwEAAAAAAHErAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaCsBAAAAAABoKwEAAAAAAAAAAAAAAPC/"
				],
				[
					1706,
					1,
					"insert",
					{
						"characters": "i32("
					},
					"BAAAAGArAQAAAAAAYSsBAAAAAAAAAAAAYSsBAAAAAABiKwEAAAAAAAAAAABiKwEAAAAAAGMrAQAAAAAAAAAAAGMrAQAAAAAAZCsBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYCsBAAAAAABgKwEAAAAAAAAAAAAAAPC/"
				],
				[
					1708,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAHUrAQAAAAAAdisBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdSsBAAAAAAB1KwEAAAAAAAAAAAAAAPC/"
				],
				[
					1712,
					1,
					"insert",
					{
						"characters": "\nlast_cyclke"
					},
					"DAAAABkMAAAAAAAAGwwAAAAAAAAAAAAAGwwAAAAAAAAcDAAAAAAAAAAAAAAcDAAAAAAAAB0MAAAAAAAAAAAAAB0MAAAAAAAAHgwAAAAAAAAAAAAAHgwAAAAAAAAfDAAAAAAAAAAAAAAfDAAAAAAAACAMAAAAAAAAAAAAACAMAAAAAAAAIQwAAAAAAAAAAAAAIQwAAAAAAAAiDAAAAAAAAAAAAAAiDAAAAAAAACMMAAAAAAAAAAAAACMMAAAAAAAAJAwAAAAAAAAAAAAAJAwAAAAAAAAlDAAAAAAAAAAAAAAlDAAAAAAAACYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQwAAAAAAAAZDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1713,
					2,
					"left_delete",
					null,
					"AgAAACUMAAAAAAAAJQwAAAAAAAABAAAAZSQMAAAAAAAAJAwAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAJgwAAAAAAAAmDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1714,
					1,
					"insert",
					{
						"characters": "e_complet"
					},
					"CQAAACQMAAAAAAAAJQwAAAAAAAAAAAAAJQwAAAAAAAAmDAAAAAAAAAAAAAAmDAAAAAAAACcMAAAAAAAAAAAAACcMAAAAAAAAKAwAAAAAAAAAAAAAKAwAAAAAAAApDAAAAAAAAAAAAAApDAAAAAAAACoMAAAAAAAAAAAAACoMAAAAAAAAKwwAAAAAAAAAAAAAKwwAAAAAAAAsDAAAAAAAAAAAAAAsDAAAAAAAAC0MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAwAAAAAAAAkDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1715,
					1,
					"insert",
					{
						"characters": "iong"
					},
					"BAAAAC0MAAAAAAAALgwAAAAAAAAAAAAALgwAAAAAAAAvDAAAAAAAAAAAAAAvDAAAAAAAADAMAAAAAAAAAAAAADAMAAAAAAAAMQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQwAAAAAAAAtDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1716,
					1,
					"left_delete",
					null,
					"AQAAADAMAAAAAAAAMAwAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAMQwAAAAAAAAxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1717,
					1,
					"insert",
					{
						"characters": "_timer"
					},
					"BgAAADAMAAAAAAAAMQwAAAAAAAAAAAAAMQwAAAAAAAAyDAAAAAAAAAAAAAAyDAAAAAAAADMMAAAAAAAAAAAAADMMAAAAAAAANAwAAAAAAAAAAAAANAwAAAAAAAA1DAAAAAAAAAAAAAA1DAAAAAAAADYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAwAAAAAAAAwDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1720,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAADYMAAAAAAAANwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgwAAAAAAAA2DAAAAAAAAAAAAAAAAHBA"
				],
				[
					1721,
					7,
					"left_delete",
					null,
					"BwAAADYMAAAAAAAANgwAAAAAAAABAAAAXDUMAAAAAAAANQwAAAAAAAABAAAAcjQMAAAAAAAANAwAAAAAAAABAAAAZTMMAAAAAAAAMwwAAAAAAAABAAAAbTIMAAAAAAAAMgwAAAAAAAABAAAAaTEMAAAAAAAAMQwAAAAAAAABAAAAdDAMAAAAAAAAMAwAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAANwwAAAAAAAA3DAAAAAAAAAAAAAAAAPC/"
				],
				[
					1723,
					1,
					"insert",
					{
						"characters": "countdown_timer"
					},
					"DwAAABsMAAAAAAAAHAwAAAAAAAAAAAAAHAwAAAAAAAAdDAAAAAAAAAAAAAAdDAAAAAAAAB4MAAAAAAAAAAAAAB4MAAAAAAAAHwwAAAAAAAAAAAAAHwwAAAAAAAAgDAAAAAAAAAAAAAAgDAAAAAAAACEMAAAAAAAAAAAAACEMAAAAAAAAIgwAAAAAAAAAAAAAIgwAAAAAAAAjDAAAAAAAAAAAAAAjDAAAAAAAACQMAAAAAAAAAAAAACQMAAAAAAAAJQwAAAAAAAAAAAAAJQwAAAAAAAAmDAAAAAAAAAAAAAAmDAAAAAAAACcMAAAAAAAAAAAAACcMAAAAAAAAKAwAAAAAAAAAAAAAKAwAAAAAAAApDAAAAAAAAAAAAAApDAAAAAAAACoMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwwAAAAAAAAbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1724,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAACoMAAAAAAAAKwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgwAAAAAAAAqDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1725,
					1,
					"insert",
					{
						"characters": "display_"
					},
					"CAAAACsMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAtDAAAAAAAAAAAAAAtDAAAAAAAAC4MAAAAAAAAAAAAAC4MAAAAAAAALwwAAAAAAAAAAAAALwwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADEMAAAAAAAAAAAAADEMAAAAAAAAMgwAAAAAAAAAAAAAMgwAAAAAAAAzDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwwAAAAAAAArDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1727,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEgMAAAAAAAASQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAwAAAAAAABIDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1728,
					1,
					"insert",
					{
						"characters": " f32,"
					},
					"BQAAAEkMAAAAAAAASgwAAAAAAAAAAAAASgwAAAAAAABLDAAAAAAAAAAAAABLDAAAAAAAAEwMAAAAAAAAAAAAAEwMAAAAAAAATQwAAAAAAAAAAAAATQwAAAAAAABODAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQwAAAAAAABJDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1729,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAE4MAAAAAAAAUAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgwAAAAAAABODAAAAAAAAAAAAAAAAPC/"
				],
				[
					1730,
					2,
					"left_delete",
					null,
					"AgAAAE8MAAAAAAAATwwAAAAAAAABAAAACU4MAAAAAAAATgwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAUAwAAAAAAABQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1738,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFEMAAAAAAAAUgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQwAAAAAAABRDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1739,
					1,
					"paste",
					null,
					"AQAAAFIMAAAAAAAAfwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgwAAAAAAABSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1741,
					1,
					"insert",
					{
						"characters": "duration_"
					},
					"CQAAAGIMAAAAAAAAYwwAAAAAAAAAAAAAYwwAAAAAAABkDAAAAAAAAAAAAABkDAAAAAAAAGUMAAAAAAAAAAAAAGUMAAAAAAAAZgwAAAAAAAAAAAAAZgwAAAAAAABnDAAAAAAAAAAAAABnDAAAAAAAAGgMAAAAAAAAAAAAAGgMAAAAAAAAaQwAAAAAAAAAAAAAaQwAAAAAAABqDAAAAAAAAAAAAABqDAAAAAAAAGsMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgwAAAAAAABiDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1743,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAIgMAAAAAAAAiQwAAAAAAAAAAAAAiQwAAAAAAACKDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAwAAAAAAACIDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1744,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIoMAAAAAAAAiwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigwAAAAAAACKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1745,
					1,
					"left_delete",
					null,
					"AQAAAIoMAAAAAAAAigwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAiwwAAAAAAACLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1746,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAIoMAAAAAAAAiwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigwAAAAAAACKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1747,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAIsMAAAAAAAAjAwAAAAAAAAAAAAAjAwAAAAAAACNDAAAAAAAAAAAAACNDAAAAAAAAI4MAAAAAAAAAAAAAI4MAAAAAAAAjwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwwAAAAAAACLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1748,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI8MAAAAAAAAkQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwwAAAAAAACPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1749,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAI8MAAAAAAAAjwwAAAAAAAABAAAAKIwMAAAAAAAAjAwAAAAAAAADAAAAZjMy",
					"AQAAAAAAAAABAAAAkAwAAAAAAACQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1750,
					2,
					"left_delete",
					null,
					"AgAAAIsMAAAAAAAAiwwAAAAAAAABAAAAIIoMAAAAAAAAigwAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAjAwAAAAAAACMDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1751,
					1,
					"insert",
					{
						"characters": "f32"
					},
					"AwAAAIoMAAAAAAAAiwwAAAAAAAAAAAAAiwwAAAAAAACMDAAAAAAAAAAAAACMDAAAAAAAAI0MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigwAAAAAAACKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1752,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAI0MAAAAAAAAjgwAAAAAAAAAAAAAjgwAAAAAAACPDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQwAAAAAAACNDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1754,
					1,
					"left_delete",
					null,
					"AQAAAI8MAAAAAAAAjwwAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAkAwAAAAAAACQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1757,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIoMAAAAAAAAiwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigwAAAAAAACKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1759,
					1,
					"insert",
					{
						"characters": " 6"
					},
					"AgAAAJAMAAAAAAAAkQwAAAAAAAAAAAAAkQwAAAAAAACSDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAwAAAAAAACQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1760,
					1,
					"insert",
					{
						"characters": ".0"
					},
					"AgAAAJIMAAAAAAAAkwwAAAAAAAAAAAAAkwwAAAAAAACUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgwAAAAAAACSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1790,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAMEqAQAAAAAAxyoBAAAAAAAAAAAAxyoBAAAAAADNKgEAAAAAAAAAAADCKgEAAAAAAMIqAQAAAAAABQAAAAkJCQkJ",
					"AQAAAAAAAAABAAAAwSoBAAAAAADBKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1791,
					1,
					"insert",
					{
						"characters": "gmem.countdown"
					},
					"DgAAAMgqAQAAAAAAySoBAAAAAAAAAAAAySoBAAAAAADKKgEAAAAAAAAAAADKKgEAAAAAAMsqAQAAAAAAAAAAAMsqAQAAAAAAzCoBAAAAAAAAAAAAzCoBAAAAAADNKgEAAAAAAAAAAADNKgEAAAAAAM4qAQAAAAAAAAAAAM4qAQAAAAAAzyoBAAAAAAAAAAAAzyoBAAAAAADQKgEAAAAAAAAAAADQKgEAAAAAANEqAQAAAAAAAAAAANEqAQAAAAAA0ioBAAAAAAAAAAAA0ioBAAAAAADTKgEAAAAAAAAAAADTKgEAAAAAANQqAQAAAAAAAAAAANQqAQAAAAAA1SoBAAAAAAAAAAAA1SoBAAAAAADWKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyCoBAAAAAADIKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1793,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAM0qAQAAAAAAzSoBAAAAAAAJAAAAY291bnRkb3du",
					"AQAAAAAAAAABAAAA1ioBAAAAAADWKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1794,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAM0qAQAAAAAAzioBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzSoBAAAAAADNKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1795,
					5,
					"left_delete",
					null,
					"BQAAAM0qAQAAAAAAzSoBAAAAAAABAAAAY8wqAQAAAAAAzCoBAAAAAAABAAAALssqAQAAAAAAyyoBAAAAAAABAAAAbcoqAQAAAAAAyioBAAAAAAABAAAAZckqAQAAAAAAySoBAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAzioBAAAAAADOKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1796,
					1,
					"insert",
					{
						"characters": "mem.coun"
					},
					"CAAAAMkqAQAAAAAAyioBAAAAAAAAAAAAyioBAAAAAADLKgEAAAAAAAAAAADLKgEAAAAAAMwqAQAAAAAAAAAAAMwqAQAAAAAAzSoBAAAAAAAAAAAAzSoBAAAAAADOKgEAAAAAAAAAAADOKgEAAAAAAM8qAQAAAAAAAAAAAM8qAQAAAAAA0CoBAAAAAAAAAAAA0CoBAAAAAADRKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAySoBAAAAAADJKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1805,
					1,
					"insert",
					{
						"characters": "\ngmem.c"
					},
					"BwAAAFyiAAAAAAAAXaIAAAAAAAAAAAAAXaIAAAAAAABeogAAAAAAAAAAAABeogAAAAAAAF+iAAAAAAAAAAAAAF+iAAAAAAAAYKIAAAAAAAAAAAAAYKIAAAAAAABhogAAAAAAAAAAAABhogAAAAAAAGKiAAAAAAAAAAAAAGKiAAAAAAAAY6IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXKIAAAAAAABcogAAAAAAAAAAAAAAgGBA"
				],
				[
					1806,
					3,
					"delete_word",
					{
						"forward": false
					},
					"AwAAAGKiAAAAAAAAYqIAAAAAAAABAAAAY2GiAAAAAAAAYaIAAAAAAAABAAAALl2iAAAAAAAAXaIAAAAAAAAEAAAAZ21lbQ",
					"AQAAAAAAAAABAAAAY6IAAAAAAABjogAAAAAAAAAAAAAAAPC/"
				],
				[
					1807,
					1,
					"left_delete",
					null,
					"AQAAAFyiAAAAAAAAXKIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAXaIAAAAAAABdogAAAAAAAAAAAAAAAPC/"
				],
				[
					1813,
					1,
					"insert",
					{
						"characters": "tdowqn"
					},
					"BgAAANEqAQAAAAAA0ioBAAAAAAAAAAAA0ioBAAAAAADTKgEAAAAAAAAAAADTKgEAAAAAANQqAQAAAAAAAAAAANQqAQAAAAAA1SoBAAAAAAAAAAAA1SoBAAAAAADWKgEAAAAAAAAAAADWKgEAAAAAANcqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0SoBAAAAAADRKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1814,
					2,
					"left_delete",
					null,
					"AgAAANYqAQAAAAAA1ioBAAAAAAABAAAAbtUqAQAAAAAA1SoBAAAAAAABAAAAcQ",
					"AQAAAAAAAAABAAAA1yoBAAAAAADXKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1815,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAANUqAQAAAAAA1ioBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1SoBAAAAAADVKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1816,
					1,
					"insert",
					{
						"characters": "_timer."
					},
					"BwAAANYqAQAAAAAA1yoBAAAAAAAAAAAA1yoBAAAAAADYKgEAAAAAAAAAAADYKgEAAAAAANkqAQAAAAAAAAAAANkqAQAAAAAA2ioBAAAAAAAAAAAA2ioBAAAAAADbKgEAAAAAAAAAAADbKgEAAAAAANwqAQAAAAAAAAAAANwqAQAAAAAA3SoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1ioBAAAAAADWKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1817,
					1,
					"left_delete",
					null,
					"AQAAANwqAQAAAAAA3CoBAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA3SoBAAAAAADdKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1818,
					1,
					"insert",
					{
						"characters": "_level"
					},
					"BgAAANwqAQAAAAAA3SoBAAAAAAAAAAAA3SoBAAAAAADeKgEAAAAAAAAAAADeKgEAAAAAAN8qAQAAAAAAAAAAAN8qAQAAAAAA4CoBAAAAAAAAAAAA4CoBAAAAAADhKgEAAAAAAAAAAADhKgEAAAAAAOIqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3CoBAAAAAADcKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1819,
					5,
					"left_delete",
					null,
					"BQAAAOEqAQAAAAAA4SoBAAAAAAABAAAAbOAqAQAAAAAA4CoBAAAAAAABAAAAZd8qAQAAAAAA3yoBAAAAAAABAAAAdt4qAQAAAAAA3ioBAAAAAAABAAAAZd0qAQAAAAAA3SoBAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA4ioBAAAAAADiKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1820,
					1,
					"insert",
					{
						"characters": "display_"
					},
					"CAAAAN0qAQAAAAAA3ioBAAAAAAAAAAAA3ioBAAAAAADfKgEAAAAAAAAAAADfKgEAAAAAAOAqAQAAAAAAAAAAAOAqAQAAAAAA4SoBAAAAAAAAAAAA4SoBAAAAAADiKgEAAAAAAAAAAADiKgEAAAAAAOMqAQAAAAAAAAAAAOMqAQAAAAAA5CoBAAAAAAAAAAAA5CoBAAAAAADlKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3SoBAAAAAADdKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1821,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAOUqAQAAAAAA5ioBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5SoBAAAAAADlKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1822,
					1,
					"left_delete",
					null,
					"AQAAAOUqAQAAAAAA5SoBAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA5ioBAAAAAADmKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1823,
					1,
					"insert",
					{
						"characters": "last_cycle"
					},
					"CgAAAOUqAQAAAAAA5ioBAAAAAAAAAAAA5ioBAAAAAADnKgEAAAAAAAAAAADnKgEAAAAAAOgqAQAAAAAAAAAAAOgqAQAAAAAA6SoBAAAAAAAAAAAA6SoBAAAAAADqKgEAAAAAAAAAAADqKgEAAAAAAOsqAQAAAAAAAAAAAOsqAQAAAAAA7CoBAAAAAAAAAAAA7CoBAAAAAADtKgEAAAAAAAAAAADtKgEAAAAAAO4qAQAAAAAAAAAAAO4qAQAAAAAA7yoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5SoBAAAAAADlKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1824,
					1,
					"insert",
					{
						"characters": "_complete"
					},
					"CQAAAO8qAQAAAAAA8CoBAAAAAAAAAAAA8CoBAAAAAADxKgEAAAAAAAAAAADxKgEAAAAAAPIqAQAAAAAAAAAAAPIqAQAAAAAA8yoBAAAAAAAAAAAA8yoBAAAAAAD0KgEAAAAAAAAAAAD0KgEAAAAAAPUqAQAAAAAAAAAAAPUqAQAAAAAA9ioBAAAAAAAAAAAA9ioBAAAAAAD3KgEAAAAAAAAAAAD3KgEAAAAAAPgqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7yoBAAAAAADvKgEAAAAAAAAAAAAAAPC/"
				],
				[
					1825,
					1,
					"left_delete",
					null,
					"AQAAAPcqAQAAAAAA9yoBAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA+CoBAAAAAAD4KgEAAAAAAAAAAAAAAPC/"
				],
				[
					1826,
					1,
					"insert",
					{
						"characters": "iog"
					},
					"AwAAAPcqAQAAAAAA+CoBAAAAAAAAAAAA+CoBAAAAAAD5KgEAAAAAAAAAAAD5KgEAAAAAAPoqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9yoBAAAAAAD3KgEAAAAAAAAAAAAAAPC/"
				],
				[
					1827,
					1,
					"left_delete",
					null,
					"AQAAAPkqAQAAAAAA+SoBAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAA+ioBAAAAAAD6KgEAAAAAAAAAAAAAAPC/"
				],
				[
					1828,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAPkqAQAAAAAA+ioBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+SoBAAAAAAD5KgEAAAAAAAAAAAAAAPC/"
				],
				[
					1829,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPoqAQAAAAAA+yoBAAAAAAAAAAAA+yoBAAAAAAD8KgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+ioBAAAAAAD6KgEAAAAAAAAAAAAAAPC/"
				],
				[
					1830,
					1,
					"insert",
					{
						"characters": " global"
					},
					"BwAAAPwqAQAAAAAA/SoBAAAAAAAAAAAA/SoBAAAAAAD+KgEAAAAAAAAAAAD+KgEAAAAAAP8qAQAAAAAAAAAAAP8qAQAAAAAAACsBAAAAAAAAAAAAACsBAAAAAAABKwEAAAAAAAAAAAABKwEAAAAAAAIrAQAAAAAAAAAAAAIrAQAAAAAAAysBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/CoBAAAAAAD8KgEAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/asset_sprite_sheet.odin",
			"redo_stack":
			[
				[
					33,
					1,
					"insert",
					{
						"characters": " rl.Rectangle"
					},
					"DQAAAFUNAAAAAAAAVQ0AAAAAAAABAAAAZVQNAAAAAAAAVA0AAAAAAAABAAAAbFMNAAAAAAAAUw0AAAAAAAABAAAAZ1INAAAAAAAAUg0AAAAAAAABAAAAblENAAAAAAAAUQ0AAAAAAAABAAAAYVANAAAAAAAAUA0AAAAAAAABAAAAdE8NAAAAAAAATw0AAAAAAAABAAAAY04NAAAAAAAATg0AAAAAAAABAAAAZU0NAAAAAAAATQ0AAAAAAAABAAAAUkwNAAAAAAAATA0AAAAAAAABAAAALksNAAAAAAAASw0AAAAAAAABAAAAbEoNAAAAAAAASg0AAAAAAAABAAAAckkNAAAAAAAASQ0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAVg0AAAAAAABWDQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAEgNAAAAAAAASA0AAAAAAAABAAAAPUcNAAAAAAAARw0AAAAAAAABAAAAOkYNAAAAAAAARg0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAASQ0AAAAAAABJDQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "]f32"
					},
					"BAAAAHwMAAAAAAAAfAwAAAAAAAABAAAAMnsMAAAAAAAAewwAAAAAAAABAAAAM3oMAAAAAAAAegwAAAAAAAABAAAAZnkMAAAAAAAAeQwAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAfQwAAAAAAAB9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " [2"
					},
					"AwAAAHgMAAAAAAAAeAwAAAAAAAABAAAAMncMAAAAAAAAdwwAAAAAAAABAAAAW3YMAAAAAAAAdgwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAeQwAAAAAAAB5DAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "pos:"
					},
					"BAAAAHUMAAAAAAAAdQwAAAAAAAABAAAAOnQMAAAAAAAAdAwAAAAAAAABAAAAc3MMAAAAAAAAcwwAAAAAAAABAAAAb3IMAAAAAAAAcgwAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAdgwAAAAAAAB2DAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"delete_word",
					{
						"forward": false
					},
					"BQAAAHIMAAAAAAAAfwwAAAAAAAAAAAAAfwwAAAAAAACBDAAAAAAAAAAAAACBDAAAAAAAAIMMAAAAAAAAAAAAAIMMAAAAAAAAhAwAAAAAAAAAAAAAhAwAAAAAAACNDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgwAAAAAAAByDAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "gle"
					},
					"AwAAAFUNAAAAAAAAVQ0AAAAAAAABAAAAZVQNAAAAAAAAVA0AAAAAAAABAAAAbFMNAAAAAAAAUw0AAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAVg0AAAAAAABWDQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\ndest_rectan"
					},
					"DAAAAFINAAAAAAAAUg0AAAAAAAABAAAAblENAAAAAAAAUQ0AAAAAAAABAAAAYVANAAAAAAAAUA0AAAAAAAABAAAAdE8NAAAAAAAATw0AAAAAAAABAAAAY04NAAAAAAAATg0AAAAAAAABAAAAZU0NAAAAAAAATQ0AAAAAAAABAAAAckwNAAAAAAAATA0AAAAAAAABAAAAX0sNAAAAAAAASw0AAAAAAAABAAAAdEoNAAAAAAAASg0AAAAAAAABAAAAc0kNAAAAAAAASQ0AAAAAAAABAAAAZUgNAAAAAAAASA0AAAAAAAABAAAAZEYNAAAAAAAARg0AAAAAAAACAAAACgk",
					"AQAAAAAAAAABAAAAUw0AAAAAAABTDQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsMAAAAAAAA2wwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3AwAAAAAAADcDAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"paste",
					null,
					"AQAAALIMAAAAAAAAsgwAAAAAAAApAAAAc2NhbGVfeCA6IGYzMiA9IDEuMCwgc2NhbGVfeSA6IGYzMiA9IDEuMCw",
					"AQAAAAAAAAABAAAA2wwAAAAAAADbDAAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 3533,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "src/rlgrid/grid.odin",
			"settings":
			{
				"buffer_size": 4983,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"insert",
					{
						"characters": " scale_"
					},
					"BwAAAEsMAAAAAAAATAwAAAAAAAAAAAAATAwAAAAAAABNDAAAAAAAAAAAAABNDAAAAAAAAE4MAAAAAAAAAAAAAE4MAAAAAAAATwwAAAAAAAAAAAAATwwAAAAAAABQDAAAAAAAAAAAAABQDAAAAAAAAFEMAAAAAAAAAAAAAFEMAAAAAAAAUgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwwAAAAAAABLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAFIMAAAAAAAAUwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgwAAAAAAABSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAFMMAAAAAAAAVAwAAAAAAAAAAAAAVAwAAAAAAABVDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwwAAAAAAABTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAFUMAAAAAAAAVgwAAAAAAAAAAAAAVgwAAAAAAABXDAAAAAAAAAAAAABXDAAAAAAAAFgMAAAAAAAAAAAAAFgMAAAAAAAAWQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQwAAAAAAABVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFkMAAAAAAAAWgwAAAAAAAAAAAAAWgwAAAAAAABbDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQwAAAAAAABZDAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFsMAAAAAAAAXAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwwAAAAAAABbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAFwMAAAAAAAAXQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAwAAAAAAABcDAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAFwMAAAAAAAAXAwAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAXQwAAAAAAABdDAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "1.0,"
					},
					"BAAAAFwMAAAAAAAAXQwAAAAAAAAAAAAAXQwAAAAAAABeDAAAAAAAAAAAAABeDAAAAAAAAF8MAAAAAAAAAAAAAF8MAAAAAAAAYAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAwAAAAAAABcDAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " scale_y"
					},
					"CAAAAGAMAAAAAAAAYQwAAAAAAAAAAAAAYQwAAAAAAABiDAAAAAAAAAAAAABiDAAAAAAAAGMMAAAAAAAAAAAAAGMMAAAAAAAAZAwAAAAAAAAAAAAAZAwAAAAAAABlDAAAAAAAAAAAAABlDAAAAAAAAGYMAAAAAAAAAAAAAGYMAAAAAAAAZwwAAAAAAAAAAAAAZwwAAAAAAABoDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAwAAAAAAABgDAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAGgMAAAAAAAAaQwAAAAAAAAAAAAAaQwAAAAAAABqDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAwAAAAAAABoDAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAGoMAAAAAAAAawwAAAAAAAAAAAAAawwAAAAAAABsDAAAAAAAAAAAAABsDAAAAAAAAG0MAAAAAAAAAAAAAG0MAAAAAAAAbgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagwAAAAAAABqDAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAG4MAAAAAAAAbwwAAAAAAAAAAAAAbwwAAAAAAABwDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgwAAAAAAABuDAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " 1.0"
					},
					"BAAAAHAMAAAAAAAAcQwAAAAAAAAAAAAAcQwAAAAAAAByDAAAAAAAAAAAAAByDAAAAAAAAHMMAAAAAAAAAAAAAHMMAAAAAAAAdAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAwAAAAAAABwDAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHQMAAAAAAAAdQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAwAAAAAAAB0DAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"cut",
					null,
					"AQAAAEwMAAAAAAAATAwAAAAAAAApAAAAc2NhbGVfeCA6IGYzMiA9IDEuMCwgc2NhbGVfeSA6IGYzMiA9IDEuMCw",
					"AQAAAAAAAAABAAAAdQwAAAAAAABMDAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAAEsMAAAAAAAASwwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAATAwAAAAAAABMDAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "TODO",
			"settings":
			{
				"buffer_size": 452,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"left_delete",
					null,
					"AQAAAAYAAAAAAAAABgAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAACAAAAAAAAAAIAAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAMEA"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "~"
					},
					"AQAAACAAAAAAAAAAIQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEIAAAAAAAAAQwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAAAAAAAAAEIAAAAAAAAA////////738"
				],
				[
					10,
					1,
					"reindent",
					null,
					"AQAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDAAAAAAAAAEMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAEQAAAAAAAAARgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEUAAAAAAAAARgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAAAAAAAAAEUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAAEUAAAAAAAAARQAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGAAAAAAAAAEYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " level"
					},
					"BgAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEkAAAAAAAAAAAAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGAAAAAAAAAEYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAE4AAAAAAAAAUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOAAAAAAAAAE4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFAAAAAAAAAAUgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " level"
					},
					"BgAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAAAAAAAAAFIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFoAAAAAAAAAXAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAAAAAAAAAFoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFwAAAAAAAAAXgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcAAAAAAAAAFwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " level"
					},
					"BgAAAF4AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGEAAAAAAAAAAAAAAGEAAAAAAAAAYgAAAAAAAAAAAAAAYgAAAAAAAABjAAAAAAAAAAAAAABjAAAAAAAAAGQAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeAAAAAAAAAF4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABmAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAAAAAAAAAGQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGYAAAAAAAAAaAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAAAAAAAAAGYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AgAAAGUAAAAAAAAAZQAAAAAAAAABAAAAMmYAAAAAAAAAZgAAAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAAAAAAAAAGYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAGUAAAAAAAAAZgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlAAAAAAAAAGUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"reindent",
					null,
					"AQAAAGcAAAAAAAAAaAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnAAAAAAAAAGcAAAAAAAAAAAAAAADAXEA"
				],
				[
					36,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAGgAAAAAAAAAagAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAAAAAAAAAGgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " levle"
					},
					"BgAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqAAAAAAAAAGoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					2,
					"left_delete",
					null,
					"AgAAAG8AAAAAAAAAbwAAAAAAAAABAAAAZW4AAAAAAAAAbgAAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "evl"
					},
					"AwAAAG4AAAAAAAAAbwAAAAAAAAAAAAAAbwAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHEAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAAAAAAAAAG4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					2,
					"left_delete",
					null,
					"AgAAAHAAAAAAAAAAcAAAAAAAAAABAAAAbG8AAAAAAAAAbwAAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxAAAAAAAAAHEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAG8AAAAAAAAAcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAAAAAAAAAG8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " 4"
					},
					"AgAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHIAAAAAAAAAdAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByAAAAAAAAAHIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAHQAAAAAAAAAdgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AAAAAAAAAHQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "levl"
					},
					"BAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AAAAAAAAAHYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAAHkAAAAAAAAAeQAAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6AAAAAAAAAHoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAHkAAAAAAAAAegAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5AAAAAAAAAHkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					4,
					"left_delete",
					null,
					"BAAAAHkAAAAAAAAAeQAAAAAAAAABAAAAZXgAAAAAAAAAeAAAAAAAAAABAAAAdncAAAAAAAAAdwAAAAAAAAABAAAAZXYAAAAAAAAAdgAAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6AAAAAAAAAHoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " level"
					},
					"BgAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AAAAAAAAAHYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " 5"
					},
					"AgAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8AAAAAAAAAHwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAEUAAAAAAAAARgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAAAAAAAAAEUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAFIAAAAAAAAAUwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAAAAAAAAAFIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAF8AAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfAAAAAAAAAF8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANUAAAAAAAAA1gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVAAAAAAAAANUAAAAAAAAA////////738"
				],
				[
					69,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAANYAAAAAAAAA2AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANcAAAAAAAAA2AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAAAAAAAAANcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " frogger"
					},
					"CAAAANkAAAAAAAAA2gAAAAAAAAAAAAAA2gAAAAAAAADbAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZAAAAAAAAANkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " has"
					},
					"BAAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhAAAAAAAAAOEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " lives"
					},
					"BgAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlAAAAAAAAAOUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAAAAAAAAAOsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAO4AAAAAAAAA8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAAAAAAAAAO4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAAAAAAAAAO8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " 3"
					},
					"AgAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxAAAAAAAAAPEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " lives"
					},
					"BgAAAPMAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD1AAAAAAAAAAAAAAD1AAAAAAAAAPYAAAAAAAAAAAAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzAAAAAAAAAPMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPkAAAAAAAAA/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5AAAAAAAAAPkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPwAAAAAAAAA/gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8AAAAAAAAAPwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9AAAAAAAAAP0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " extra"
					},
					"BgAAAP8AAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAUBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/AAAAAAAAAP8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " lives"
					},
					"BgAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAgBAAAAAAAAAAAAAAgBAAAAAAAACQEAAAAAAAAAAAAACQEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAAsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAQAAAAAAAAUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " once"
					},
					"BQAAAAsBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAQAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALAQAAAAAAAAsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " re"
					},
					"AwAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABMBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQAQAAAAAAABABAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "ach"
					},
					"AwAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABYBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAQAAAAAAABMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " extra"
					},
					"BgAAABYBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABkBAAAAAAAAAAAAABkBAAAAAAAAGgEAAAAAAAAAAAAAGgEAAAAAAAAbAQAAAAAAAAAAAAAbAQAAAAAAABwBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWAQAAAAAAABYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": " life"
					},
					"BQAAABwBAAAAAAAAHQEAAAAAAAAAAAAAHQEAAAAAAAAeAQAAAAAAAAAAAAAeAQAAAAAAAB8BAAAAAAAAAAAAAB8BAAAAAAAAIAEAAAAAAAAAAAAAIAEAAAAAAAAhAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcAQAAAAAAABwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " score"
					},
					"BgAAACEBAAAAAAAAIgEAAAAAAAAAAAAAIgEAAAAAAAAjAQAAAAAAAAAAAAAjAQAAAAAAACQBAAAAAAAAAAAAACQBAAAAAAAAJQEAAAAAAAAAAAAAJQEAAAAAAAAmAQAAAAAAAAAAAAAmAQAAAAAAACcBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACcBAAAAAAAAKgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnAQAAAAAAACcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"unindent",
					null,
					"AQAAACgBAAAAAAAAKAEAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAQAAAAAAACoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACgBAAAAAAAAKgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoAQAAAAAAACgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkBAAAAAAAAKgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAQAAAAAAACkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " points"
					},
					"BwAAACsBAAAAAAAALAEAAAAAAAAAAAAALAEAAAAAAAAtAQAAAAAAAAAAAAAtAQAAAAAAAC4BAAAAAAAAAAAAAC4BAAAAAAAALwEAAAAAAAAAAAAALwEAAAAAAAAwAQAAAAAAAAAAAAAwAQAAAAAAADEBAAAAAAAAAAAAADEBAAAAAAAAMgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAQAAAAAAACsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " correctoin"
					},
					"CwAAADIBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADUBAAAAAAAAAAAAADUBAAAAAAAANgEAAAAAAAAAAAAANgEAAAAAAAA3AQAAAAAAAAAAAAA3AQAAAAAAADgBAAAAAAAAAAAAADgBAAAAAAAAOQEAAAAAAAAAAAAAOQEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADsBAAAAAAAAAAAAADsBAAAAAAAAPAEAAAAAAAAAAAAAPAEAAAAAAAA9AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAQAAAAAAADIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD0BAAAAAAAAPgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AQAAAAAAAD0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					4,
					"left_delete",
					null,
					"BAAAAD0BAAAAAAAAPQEAAAAAAAABAAAAIDwBAAAAAAAAPAEAAAAAAAABAAAAbjsBAAAAAAAAOwEAAAAAAAABAAAAaToBAAAAAAAAOgEAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "ion"
					},
					"AwAAADoBAAAAAAAAOwEAAAAAAAAAAAAAOwEAAAAAAAA8AQAAAAAAAAAAAAA8AQAAAAAAAD0BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6AQAAAAAAADoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACcBAAAAAAAAKgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnAQAAAAAAACcBAAAAAAAA////////738"
				],
				[
					112,
					1,
					"unindent",
					null,
					"AQAAACgBAAAAAAAAKAEAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAQAAAAAAACoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACgBAAAAAAAAKgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoAQAAAAAAACgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAACgBAAAAAAAAKAEAAAAAAAABAAAAWygBAAAAAAAAKAEAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAQAAAAAAACkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"reindent",
					null,
					"AQAAACgBAAAAAAAAKgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoAQAAAAAAACgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACoBAAAAAAAALAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAQAAAAAAACoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACsBAAAAAAAALAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAQAAAAAAACsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " go"
					},
					"AwAAAC0BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAADABAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAQAAAAAAAC0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " back"
					},
					"BQAAADABAAAAAAAAMQEAAAAAAAAAAAAAMQEAAAAAAAAyAQAAAAAAAAAAAAAyAQAAAAAAADMBAAAAAAAAAAAAADMBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA1AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwAQAAAAAAADABAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAADUBAAAAAAAANgEAAAAAAAAAAAAANgEAAAAAAAA3AQAAAAAAAAAAAAA3AQAAAAAAADgBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AQAAAAAAADUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " menu"
					},
					"BQAAADgBAAAAAAAAOQEAAAAAAAAAAAAAOQEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADsBAAAAAAAAAAAAADsBAAAAAAAAPAEAAAAAAAAAAAAAPAEAAAAAAAA9AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": " when"
					},
					"BQAAAD0BAAAAAAAAPgEAAAAAAAAAAAAAPgEAAAAAAAA/AQAAAAAAAAAAAAA/AQAAAAAAAEABAAAAAAAAAAAAAEABAAAAAAAAQQEAAAAAAAAAAAAAQQEAAAAAAABCAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AQAAAAAAAD0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " frogger"
					},
					"CAAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAABEAQAAAAAAAEUBAAAAAAAAAAAAAEUBAAAAAAAARgEAAAAAAAAAAAAARgEAAAAAAABHAQAAAAAAAAAAAABHAQAAAAAAAEgBAAAAAAAAAAAAAEgBAAAAAAAASQEAAAAAAAAAAAAASQEAAAAAAABKAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAQAAAAAAAEIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " dies"
					},
					"BQAAAEoBAAAAAAAASwEAAAAAAAAAAAAASwEAAAAAAABMAQAAAAAAAAAAAABMAQAAAAAAAE0BAAAAAAAAAAAAAE0BAAAAAAAATgEAAAAAAAAAAAAATgEAAAAAAABPAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAQAAAAAAAEoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAE8BAAAAAAAAUgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPAQAAAAAAAE8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFIBAAAAAAAAVAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAQAAAAAAAFIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAFIBAAAAAAAAUgEAAAAAAAABAAAAW1IBAAAAAAAAUgEAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTAQAAAAAAAFMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					2,
					"left_delete",
					null,
					"AgAAAFEBAAAAAAAAUQEAAAAAAAABAAAAIFABAAAAAAAAUAEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAQAAAAAAAFIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFABAAAAAAAAUgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAQAAAAAAAFABAAAAAAAAAAAAAAAA8L8"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " display"
					},
					"CAAAAFIBAAAAAAAAUwEAAAAAAAAAAAAAUwEAAAAAAABUAQAAAAAAAAAAAABUAQAAAAAAAFUBAAAAAAAAAAAAAFUBAAAAAAAAVgEAAAAAAAAAAAAAVgEAAAAAAABXAQAAAAAAAAAAAABXAQAAAAAAAFgBAAAAAAAAAAAAAFgBAAAAAAAAWQEAAAAAAAAAAAAAWQEAAAAAAABaAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAQAAAAAAAFIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": " game"
					},
					"BQAAAFoBAAAAAAAAWwEAAAAAAAAAAAAAWwEAAAAAAABcAQAAAAAAAAAAAABcAQAAAAAAAF0BAAAAAAAAAAAAAF0BAAAAAAAAXgEAAAAAAAAAAAAAXgEAAAAAAABfAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAQAAAAAAAFoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " over"
					},
					"BQAAAF8BAAAAAAAAYAEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAABhAQAAAAAAAGIBAAAAAAAAAAAAAGIBAAAAAAAAYwEAAAAAAAAAAAAAYwEAAAAAAABkAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfAQAAAAAAAF8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " text"
					},
					"BQAAAGQBAAAAAAAAZQEAAAAAAAAAAAAAZQEAAAAAAABmAQAAAAAAAAAAAABmAQAAAAAAAGcBAAAAAAAAAAAAAGcBAAAAAAAAaAEAAAAAAAAAAAAAaAEAAAAAAABpAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAQAAAAAAAGQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " when"
					},
					"BQAAAGkBAAAAAAAAagEAAAAAAAAAAAAAagEAAAAAAABrAQAAAAAAAAAAAABrAQAAAAAAAGwBAAAAAAAAAAAAAGwBAAAAAAAAbQEAAAAAAAAAAAAAbQEAAAAAAABuAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAQAAAAAAAGkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " frogger"
					},
					"CAAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAABwAQAAAAAAAHEBAAAAAAAAAAAAAHEBAAAAAAAAcgEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAABzAQAAAAAAAHQBAAAAAAAAAAAAAHQBAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB2AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAQAAAAAAAG4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " dies"
					},
					"BQAAAHYBAAAAAAAAdwEAAAAAAAAAAAAAdwEAAAAAAAB4AQAAAAAAAAAAAAB4AQAAAAAAAHkBAAAAAAAAAAAAAHkBAAAAAAAAegEAAAAAAAAAAAAAegEAAAAAAAB7AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AQAAAAAAAHYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFEBAAAAAAAAUgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRAQAAAAAAAFEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					144,
					3,
					"left_delete",
					null,
					"AwAAAJUBAAAAAAAAlQEAAAAAAAABAAAAXZQBAAAAAAAAlAEAAAAAAAABAAAAIJMBAAAAAAAAkwEAAAAAAAABAAAAWw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWAQAAAAAAAJYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAJIBAAAAAAAAkwEAAAAAAAAAAAAAkwEAAAAAAACUAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAQAAAAAAAJIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAJQBAAAAAAAAlQEAAAAAAAAAAAAAlQEAAAAAAACWAQAAAAAAAAAAAACWAQAAAAAAAJcBAAAAAAAAAAAAAJcBAAAAAAAAmAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAQAAAAAAAJQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": " points"
					},
					"BwAAAJgBAAAAAAAAmQEAAAAAAAAAAAAAmQEAAAAAAACaAQAAAAAAAAAAAACaAQAAAAAAAJsBAAAAAAAAAAAAAJsBAAAAAAAAnAEAAAAAAAAAAAAAnAEAAAAAAACdAQAAAAAAAAAAAACdAQAAAAAAAJ4BAAAAAAAAAAAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYAQAAAAAAAJgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": " aware"
					},
					"BgAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAAoAEAAAAAAAChAQAAAAAAAAAAAAChAQAAAAAAAKIBAAAAAAAAAAAAAKIBAAAAAAAAowEAAAAAAAAAAAAAowEAAAAAAACkAQAAAAAAAAAAAACkAQAAAAAAAKUBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfAQAAAAAAAJ8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					151,
					1,
					"left_delete",
					null,
					"AQAAAKQBAAAAAAAApAEAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClAQAAAAAAAKUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "ded"
					},
					"AwAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkAQAAAAAAAKQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAACpAQAAAAAAAKoBAAAAAAAAAAAAAKoBAAAAAAAAqwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAQAAAAAAAKcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " probably"
					},
					"CQAAAKsBAAAAAAAArAEAAAAAAAAAAAAArAEAAAAAAACtAQAAAAAAAAAAAACtAQAAAAAAAK4BAAAAAAAAAAAAAK4BAAAAAAAArwEAAAAAAAAAAAAArwEAAAAAAACwAQAAAAAAAAAAAACwAQAAAAAAALEBAAAAAAAAAAAAALEBAAAAAAAAsgEAAAAAAAAAAAAAsgEAAAAAAACzAQAAAAAAAAAAAACzAQAAAAAAALQBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrAQAAAAAAAKsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": " wrong."
					},
					"BwAAALQBAAAAAAAAtQEAAAAAAAAAAAAAtQEAAAAAAAC2AQAAAAAAAAAAAAC2AQAAAAAAALcBAAAAAAAAAAAAALcBAAAAAAAAuAEAAAAAAAAAAAAAuAEAAAAAAAC5AQAAAAAAAAAAAAC5AQAAAAAAALoBAAAAAAAAAAAAALoBAAAAAAAAuwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0AQAAAAAAALQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": " fix"
					},
					"BAAAALsBAAAAAAAAvAEAAAAAAAAAAAAAvAEAAAAAAAC9AQAAAAAAAAAAAAC9AQAAAAAAAL4BAAAAAAAAAAAAAL4BAAAAAAAAvwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AQAAAAAAALsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " it."
					},
					"BAAAAL8BAAAAAAAAwAEAAAAAAAAAAAAAwAEAAAAAAADBAQAAAAAAAAAAAADBAQAAAAAAAMIBAAAAAAAAAAAAAMIBAAAAAAAAwwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/AQAAAAAAAL8BAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "src/main_hot_reload/main_hot_reload.odin",
			"settings":
			{
				"buffer_size": 5171,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAGELAAAAAAAAZAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhCwAAAAAAAGULAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"ter",
				"Terminus: Toggle Panel"
			],
			[
				"sce",
				"UI: Select Color Scheme"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"scehem",
				"UI: Select Color Scheme"
			],
			[
				"termin",
				"Terminus: Toggle Panel"
			],
			[
				"sche",
				"UI: Select Color Scheme"
			],
			[
				"scheme",
				"UI: Select Color Scheme"
			],
			[
				"the",
				"UI: Select Theme"
			],
			[
				"them",
				"UI: Select Theme"
			],
			[
				"toggle",
				"Terminus: Toggle Panel"
			],
			[
				"lsp pre",
				"Preferences: LSP Key Bindings"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"isntall ",
				"Package Control: Install Package"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"align",
				"Preferences: Alignment Key Bindings – Default"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"package remove",
				"Package Control: Remove Package"
			],
			[
				"alignmen",
				"Preferences: Alignment Key Bindings – Default"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"term",
				"Terminus: Toggle Panel"
			],
			[
				"key ",
				"Preferences: Key Bindings"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"syntax glsl",
				"Set Syntax: GLSL"
			],
			[
				"packac",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"lsp re",
				"LSP: Restart Server"
			],
			[
				"color them",
				"UI: Select Color Scheme"
			],
			[
				"temrin",
				"Terminus: Toggle Panel"
			],
			[
				"keyb",
				"Preferences: Key Bindings"
			],
			[
				"terminus",
				"Terminus: Toggle Panel"
			],
			[
				"termn",
				"Terminus: Toggle Panel"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			],
			[
				"termi",
				"Terminus: Toggle Panel"
			],
			[
				"termiun",
				"Terminus: Toggle Panel"
			],
			[
				"ke",
				"Preferences: Key Bindings"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"packa ins",
				"Package Control: Install Package"
			],
			[
				"preferences: sett",
				"Preferences: Settings"
			],
			[
				"sidebar",
				"View: Toggle Side Bar"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"refres",
				"Project: Refresh Folders"
			],
			[
				"spl",
				"File: Split View"
			],
			[
				"split",
				"File: Split View"
			],
			[
				"terminal",
				"Terminus: Toggle Panel"
			],
			[
				"colro the",
				"UI: Select Color Scheme"
			],
			[
				"color t",
				"UI: Select Color Scheme"
			],
			[
				"terminus open",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"keybind",
				"Preferences: LSP Key Bindings"
			],
			[
				"key bin",
				"Preferences: Key Bindings"
			],
			[
				"lsp enable",
				"LSP: Enable Language Server Globally"
			],
			[
				"toggle panel",
				"LSP: Toggle Diagnostics Panel"
			],
			[
				"lsp e",
				"LSP: Restart Server"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"lsp",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp en",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp ena",
				"LSP: Enable Language Server in Project"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 136.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/johnb/source/repos/odin-frogger",
		"/C/Users/johnb/source/repos/odin-frogger/assets",
		"/C/Users/johnb/source/repos/odin-frogger/build",
		"/C/Users/johnb/source/repos/odin-frogger/build/hot_reload",
		"/C/Users/johnb/source/repos/odin-frogger/build/hot_reload/game_pdbs",
		"/C/Users/johnb/source/repos/odin-frogger/build/web",
		"/C/Users/johnb/source/repos/odin-frogger/src",
		"/C/Users/johnb/source/repos/odin-frogger/src/main_web"
	],
	"file_history":
	[
		"/C/Users/johnb/source/repos/odin-frogger/src/utils.odin",
		"/C/Users/johnb/source/repos/odin-frogger/src/asset_sprite_sheet.odin",
		"/C/Users/johnb/source/repos/odin-frogger/build_web.bat",
		"/C/Users/johnb/source/repos/odin-frogger/build_itch.bat",
		"/C/Users/johnb/source/repos/odin-frogger/src/main_web/main_web.odin",
		"/C/Users/johnb/source/repos/odin-frogger/build/web/index.wasm",
		"/C/Users/johnb/source/repos/odin-frogger/src/main_web/index_template.html",
		"/C/Users/johnb/source/repos/odin-frogger/src/main_default/main_default.odin",
		"/C/Users/johnb/source/repos/odin-frogger/src/timer.odin",
		"/C/Users/johnb/source/repos/odin-frogger/src/main_hot_reload/main_hot_reload.odin",
		"/C/Users/johnb/source/repos/odin-frogger/src/utils_web.odin",
		"/C/Users/johnb/source/repos/odin-frogger/TODO",
		"/C/Users/johnb/source/repos/odin-frogger/src/utils_default.odin",
		"/C/Users/johnb/source/repos/odin-frogger/src/main_web/emscripten.odin",
		"/C/Users/johnb/source/repos/odin-frogger/src/levels.odin",
		"/C/Users/johnb/source/repos/odin-frogger/src/rlgrid/grid.odin",
		"/C/Users/johnb/AppData/Roaming/Sublime Text/Packages/Alignment/Base File.sublime-settings",
		"/C/Users/johnb/AppData/Roaming/Sublime Text/Packages/User/Base File.sublime-settings",
		"/C/Users/johnb/source/repos/odin-frogger/src/game.odin",
		"/C/Users/johnb/source/repos/odin-frogger/build_default.bat",
		"/C/Users/johnb/source/repos/odin-frogger/build_hot_reload.bat",
		"/C/Users/johnb/source/repos/odin-frogger/src/pixel_filter.fs",
		"/C/Users/johnb/source/repos/odin-frogger/src/animation.odin",
		"/C/odin-windows-amd64-dev-2025-03/vendor/raylib/raylib.odin",
		"/C/Users/johnb/AppData/Roaming/Sublime Text/Packages/Alignment/Default (Windows).sublime-keymap",
		"/C/Users/johnb/source/repos/odin-frogger/src/package game.odin",
		"/C/Users/johnb/source/repos/odin-frogger/sublime_cheat-sheet",
		"/C/Program Files/Sublime Text/windows-shortcuts",
		"/C/Users/johnb/source/repos/odin-frogger/.gitignore",
		"/C/odin-windows-amd64-dev-2025-03/core/os/os2/file_util.odin",
		"/C/odin-windows-amd64-dev-2025-03/core/os/os2/file.odin",
		"/C/odin-windows-amd64-dev-2025-03/core/io/util.odin",
		"/C/Users/johnb/source/repos/odin-frogger/src/grid.odin",
		"/C/Users/johnb/source/repos/odin-frogger/src/sublime_cheat-sheet",
		"/C/Users/johnb/source/repos/odin-frogger/sublime_odin.sublime-project",
		"/C/Users/johnb/source/repos/odin-frogger/frogger.rdi",
		"/C/Users/johnb/source/repos/odin-frogger/src/TODO",
		"/C/odin-windows-amd64-dev-2025-03/core/os/os.odin",
		"/C/Users/johnb/source/repos/odin-frogger/src/main_hot_reload/build_hot_reload.bat",
		"/C/Users/johnb/source/repos/odin-frogger/main.odin",
		"/C/Users/johnb/source/repos/odin-frogger/game.odin",
		"/C/Users/johnb/source/repos/sublime_odin/sublime_odin.sublime-project",
		"/C/Users/johnb/source/repos/sublime_odin/helo_world.odin",
		"/C/Users/johnb/AppData/Roaming/Sublime Text/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/johnb/AppData/Roaming/Sublime Text/Packages/Default/Default (Windows).sublime-keymap"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 122.0,
		"where_history":
		[
			"",
			"frogger_is_dying_animation_fps",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"level_end_timer",
			"is_frogs_on_lilypads",
			"all_frog",
			"left_warp_location = 2,",
			"left_warp_location = 2",
			"frogger_reset",
			"frogger_start_pos",
			"frogger_reset",
			"global_num",
			"percentage_complete",
			"percentage_full",
			"percentage_compelte",
			"percentage_complete",
			"percentage_compelete",
			"percentage_complete",
			"percentage_compelete",
			"percentage_complete",
			"global_sprite_sh",
			"entities_level_4",
			"snakes",
			"rows_level_4",
			"speed",
			"left_warp",
			"left_warp_location",
			"2.5",
			"otters_by_level",
			"snake",
			"lily_log_to_spawn_on_index",
			"lily_logs_to_spawn_on",
			"Purple_Car",
			"game_init",
			"snake_behaviors[i]",
			"snake_beha",
			"snakes_by",
			"global",
			"entities_by",
			"otter_spawn_descriptions",
			"otters",
			"game_init",
			"libc",
			"game_init",
			"root_state",
			"game_should_run",
			"os2",
			"err",
			"read_entire",
			"read_entier",
			"}",
			"spawn_data",
			"spawn",
			"is_frogs_on_lilypad",
			"is_frog_on_lilypads",
			"true",
			"snakes",
			"isKeyPress",
			"should_process_countdown_timer",
			"timer_attack",
			"otter.",
			"otter",
			"is_otter_out_of_bounds",
			"otters",
			"should_wrap",
			"\t\t\t\t\t",
			":= ",
			"x",
			"did_otter_intersect_with_any_entities",
			"timer_crocodile_peak",
			"should_wrap_index",
			"timer_crocodile_peak",
			"snake_is_offscreen",
			"entity_that_snake_is_on_is_offscreen_and_has_room_for_snake",
			"entity_that_snake_is_on_is_offscreen",
			"snakes",
			"root_game_state",
			"snake_behavior",
			"relative_hitbox",
			"world_hitbox",
			"snakes",
			"Animation_Player_I",
			"Snake_Frame_0",
			"dbg_camera_zoom",
			"lily",
			"global_game_view_pixels_width",
			"skip_next_frame",
			"warp_boundary_extension",
			"volume",
			" 240.0",
			"320.0",
			"begin",
			"be",
			"begin",
			"is_lily_on_left_edge_of_log",
			"lily",
			"}\n",
			"Sprite_Clip_Id",
			"animation_get_frame_sprite_clip",
			"animation_get_frame_sprite_clip_id",
			"animation_player_is_frogger_dying",
			"frogger_is_dying_timer",
			"frogger_is_dying_animation_fps",
			"Frogger_Dying_Ripple_Frame_0",
			"Skull_And_Crossbones",
			"Frogger_Dying_Hit_Frame_0",
			"Animation_Player_Id",
			"Animation_Id",
			"should_process_lily_movement",
			"should_process_lily_lerp_timer",
			"should_process_frogger_lerp_timer",
			"Sprite_Sheet_Clip",
			"sd",
			"diving_turtles_underwater_clip_id",
			" :=",
			"Animation_Id",
			"PRO",
			"global_game_view_pixels_width",
			"game_view_midpoint",
			"screen_width",
			"root_state",
			"turtle",
			"regular_turtles",
			"alligator_hit_box_relative_mouth_open",
			"should_run_simulation",
			"warp_pos_x",
			"warp_pos_on_right_side_x",
			"rectangle.width",
			"entities_by",
			"entities_level_2",
			"global_cell_size"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Sprite_Clip_Name",
			"Animation_Player_Name",
			"Animation_Name",
			"Sprite_Clip_Id",
			"frogger_is_dying_splat_animation_frames",
			"frogger_is_dying_animation_fps",
			"sprite_sheet_clip_purple_car",
			"sprite_sheet_clip_bulldozer",
			"sprite_sheet_clip_yellow_car",
			"animation_get_frame_sprite_clip",
			"animation_get_current_frame",
			"animation_get_duration"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/game.odin",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 97955,
						"regions":
						{
						},
						"selection":
						[
							[
								76547,
								76547
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/odin-frogger/src/game.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 31177.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/asset_sprite_sheet.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3533,
						"regions":
						{
						},
						"selection":
						[
							[
								3250,
								3250
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/odin-frogger/src/asset_sprite_sheet.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1166.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/rlgrid/grid.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4983,
						"regions":
						{
						},
						"selection":
						[
							[
								3147,
								3147
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/odin-frogger/src/rlgrid/grid.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 939.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "TODO",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 452,
						"regions":
						{
						},
						"selection":
						[
							[
								451,
								451
							]
						],
						"settings":
						{
							"lsp_uri": "file:///C:/Users/johnb/source/repos/odin-frogger/TODO",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/main_hot_reload/main_hot_reload.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5171,
						"regions":
						{
						},
						"selection":
						[
							[
								2406,
								2406
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/odin-frogger/src/main_hot_reload/main_hot_reload.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1554.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 48.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"output.Terminus":
	{
		"height": 536.0,
		"history":
		[
		]
	},
	"output.Terminus 2":
	{
		"height": 225.0,
		"history":
		[
		]
	},
	"output.diagnostics":
	{
		"height": 130.0,
		"history":
		[
		]
	},
	"output.exec":
	{
		"height": 446.0,
		"history":
		[
		]
	},
	"output.find_results":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"output.mdpopups":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"pinned_build_system": "odin build debug hot reload",
	"project": "sublime_odin.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"todo",
				"odin-frogger\\TODO"
			],
			[
				"main",
				"odin-frogger\\src\\main_hot_reload\\main_hot_reload.odin"
			],
			[
				"main_",
				"odin-frogger\\src\\main_default\\main_default.odin"
			],
			[
				"sprite",
				"odin-frogger\\src\\asset_sprite_sheet.odin"
			],
			[
				"animatin",
				"odin-frogger\\src\\animation.odin"
			],
			[
				"build",
				"odin-frogger\\build_hot_reload.bat"
			],
			[
				"game",
				"odin-frogger\\src\\game.odin"
			],
			[
				"sheet",
				"odin-frogger\\src\\sublime_cheat-sheet"
			],
			[
				"",
				"sublime_odin.sublime-project"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 222.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
